[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d Contact Tracing App"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "https://travis-ci.org/se-edu/addressbook-level3[image:https://travis-ci.org/AY1920S2-CS2103T-W15-1/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "https://coveralls.io/github/se-edu/addressbook-level3?branch\u003dmaster[image:https://coveralls.io/repos/github/se-edu/addressbook-level3/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "https://www.codacy.com/app/damith/addressbook-level3?utm_source\u003dgithub.com\u0026utm_medium\u003dreferral\u0026utm_content\u003dse-edu/addressbook-level3\u0026utm_campaign\u003dBadge_Grade[image:https://api.codacy.com/project/badge/Grade/fc0b7775cf7f4fdeaf08776f3d8e364a[Codacy Badge]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*Contact Tracing App*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "****"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Contact Tracing APP is a efficient and lightweight tool for contact tracing for government managers and individual users. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "This will help you save countless hours by collecting contact data and generate report automatically. Besides, this application provides a great privacy protect system to prevent privacy leak. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Worring about your health and want to know whether the area you live is safe now? Don\u0027t hesitate and start to try this app now!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "****"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*Who is it for?*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*****"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- The government managers who want to get informantion about epidemic situation for their decision making. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- All citizens who want to know the situation of the spread of virus."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- Database developers who are working for collecting and managing the information about virus spreeading."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*****"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*Features*"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "****"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- Generate detailed reports from the app with several clicks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- Identify anonymous individuals who are highly connected within the society for senior government officer."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- Identify hotpots where people tend to grather within the society."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "- Individual users can get access with their personal information including citizenship ID, name, etc."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "****"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cLearningOutcomes#, Learning Outcomes\u003e\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JKOK005": 1,
      "Yujian-Fu": 26,
      "-": 27
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    implementation group: \u0027com.itextpdf\u0027, name: \u0027kernel\u0027, version: \u00277.0.4\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    implementation group: \u0027com.itextpdf\u0027, name: \u0027layout\u0027, version: \u00277.1.9\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    implementation \u0027org.apache.logging.log4j:log4j-slf4j-impl:2.13.1\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-name\u0027: \u0027AddressBook-Level3\u0027,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/se-edu/addressbook-level3\u0027,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-seedu\u0027: true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 3,
      "-": 155
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Covid-19 contact tracing App - We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "This app was developed as an extension to AddressBook Level 3 was developed by the https://se-edu.github.io/docs/Team.html[se-edu] team."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Johan Kok"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "image::johankok.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "{empty}[http://www.johankzk.com/[homepage]] [https://github.com/JKOK005[github]]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Role: Minion"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Responsibilities: UI + Backend"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Fu Yujian"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "image::yujian.jpeg[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "{empty}[https://github.com/Yujian-Fu[github]]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Role: Minion"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Responsibilities: UI + Backend"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JKOK005": 10,
      "Yujian-Fu": 2,
      "-": 18
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S2-CS2103-W15-1/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Email us* : You can also reach us at `johan.kok@u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 2,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d ContactTracing - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level3/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "By: `Us`      Since: `Mar 2020`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "[width\u003d\"65%\",cols\u003d\"25%,\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|Class | Definition"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| LandingPage     | First display page for user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| Command controller | Parses and executes user command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| Search          | Class that handles individual user search query"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "| Generate Report | Class that generate PDF reports"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "| Model           | Class that handles modelling \u0026 message format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| Storage         | Class that handles all data access"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| ??              | Placeholder for whatever we don\u0027t know needs to be there."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "[[Use-case-diagram]]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Use case diagram"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".Use case diagram for our ContactTracing app"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "image::UseCaseDiagram.png[]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "The functionalities for our application are highlighted in the use case diagram."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "This diagram was enacted based on premilinary brainstorming of our user stories."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Class diagram illustration"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".Class diagram"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "image::ClassDiagram.png[]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Class definitions"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "We created the following classes (and their relationship) in order to fulfil our use cases in \u003c\u003cUse-case-diagram\u003e\u003e."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`ContactTracingMainApp` Entry point to launch our contact tracing application"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`AppUiManager` Handles rendering information to user and response to user input"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`AppMainWindow` Class that sets FXML stage and component arrangements. The class consists of"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "a `CommandBox` for receiving user input , a `ResultDisplay` for displaying feedback to user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "and `BluetoothPingPanel` for rendering search information."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`BluetoothPingPanel` will render different information types, depending on user command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `BluetoothPingSummaryPanel` renders all information regarding `BluetoothPing` model"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `PersonSummaryPanel` renders all information regarding `Person` model"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`AppLogicManager` handles all backend logic for the application."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "It relies on `DaoRouter` to retrieve relevant in-memory storage data."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "At present, we only have two kinds of `InMemoryStorage` classes. All `InMemoryStorage` classes"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "have their data loaded at runtime. Any modifications to the data will not be presisted, in accordance"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "with project requirements for no internet connectivity."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `BluetoothPingStorageAccess` stores all collected `BluetoothPing` traces"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `UserStorageAccess` stores all `Person` objects"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`CommandRouter` routes user requests to relevant `Command` class types, which form the core"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "execution logic of the system."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Each `Command` class uses `Conditions` / `Aggregators` classes to drive the implementation of certain logics"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "and generate PDF report with `ReportGenerator`. For example, we can have a `FilterDangerCommand` first using"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "the `GroupByIDPairsAggregators` to merge and count all collect `BluetoothPings` based on their User ID pairs,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "then pass it through the `DangerConditions` class to infer which User ID Pairs have had too much contact time."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Later, the search result will be passed to  `DangerReportGenerator` to generate report with a table showing"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "all danger ID pairs with summary message. To generate a report, `RecordReader` will be used to illustrate the"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "given search result and pass data points to `PDFWriter` to generate a PDF file with summary on records."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "The return of a successfully executed command is an `AppMessage` class which signals to `AppUiManager`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "how the results should be rendered to the user. The return result of the execution command displayed to"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "the user includes two parts: the execution message and the corresponding instances extracted from the"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d User Launches App"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".When user issues an instruction to the application"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "image::SequenceDiagram.png[]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "When the user launches the application, his request goes through a series of classes"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "as illustrated in the figure above."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Retrieving command / storage"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".Logic for route(request / command) for Command Router"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "image::CommandSequenceDiagram.png[]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Figure illustrates how a command is chosen based on a user defined *COMMAND_WORD*."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "The exact concepts can be applied for selecting the data access object we want to use."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".Logic for route(request / command) for Dao Router"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "image::DaoRouterSequenceDiagram.png[]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Here, the `DaoRouter` infers the type of data access needed by looking at class `AppCommand`."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Routing is done based on whether the `AppCommand` class inherits from the list of avaible storage access classes."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "At present, we only have `BluetoothPingStorageAccess` or `UserStorageAccess`."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d The activities in using this app"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "image::ActivityDiagram.png[]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "ActivityDiagram illustrate the precession handling the input command. For all kinds of commands from"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "the command box, firstly, we deal with the invalid command and exit command. All invalid commands"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "will get a \"Unknown command\" error"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "and the App will be closed with an `exit` command. Then all other valid commands are"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "be parsed and three different types of operator are used to solve the commands according to"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "the command type. The command execution result will be shown in the UIWindow."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Models"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "All our models are stored and loaded at runtime in memory."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`BluetoothPings` class contains the following fields"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "[width\u003d\"65%\",cols\u003d\"25%,\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|Field name | Description"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| epochTs   | Recorded timestamp in Unix Timing"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| userIDs   | User pairs [A, B] for each registered device interaction"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`BluetoothPingsSummary` class is a summary of all user ids recorded"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "[width\u003d\"65%\",cols\u003d\"25%,\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|Field name | Description"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| userIDs   | User pairs [A, B] for each registered device interaction"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| counts    | Total summed instances of all pairs [A, B] in the database"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "`Person` contains personal details of a user"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "[width\u003d\"65%\",cols\u003d\"25%,\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|Field name | Description"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| userID    | Registered user id of the person"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| name      | Person\u0027s name"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| mobile    | Phone number"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| nric      | NRIC identification beginning with S and ending with some alphabet"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "| age       | Person\u0027s age"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Consideration: How can we extend our platform for customization of search features"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Alternative 1 (Current choice): Introduces concepts such as `conditions` and `aggregations` that are used by AppLogic"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Pros: Clean separation of logic"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Pros: Easily extensible to new conditions"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Cons: Added complexity may cause confusing to new users"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Alternative 2: Define fixed use cases and build code on those features"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** Pros: Developers don\u0027t need to be confused with additional concepts"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Cons: Lack of flexibility and extensibility for new featuress"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d Address book lvl 3"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "This project is a fork of Address-book lvl 3 [ref](https://github.com/nus-cs2103-AY1920S2/addressbook-level3)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "(For all use cases below, the *System* is the `Contact tracing app` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Launching the application is as simple as"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "```java"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "java -jar \u003capplication.jar\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "```"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ".. Run the command above"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      }
    ],
    "authorContributionMap": {
      "JKOK005": 89,
      "Yujian-Fu": 33,
      "-": 135
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d ContactTracing - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":releaseUrl: https://github.com/AY1920S2-CS2103-W15-1/main/releases"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":epochTiming: https://www.epochconverter.com"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "By: `Us`      Since: `Mar 2020`      Licence: `MIT`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Gov Tech has recently launched the TraceTogether app to combat the rapid spread of the COVID-19"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "infection. In their app, users who are within certain distances from each other will have"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "their interactions recorded via message exchange using bluetooth."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Our Contact Tracing App is an extension of the TraceTogether app. We forsee a scenario where"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "the government has collected all the user\u0027s (anonymized) bluetooth ping data and can not"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "perform analytics and visulization over them."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "This is for efficient contract tracing, in order to make better policies when it comes to virus spreading control."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Our app allows efficient search over the data and generates a detailed report with record summary for upper"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "management review."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Target audiences"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "We target mostly the analytics teams within government agencies, senior government managers and decision makers"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "are also our potantial users."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d User personas"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Our product is designed for the following personas:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Tech savvy:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "We assume that these users are familiar with technology and mediocre level of programming. They should be comfortable interacting with dashboards and would prefer more control over the software, as compared to the average user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Pressed for timing:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "These users have to manage multiple projects in their day to day task. As such, speed of information retrieval and display is important to the functionality of the product, especially since we are dealing with a situation where a second delay may cause the infection to spread further."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Rich:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "The govt has too much money to throw around. We need not emphasise on cost cutting measures that reduces cost at the expense of system efficiency. We are not dealing with a start up here that lacks the funds needed to pay for our solution."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Believes that security is paramount:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Not saying that security is not important for an application, just that we are dealing with government agencies and personal user data here."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".  Download the latest `ContactTracing.jar` link:{releaseUrl}/releases[here]."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for your Address Book."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ".  All PDF file report will be generated in \u0027./result\u0027 folder."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `from \u003cts: start\u003e to \u003cts: end\u003e`: Searches for all interactions from start to end timestamp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `id is \u003cuser: id\u003e`: Searches for all interactions with the user ID"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `pairs \u003cuser1: id\u003e and \u003cuser2: id\u003e`: Searches for all interactions with the containing user 1 and user 2"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `danger \u003cthreshold: counts\u003e`: Searches for user pairs which has occured more than *threshold"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `person`: Shows all registered users in the system"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `person_by \u003cperson: id\u003e`: Shows all information wrt to a user"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `person_add /name \u003cperson: name\u003e /mobile \u003cperson: mobile\u003e /nric \u003cperson: nric\u003e /age \u003cperson: age\u003e`: Adds a new user to the system"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* `person_delete /userid \u003cperson: id\u003e`: Deletes an existing user to the system"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". With commands introduced above, users can save data points and summary into a PDF report."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". All reports will be saved to the ./result folder."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* `report from \u003cts:start\u003e to \u003cts:end\u003e` : Generate a report with all interaction in tha time range."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* `report id is \u003cuser: id\u003e`: Generate a report with all interactions with a given user ID."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* `report pairs \u003cuser1: id\u003e and \u003cuser2: id\u003e`: Generate a report with all interactions containing user1 and user2."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* `report danger \u003cthreshold: counts\u003e`: Generate a report with all danger cases."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* `report all`: Generate a report with all interaction cases."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *`exit`* : Exits the app."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Querying over collected trace data"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Searching over timestamp : `From`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Retrieves collected trace data based on by timestamp filter."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `from \u003cts: start\u003e to \u003cts: end\u003e`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* To view recorded pings from Epoch 1500000000 - 1500001000 : `from 1500000000 to 1500001000`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* To view all pings : `from 1 to 1500100000`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*Note: Currently accepted timestamp is in epoch timing."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "For example on how to use the timing, refer link:{epochTiming}[here]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Searching over user ID : `id is`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Retrieves all trace data based on a given user id"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `id is \u003cuser: id\u003e`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Example: `id is 1`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*Note: Currently we add 20 users into our database with userID from 1 to 20."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Searching over user ID pairs : `pairs`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Retrieves all trace data that contains interactions between 2 user pairs"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `pairs \u003cuser1: id\u003e and \u003cuser2: id\u003e`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `pairs 1 and 12`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Searching for danger signs : `danger`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Identifies user pairs that are most at risk, based on occurrence spanning more than a threshold count."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "These individuals are obviously not practicing good social distancing and are a threat to the community."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `danger \u003cthreshold: counts\u003e`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `danger 5` will flag out user pairs which are present more than 5 times"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Querying user related information"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Searching all users: `person`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Shows all users registered in the system"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `person`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Filtering by user: `person_by`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Applies a filter to perform quick search on a user"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `person_by \u003cperson: id\u003e`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Example: `person_by 1` will find information on user ID 1"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Adding a new user: `person_add`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Registers a new user to the system"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `person_add /name \u003cperson: name\u003e /mobile \u003cperson: mobile\u003e /nric \u003cperson: nric\u003e /age \u003cperson: age\u003e`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `person_add /name John David /mobile 9213 /nric S1323923P /age 50` adds a new user with fields"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Constraints"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* Sequence must abide in sequence /name, /mobile, /nric, /age"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d\u003d Adding a new user: `person_deletes`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Registers a new user to the system"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Format: `person_delete /userid \u003cperson: id\u003e`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Example: `person_delete /userid 1` deletes any record with user ID 1"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d Generating reports"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Reporting all instances: `report all`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Report all interaction instances in database."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `report all`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Reporting over time range: `report time`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Generate a report includes all interaction instances in a time range"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Format: `report time from \u003cts: start\u003e to \u003cts:end\u003e`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `report time from 1500000000 to 1500003000`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Report all danger cases: `report danger`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Generate a report with user pairs that are most at risk, based on occurrence spanning more than a threshold count."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Format: `report danger \u003cthreshold: count\u003e`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `report danger 10`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Report user pair cases: `report pairs`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Generate a report includes user pairs with given userIDs"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Format: `report pairs \u003cuser1: id\u003e and \u003cuser2: id\u003e`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `report pairs 1 and 12`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Report user with a given ID: `report id`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Generate a report includes interactions with a specific given ID"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Format: `report id is \u003cuser: id\u003e`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `report id is 1`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Report information of each person in database: `report_person`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Generate a report with the information of all person data points in dababase"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Format: `report_person`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d\u003d Report information of a person with the given ID: `report_person id`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Generate a report with the information of a specific person with a a given ID"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Format: `report_person \u003cpersonID: count\u003e`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Example: `report_person 1`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Help"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Key in `help` to see all possible commands"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*Q*: Does the application need internet to run? +"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*A*: *NO*. We will be using hardcoded data for this project. Any display data you see is meant"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "to simulate actual deployment conditions where our App will receive a steady stream of data."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*Q*: Will my personal data be protected well? +"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*A*: There will be strict authority sytem to prevent privacy leak, Only people who have been"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "granted permission are able to get access to user privacy data and all data published to public will be"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "anonymous."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JKOK005": 84,
      "Yujian-Fu": 67,
      "-": 73
    }
  },
  {
    "path": "docs/team/Yujian.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d YujianFU - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d PROJECT: Contact Tracing"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d Link to RepoSense"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Code contributions can be found in https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-02-14\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dYujian-Fu\u0026tabRepo\u003dAY1920S2-CS2103-W15-1%2Fmain%5Bmaster%5D[RepoSense]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "---"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "The contact tracing app is an extension of the Trace Together app recently developed by GovTech."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "It aims to simplify the way analysts query over data to understand cluster hotspots and individual behaviour."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "This app is built over https://github.com/nus-cs2103-AY1920S2/addressbook-level3[AddressBook - Level 3]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d Feature requests"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: Implement the report generation function of this app. Create PDF file for data visualization."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature \"Generate \"Generate report of saved data points*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *What*: Save all data points stored in database with a brief sommary for visulization."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature *Generate report with given userID*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Pick all interactions which hold the given ID and save them in a PDF report with summary."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "*** This is useful for tracing a particular user and find all contact people of him/her."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature *Generate report with given time range*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Pick all interactions which happens in a given time range and save them in report with summary."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: This is helpful for analysts to understand the virus transmission trends in different time stages."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature *Generate report with a given pair of userID*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Pick all interactions between users with a given pair of userIDs."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: The is helpful for analysts to understand the behavior pattern between two users."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature *Generate report with a given danger threshold*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Pick all pairs which appear more than n times, the given threshold."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: This is useful for indentifying users who contact frequently with each other, breaking the social"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "distance rules."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature *Generate report for user information*"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Save information of all users into a report. Only"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: This is helpful for visualizing user information from database."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add feature *Generate report with a given person ID*"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Save the basic information of person with a give ID into a PDF report."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: This is helpful for identifying a person with person ID."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: add fature *Show help list for easy use*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Show list with all valid commands and its format for guidance."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: This is helpful for all users to use the commands easily."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "* *Major enhancement*: manually add random data points into database to simulate real records"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *What*: Add data points to the database simulating real records for further implementation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** *Justification*: Build record dataset for test and demonstration of all functions in this app."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d Project management"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** Help review code and project documents for project. https://github.com/AY1920S2-CS2103-W15-1/main/pulls[PRs]."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** Filed several https://github.com/AY1920S2-CS2103-W15-1/main/issues[issues] for feature request based on User Stories."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d User Guide contributions"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Refer to https://github.com/AY1920S2-CS2103-W15-1/main/blob/master/docs/UserGuide.adoc[User Guide]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Parts contributed:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Introduction"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Target audiences"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". User personas"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Quick start"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Features"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d Developer Guide contributions"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Refer to https://github.com/AY1920S2-CS2103-W15-1/main/blob/master/docs/DeveloperGuide.adoc[Developer Guide]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Parts contributed:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Setting up"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Design-Architecture"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Class diagram illustration"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ". Models"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "\u003d\u003d\u003d Credits"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "Would like to thank the following for being a great source of help in this project"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** https://itextpdf.com/en/resources/books/itext-7-jump-start-tutorial-java/intro[iText tutorial]"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "** Team member https://github.com/JKOK005[JohanKOK]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 91
    }
  },
  {
    "path": "docs/team/jkok005.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d Johan Kok (JKOK005) - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d PROJECT: Contact Tracing"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Link to RepoSense"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Code contributions can be found in https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-02-14\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dJKOK005\u0026tabRepo\u003dAY1920S2-CS2103-W15-1%2Fmain%5Bmaster%5D[RepoSense]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "---"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "The contact tracing app is an extension of the Trace Together app recently developed by GovTech."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "It aims to simplify the way analysts query over data to understand cluster hotspots and individual behaviour."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "This app is built over https://github.com/nus-cs2103-AY1920S2/addressbook-level3[AddressBook - Level 3]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Feature requests"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: defined *core backend framework of application*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Refractored previous code, adding new concepts such as `Conditions` / `Aggregator` / `InMemoryStorage`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "that form the backbone of new features being introduced to meet user requirements."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Refer to https://github.com/AY1920S2-CS2103-W15-1/main/blob/master/docs/DeveloperGuide.adoc#class-diagram-illustration[Developer Guide] for more details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Present code base does not implement Data Access Objects (DAO) protocols for abstracting data access from the application."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Introducing `Conditions` / `Aggregator` classes allows easy extensibility of code base to accommodate new features."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Highlights*: Team adopted this concept to build features down the road."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *Searching over timestamps*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Picks up all pings in between a timestamp range."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** This is useful for analysts who want to understand interaction patterns across time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *Searching over user ID*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Picks up all pings that contains the user ID."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** This is useful for analysts who want to understand a particular user\u0027s behaviour pattern."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *Searching over user ID pairs*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Picks up all pings that contains a user ID pairs [A, B]."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** This is useful for analysts who want to understand how two users are behaving and whether they are observing social distancing measures."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *danger search*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Given a threshold value, find all user ID pairs that cross it."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Allows quick identification of users who are clearly breaching social distancing rules."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Helps to narrow investigation and containment efforts."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *search over user details*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Displays a full / filtered trace of all registered users stored in the DB."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Helps link bluetooth ping user IDs\u0027 recoded with the actual user for authorities to contact."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *user detail modifications*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Allows the admin to add / delete new users into the system."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Useful when new users sign up / leave the system."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Major enhancement*: added feature *UI panel swapping*"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Displays information on main UI for all `BluetoothPing` and `Person` models."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Designed panel swapping logic to render correct UI panel based on user requests."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Prior AddressBook code base does not allow rendering of different panels to the UI, which our application requires."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "* *Minor enhancement*: Seeded InMemory database with bluetooth / user records."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *What*: Manually added new records to the system that are loaded at runtime."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "*** Helps with the visualization of our application and UI debugging"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Project management"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Managed https://github.com/AY1920S2-CS2103-W15-1/main/releases[release] `v1.0` on Github"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Reviewed team https://github.com/AY1920S2-CS2103-W15-1/main/pulls[PRs] to ensure code quality adherence"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Reported bugs and suggestions for other teams in the class (via Catcher)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Filed several https://github.com/AY1920S2-CS2103-W15-1/main/issues[issues] for feature request based on User Stories."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Timekeeper for team to ensure we meet project milestones (PE Dry-run / Final submission)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Set up jenkins CI/CD for repo"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d User Guide contributions"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Refer to https://github.com/AY1920S2-CS2103-W15-1/main/blob/johan-ppp/docs/UserGuide.adoc[User Guide]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Parts contributed:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Introduction"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Target audiences"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Quick start"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Features"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". FAQ"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Developer Guide contributions"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Refer to https://github.com/AY1920S2-CS2103-W15-1/main/blob/master/docs/DeveloperGuide.adoc[Developer Guide]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Parts contributed:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Setting up"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Design + Architecture"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Class diagram illustration"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Architecture component interactions"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Models"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ". Design considerations EXCEPT:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".. Logging"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ".. Configuration"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003d\u003d\u003d Credits"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "Would like to thank the following for being a great source of help in this project"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** https://stackoverflow.com/[StackOverflow]"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "** Team member @Yujian-Fu"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JKOK005": 138
    }
  },
  {
    "path": "src/main/java/seedu/address/ContactTracingMainApp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.AppLogic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.AppLogicManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.ui.AppUiManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class ContactTracingMainApp extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ContactTracingMainApp.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    protected AppLogic logic;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Contact tracing app ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        initLogging(this.config);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.logic      \u003d new AppLogicManager();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.ui         \u003d new AppUiManager(this.logic);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    + \"Using default config properties\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(\"Starting Contact tracking app \" + ContactTracingMainApp.VERSION);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Contact tracking app ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 92
    }
  },
  {
    "path": "src/main/java/seedu/address/Main.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * This is a workaround for the following error when MainApp is made the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * entry point of the application:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " *     Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * The reason is that MainApp extends Application. In that case, the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * LauncherHelper will check for the javafx.graphics module to be present"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * to be the entry point of the application, we avoid this issue."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Application.launch(ContactTracingMainApp.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 1,
      "-": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/AppUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.ContactTracingMainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A container for App specific utility functions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtil {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(imagePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return new Image(ContactTracingMainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if {@code condition} is false."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void checkArgument(Boolean condition) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!condition) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void checkArgument(Boolean condition, String errorMessage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!condition) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(errorMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 2,
      "-": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/AppLogic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * Contact tracing application logic rendering"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface AppLogic\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppMessage execute(String command) throws ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/AppLogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.commands.AppCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.CommandRouter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.DaoRouter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class AppLogicManager\u003cT, M\u003e implements AppLogic\u003cT\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(AppLogicManager.class);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Asserts that the user must always declare type M which is subclass of {@code AppStorage}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @throws  Exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppLogicManager() throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppMessage execute(String command) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + command + \"]\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        AppCommand appCommand \u003d new CommandRouter().parse(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        AppStorage\u003cT\u003e dao \u003d DaoRouter.getInstance().getStorage(appCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        AppMessage result \u003d appCommand.execute(dao);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JKOK005": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/aggregators/Aggregators.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.aggregators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface Aggregators\u003cT, K\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cK\u003e collect(ArrayList\u003cT\u003e initialList);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/aggregators/GroupByIDPairsAggregators.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.aggregators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class GroupByIDPairsAggregators implements Aggregators\u003cBluetoothPings, BluetoothPingsSummary\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cBluetoothPingsSummary\u003e collect(ArrayList\u003cBluetoothPings\u003e initialList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList\u003cBluetoothPingsSummary\u003e pingsSummary \u003d new ArrayList\u003cBluetoothPingsSummary\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Map\u003cList\u003cInteger\u003e, Long\u003e collection \u003d initialList.stream()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                         .collect(Collectors.groupingBy("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                            BluetoothPings::getUserIDs,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                            Collectors.counting()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                         ));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        collection.forEach("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                (userIdList, threshold) -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    pingsSummary.add(new BluetoothPingsSummary(userIdList, threshold));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return pingsSummary;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AppCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.BluetoothPingsMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface AppCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * To validate that the arguments passed in are sound"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param   arguments           String arguments"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return  AppCommand"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @throws  ParseException      Raise if arguments do not meet the condition"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommand validate(String arguments) throws ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Command interface"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param   dao                 Data access object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return  CommandResult"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppMessage execute(AppStorage dao);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FilterDangerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.aggregators.Aggregators;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.aggregators.GroupByIDPairsAggregators;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.DangerConditions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.BluetoothSummaryMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.BluetoothPingStorageAccess;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class FilterDangerCommand implements AppCommand, BluetoothPingStorageAccess {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int THRESHOLD;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"danger\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cthreshold\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterDangerCommand.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.THRESHOLD \u003d Integer.parseInt(matcher.group(\"threshold\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothSummaryMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new DangerConditions(this.THRESHOLD);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Aggregators\u003cBluetoothPings, BluetoothPingsSummary\u003e agg \u003d new GroupByIDPairsAggregators();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond, agg);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        BluetoothSummaryMessage result \u003d new BluetoothSummaryMessage(\"Identified dangerous users\", false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 50,
      "Yujian-Fu": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FilterPersonCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.PersonIDConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.UserSummaryMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.UserStorageAccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class FilterPersonCommand implements AppCommand, UserStorageAccess {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static int PERSON_ID;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"person_by\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cpersonId\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTimestampCommand.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public FilterPersonCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.PERSON_ID \u003d Integer.parseInt(matcher.group(\"personId\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserSummaryMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new PersonIDConditions(this.PERSON_ID);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        UserSummaryMessage result \u003d new UserSummaryMessage(\"Identifying by user id\", false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FilterTimestampCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.TimestampConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.BluetoothPingsMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.BluetoothPingStorageAccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class FilterTimestampCommand implements AppCommand, BluetoothPingStorageAccess {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static Long START_TIME;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static Long END_TIME;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"from\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cstart\u003e\\\\d+) to (?\u003cend\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTimestampCommand.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public FilterTimestampCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.START_TIME \u003d Long.parseLong(matcher.group(\"start\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.END_TIME   \u003d Long.parseLong(matcher.group(\"end\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new TimestampConditions(this.START_TIME, this.END_TIME);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Filtered by timestamp\", false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FilterUserIDCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.UserIDConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.BluetoothPingsMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.BluetoothPingStorageAccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class FilterUserIDCommand implements AppCommand, BluetoothPingStorageAccess {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static int USER_ID;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"id\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"is (?\u003cuserid\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterUserIDCommand.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public FilterUserIDCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.USER_ID \u003d Integer.parseInt(matcher.group(\"userid\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new UserIDConditions(USER_ID);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Identifying recods with User ID.\", false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JKOK005": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FilterUserPairsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.UserPairsConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.BluetoothPingsMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.BluetoothPingStorageAccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class FilterUserPairsCommand implements AppCommand, BluetoothPingStorageAccess {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int USER_A;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int USER_B;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"pairs\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cuserA\u003e\\\\d+) and (?\u003cuserB\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterUserPairsCommand.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public FilterUserPairsCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.USER_A \u003d Integer.parseInt(matcher.group(\"userA\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.USER_B \u003d Integer.parseInt(matcher.group(\"userB\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new UserPairsConditions(USER_A, USER_B);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Identifying recods with User Pairs.\", false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.HelpCommandMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.CommandList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.BluetoothPingStorageAccess;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class HelpCommand implements AppCommand, BluetoothPingStorageAccess {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public HelpCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        assert (arguments.trim().equals(\"\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public HelpCommandMessage execute(final AppStorage dao)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        HelpCommandMessage result \u003d new HelpCommandMessage(\"Help Guideline for Users\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        ArrayList\u003cCommandList\u003e allCommand \u003d new ArrayList\u003cCommandList\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // Query over bluetooth ping records"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"Timestamp filtering\", \"from \u003cts: start\u003e to \u003cts: end\u003e\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"UserID filtering\", \"id is \u003cuser: id\u003e\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"User pair filtering\", \"pairs \u003cuser1: id\u003e and \u003cuser2: id\u003e\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"Identifying dangerous users\", \"danger \u003cthreshold: counts\u003e\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // Query over user user information"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"Show all user details\", \"person\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"Filter user by ID\", \"person_by \u003cperson: id\u003e\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"New user entry\", \"person_add /name \u003cperson: name\u003e /mobile \u003cperson: mobile\u003e /nric \u003cperson: nric\u003e /age \u003cperson: age\u003e\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        allCommand.add(new CommandList(\"Delete present user ID\", \"person_delete /userid \u003cperson: id\u003e\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // Report generation"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        allCommand.add(new CommandList(\"Report all Users with userID\", \"report all\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        allCommand.add(new CommandList(\"Report danger users\", \"report danger \u003cthreshold: counts\u003e\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        allCommand.add(new CommandList(\"Report cases in time range\", \"report time from \u003cts: start\u003e to \u003cts: end\u003e\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        allCommand.add(new CommandList(\"Report users with a given userID\", \"report id is \u003cuser: id\u003e\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        allCommand.add(new CommandList(\"Report all user information details\", \"report_person\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        allCommand.add(new CommandList(\"Report person information with given ID\", \"report_person \u003cperson: id\u003e\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        result.setToDisplayList(allCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 14,
      "Yujian-Fu": 24,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListAllPersonCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.LiterallyNoConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.UserSummaryMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.UserStorageAccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class ListAllPersonCommand implements AppCommand, UserStorageAccess {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"person\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTimestampCommand.class);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserSummaryMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new LiterallyNoConditions();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        UserSummaryMessage result \u003d new UserSummaryMessage(\"Identifying all user records.\", false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/PersonAddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.LiterallyNoConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.UserSummaryMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.UserStorageAccess;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class PersonAddCommand implements AppCommand, UserStorageAccess {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"person_add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(  \"/name (?\u003cname\u003e\\\\w.*) \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                                    \"/mobile (?\u003cmobile\u003e\\\\d+) \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                                    \"/nric (?\u003cnric\u003e\\\\S+) \" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                                    \"/age (?\u003cage\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Person person;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTimestampCommand.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String name \u003d matcher.group(\"name\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String mobile \u003d matcher.group(\"mobile\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String nric \u003d matcher.group(\"nric\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        int age \u003d Integer.parseInt(matcher.group(\"age\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.person \u003d new Person(name).withNric(nric).withMobile(mobile).withAge(age);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserSummaryMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            dao.create(this.person);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            message \u003d \"User addition successful\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        catch (Exception ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            message \u003d \"User addition failed with \" + ex.getStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new LiterallyNoConditions();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        UserSummaryMessage result \u003d new UserSummaryMessage(message, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/PersonDeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.LiterallyNoConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.PersonIDConditions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.UserSummaryMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.storage.UserStorageAccess;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class PersonDeleteCommand implements AppCommand, UserStorageAccess {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"person_delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"/userid (?\u003cuserid\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int USERID;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTimestampCommand.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        logger.info(String.format(\"Validating: %s\", arguments));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments.trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String error \u003d String.format(\"Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(error);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.USERID \u003d Integer.parseInt(matcher.group(\"userid\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserSummaryMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions deleteCondition \u003d new PersonIDConditions(this.USERID);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList\u003cPerson\u003e candidateToDelete \u003d dao.search(deleteCondition);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        dao.delete(candidateToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        UserSummaryMessage result \u003d new UserSummaryMessage(\"User deleted\", false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions cond \u003d new LiterallyNoConditions();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList resp  \u003d dao.search(cond);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/PersonReportGenerationCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.conditions.LiterallyNoConditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.conditions.PersonIDConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.conditions.UserIDConditions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.BluetoothPingsMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.BluetoothSummaryMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.UserSummaryMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.report.PersonReportGenerator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.UserStorageAccess;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class PersonReportGenerationCommand implements  AppCommand, UserStorageAccess {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"report_person\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static String ConType \u003d \"None\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static int personID;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public PersonReportGenerationCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (arguments.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            this.ConType \u003d \"person\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            Pattern person \u003d Pattern.compile(\"(?\u003cpersonId\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            Matcher m \u003d person.matcher(arguments.trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            if (m.matches()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                this.ConType \u003d \"person_by\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                this.personID \u003d Integer.parseInt(m.group(\"personId\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                String error \u003d String.format(\"report_person Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                throw new ParseException(error);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public AppMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        ArrayList resp \u003d new ArrayList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        switch (this.ConType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"person\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Search all people\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Conditions cond \u003d new LiterallyNoConditions();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp \u003d dao.search(cond);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"person_by\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Search person by ID\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                cond \u003d new PersonIDConditions(this.personID);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp \u003d dao.search(cond);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Wrong Command\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Wrong Command.\", false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (resp.size() \u003e 0)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            PersonReportGenerator generator \u003d new PersonReportGenerator();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                generator.GenerateReport(resp);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Write failed\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                UserSummaryMessage result \u003d new UserSummaryMessage(\"Write failed.\", false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            UserSummaryMessage result \u003d new UserSummaryMessage(\"Saved report file to result folder.\", false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        else"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            UserSummaryMessage result \u003d new UserSummaryMessage(\"No instance in database.\", false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 92
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ReportGenerationCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.aggregators.Aggregators;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.aggregators.GroupByIDPairsAggregators;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.conditions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.BluetoothPingsMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.BluetoothSummaryMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.messages.UserSummaryMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.report.DangerReportGenerator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.report.ReportGenerator;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.AppStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.BluetoothPingStorageAccess;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.storage.UserStorageAccess;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class ReportGenerationCommand implements AppCommand, BluetoothPingStorageAccess {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"report\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static String ConType \u003d \"None\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static int TargetID;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static long StartTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static long EndTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static int ID1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static int ID2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static int Threshold;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static final String CON_TYPE_ERROR \u003d \"Condition type not well defined\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public ReportGenerationCommand validate(String arguments) throws ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (arguments.trim().equals(\"all\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            ConType \u003d \"None\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        else"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            Pattern ID \u003d Pattern.compile(\"id is (?\u003cuserid\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            Matcher m \u003d ID.matcher(arguments.trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            if (m.matches())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                this.TargetID \u003d Integer.parseInt(m.group(\"userid\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                this.ConType \u003d \"ID\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            else"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Pattern Time \u003d Pattern.compile(\"time from (?\u003cstart\u003e\\\\d+) to (?\u003cend\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                m \u003d Time.matcher(arguments.trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                if (m.matches())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    this.StartTime \u003d Long.parseLong(m.group(\"start\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    this.EndTime \u003d Long.parseLong(m.group(\"end\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    this.ConType \u003d \"Time\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                else"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    Pattern pair \u003d Pattern.compile(\"pairs (?\u003cuserA\u003e\\\\d+) and (?\u003cuserB\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    m \u003d pair.matcher(arguments.trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    if (m.matches())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        this.ID1 \u003d Integer.parseInt(m.group(\"userA\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        this.ID2 \u003d Integer.parseInt(m.group(\"userB\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        this.ConType \u003d \"pairs\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        Pattern danger \u003d Pattern.compile(\"danger (?\u003cthreshold\u003e\\\\d+)\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        m \u003d danger.matcher(arguments.trim());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        if (m.matches())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                            this.Threshold \u003d Integer.parseInt(m.group(\"threshold\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                            this.ConType \u003d \"danger\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                                String error \u003d String.format(\"Report Command %s invalid\", arguments);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                                throw new ParseException(error);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public AppMessage execute(AppStorage dao) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        ArrayList resp \u003d new ArrayList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        int DangerFlag \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        switch (this.ConType)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"ID\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Search by ID\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Conditions condID \u003d new UserIDConditions(this.TargetID);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp \u003d dao.search(condID);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"Time\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Search by time\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Conditions condTime \u003d new TimestampConditions(this.StartTime, this.EndTime);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp \u003d dao.search(condTime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"pairs\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Search by pairs\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Conditions condPairs \u003d new UserPairsConditions(this.ID1, this.ID2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp  \u003d dao.search(condPairs);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"danger\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"search by danger\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                DangerFlag \u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Conditions condDanger \u003d new DangerConditions(this.Threshold);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Aggregators\u003cBluetoothPings, BluetoothPingsSummary\u003e agg \u003d new GroupByIDPairsAggregators();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp  \u003d dao.search(condDanger, agg);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            case \"None\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"Search all cases\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                resp \u003d dao.search();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                System.out.println(\"error command\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Wrong Command.\", false);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (DangerFlag \u003d\u003d 1)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            if (resp.size() \u003e 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                DangerReportGenerator generator \u003d new DangerReportGenerator();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    generator.GenerateReport(resp);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    System.out.println(\"Write failed\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    BluetoothSummaryMessage result \u003d new BluetoothSummaryMessage(\"Write failed.\", false);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    return result;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothSummaryMessage result \u003d new BluetoothSummaryMessage(\"Saved report file to result folder.\", false);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            else"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothSummaryMessage result \u003d new BluetoothSummaryMessage(\"No instance in database.\", false);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        else"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            if (resp.size() \u003e 0)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                ReportGenerator generator \u003d new ReportGenerator();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    generator.GenerateReport(resp);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                }catch (Exception e)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Write failed.\", false);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                    return result;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"Saved report file to result folder.\", false);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            else"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothPingsMessage result \u003d new BluetoothPingsMessage(\"No instance in database.\", false);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                result.setToDisplayList(resp);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 193
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/Conditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface Conditions\u003cT\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Given a class, enforce logic to see if certain properties of the class meets the condition"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * This may be used in conjunction with filtering logic"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(T objToTest);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/DangerConditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class DangerConditions implements Conditions\u003cBluetoothPingsSummary\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int THRESHOLD;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public DangerConditions(int threshold) {this.THRESHOLD \u003d threshold;}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(BluetoothPingsSummary objToTest) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return objToTest.getCounts() \u003e\u003d this.THRESHOLD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/LiterallyNoConditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * Literally no conditional filtering is being done here"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * @param \u003cT\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class LiterallyNoConditions\u003cT\u003e implements Conditions\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Like I said. Literally no conditional filtering is being done here."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param   objToTest"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return  Always True"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(T objToTest) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/PersonIDConditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class PersonIDConditions implements Conditions\u003cPerson\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int personId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public PersonIDConditions(int personId) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.personId  \u003d personId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(Person objToTest) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.personId \u003d\u003d objToTest.getUserId();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/TimestampConditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class TimestampConditions implements Conditions\u003cBluetoothPings\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Long start;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Long end;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public TimestampConditions(Long start, Long end) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.start  \u003d start;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.end    \u003d end;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(BluetoothPings objToTest) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Long timestamp \u003d objToTest.getEpochTs();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.start \u003c\u003d timestamp \u0026\u0026 timestamp \u003c\u003d this.end;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/UserIDConditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class UserIDConditions implements Conditions\u003cBluetoothPings\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int userid;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserIDConditions(int userid) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.userid \u003d userid;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(BluetoothPings objToTest) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return objToTest.getUserIDs().contains(this.userid);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/conditions/UserPairsConditions.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.conditions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class UserPairsConditions implements Conditions\u003cBluetoothPings\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int USER_A;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int USER_B;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserPairsConditions(int USER_A, int USER_B) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.USER_A \u003d USER_A;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.USER_B \u003d USER_B;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean satisfies(BluetoothPings objToTest) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return objToTest.getUserIDs().contains(this.USER_A) \u0026\u0026 objToTest.getUserIDs().contains(this.USER_B);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/messages/AppMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public abstract class AppMessage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String IDENTIFIER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public abstract Boolean getRenderFlag();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public abstract String getIdentifier();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public abstract ObservableList getDisplayAsObservable();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public abstract String getFeedbackToUser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/messages/BluetoothPingsMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingsMessage extends AppMessage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ArrayList\u003cBluetoothPings\u003e toDisplayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Boolean RENDER_FLAG;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final String IDENTIFIER \u003d \"BluetoothPings\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsMessage(String feedbackToUser, boolean exit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.RENDER_FLAG \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsMessage(String feedbackToUser) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this(feedbackToUser, false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean getRenderFlag() { return this.RENDER_FLAG; }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getIdentifier() { return this.IDENTIFIER; }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ObservableList getDisplayAsObservable() { return FXCollections.observableArrayList(this.toDisplayList); }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * A display list contains the necessary items needed to be rendered on the screen"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * If this function is called, we set the RENDER_FLAG to true as signal that there is something to be displayed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param displayList   List to be rendered on the screen"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void setToDisplayList(ArrayList\u003cBluetoothPings\u003e displayList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.toDisplayList  \u003d displayList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.RENDER_FLAG    \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!(other instanceof BluetoothPingsMessage)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        BluetoothPingsMessage otherCommandResult \u003d (BluetoothPingsMessage) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return Objects.hash(feedbackToUser, exit);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 82
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/messages/BluetoothSummaryMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothSummaryMessage extends AppMessage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ArrayList\u003cBluetoothPingsSummary\u003e toDisplayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Boolean RENDER_FLAG;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final String IDENTIFIER \u003d \"BluetoothPingsSummary\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothSummaryMessage(String feedbackToUser, boolean exit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.RENDER_FLAG \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothSummaryMessage(String feedbackToUser) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this(feedbackToUser, false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean getRenderFlag() { return this.RENDER_FLAG; }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getIdentifier() { return this.IDENTIFIER; }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ObservableList getDisplayAsObservable() { return FXCollections.observableArrayList(this.toDisplayList); }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * A display list contains the necessary items needed to be rendered on the screen"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * If this function is called, we set the RENDER_FLAG to true as signal that there is something to be displayed"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param displayList   List to be rendered on the screen"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void setToDisplayList(ArrayList\u003cBluetoothPingsSummary\u003e displayList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.toDisplayList  \u003d displayList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.RENDER_FLAG    \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!(other instanceof BluetoothPingsMessage)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        BluetoothSummaryMessage otherCommandResult \u003d (BluetoothSummaryMessage) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return Objects.hash(feedbackToUser, exit);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/messages/HelpCommandMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.logic.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.CommandList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class HelpCommandMessage extends  AppMessage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    private  final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    private ArrayList\u003cCommandList\u003e toDisplayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    private Boolean RENDER_FLAG;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final String IDENTIFIER \u003d \"HelpList\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public HelpCommandMessage(String feedbackToUser, boolean exit)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        this.RENDER_FLAG \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public HelpCommandMessage(String feedbackToUser)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        this(feedbackToUser, false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public String getFeedbackToUser()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public Boolean getRenderFlag()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return this.RENDER_FLAG;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public String getIdentifier()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return this.IDENTIFIER;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public ObservableList getDisplayAsObservable()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return FXCollections.observableArrayList(this.toDisplayList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void setToDisplayList(ArrayList\u003cCommandList\u003e displayList)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        this.toDisplayList \u003d displayList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        this.RENDER_FLAG \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public boolean isExit()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public boolean equals(Object other)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (other \u003d\u003d this)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!(other instanceof HelpCommandMessage))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        HelpCommandMessage otherCommandResult \u003d (HelpCommandMessage) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public int hashCode()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        return Objects.hash(feedbackToUser, exit);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 6,
      "Yujian-Fu": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/messages/UserSummaryMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class UserSummaryMessage extends AppMessage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ArrayList\u003cPerson\u003e toDisplayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Boolean RENDER_FLAG;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final String IDENTIFIER \u003d \"UserSummary\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserSummaryMessage(String feedbackToUser, boolean exit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.RENDER_FLAG \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public UserSummaryMessage(String feedbackToUser) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this(feedbackToUser, false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean getRenderFlag() { return this.RENDER_FLAG; }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getIdentifier() { return this.IDENTIFIER; }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ObservableList getDisplayAsObservable() { return FXCollections.observableArrayList(this.toDisplayList); }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * A display list contains the necessary items needed to be rendered on the screen"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * If this function is called, we set the RENDER_FLAG to true as signal that there is something to be displayed"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param displayList   List to be rendered on the screen"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void setToDisplayList(ArrayList\u003cPerson\u003e displayList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.toDisplayList  \u003d displayList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.RENDER_FLAG    \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!(other instanceof BluetoothPingsMessage)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        UserSummaryMessage otherCommandResult \u003d (UserSummaryMessage) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return Objects.hash(feedbackToUser, exit);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 83
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandRouter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class CommandRouter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, this.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        case ReportGenerationCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            return new ReportGenerationCommand().validate((arguments));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case FilterTimestampCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new FilterTimestampCommand().validate(arguments);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case FilterUserIDCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new FilterUserIDCommand().validate(arguments);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case FilterUserPairsCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new FilterUserPairsCommand().validate(arguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case FilterDangerCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new FilterDangerCommand().validate(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case ListAllPersonCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new ListAllPersonCommand().validate(arguments);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case FilterPersonCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new FilterPersonCommand().validate(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case PersonAddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new PersonAddCommand().validate(arguments);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case PersonDeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new PersonDeleteCommand().validate(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        case PersonReportGenerationCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            return new PersonReportGenerationCommand().validate(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return new HelpCommand().validate(arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 59,
      "Yujian-Fu": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/BluetoothPings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.model.bluetooth;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPings {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Long epochTs;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private List\u003cInteger\u003e userIDs;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPings(Long epochTs, List\u003cInteger\u003e userPairs) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.epochTs \u003d epochTs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.userIDs \u003d userPairs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public List\u003cInteger\u003e getUserIDs() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.userIDs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Long getEpochTs() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.epochTs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/BluetoothPingsSummary.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.model.bluetooth;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingsSummary {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private List\u003cInteger\u003e userIDs;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Long counts;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsSummary(List\u003cInteger\u003e userPairs, Long counts) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.userIDs \u003d userPairs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.counts \u003d counts;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public List\u003cInteger\u003e getUserIDs() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.userIDs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Long getCounts() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.counts;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/CommandList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.model.bluetooth;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class CommandList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private String instructions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private String commandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public CommandList(String CommandType, String instructions) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.commandType \u003d CommandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getInstructions() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.instructions;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getCommandType() {return this.commandType;}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 8,
      "Yujian-Fu": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/Person.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.model.bluetooth;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int userId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private String mobile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private String nric;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private int age;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Person(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.name   \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Person withUserId(int userId) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.userId \u003d userId;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Person withNric(String nric) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.nric   \u003d nric;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Person withMobile(String number) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.mobile \u003d number;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Person withAge(int age) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public int getUserId() { return this.userId; }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getNric() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.nric;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String getMobile() { return this.mobile; }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public int getAge() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.age;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean equals(Person obj) { return this.nric.equals(obj.getNric()); }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/Timestamps.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.model.bluetooth;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.formatter.DateFormatterInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.formatter.SimpleDateFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class Timestamps {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Long timestamp;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private DateFormatterInterface formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Creates a timestamp class initialized to an epoch timing"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Epoch timings are chosen by default and conversion to other timings / strings will use this value as ground truth"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param epochTs   Timestamp in unix epoch format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Timestamps(Long epochTs) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.timestamp \u003d epochTs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.formatter \u003d new SimpleDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Defines if the given timestamp is greater or equal to a relative value"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param epochStart   Lower limit value"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return              Is this timestamp greater or equal to the lower limit?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean isGreaterOrEq(int epochStart) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.timestamp \u003e\u003d epochStart;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Defines if the given timestamp is smaller or equal to a relative value"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param epochEnd      Upper limit value"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return              Is this timestamp smaller or equal than the upper limit?"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean isSmallerOrEq(int epochEnd) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.timestamp \u003c\u003d epochEnd;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Defines if the given timestamp is within a bounded window of timing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param epochStart    Start of the window"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param epochEnd      End of the window"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return              Is this timestamp bounded within the window?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Boolean isBound(int epochStart, int epochEnd){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.isGreaterOrEq(epochStart) \u0026\u0026 this.isSmallerOrEq(epochEnd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Makes the timestamp nice looking cause people hate numbers"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return              Formatted timestamp string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String display() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.formatter.format(this.timestamp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/formatter/DateFormatterInterface.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.model.bluetooth.formatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface DateFormatterInterface {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String format(long epochTs);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/model/bluetooth/formatter/SimpleDateFormatter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.model.bluetooth.formatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class SimpleDateFormatter implements DateFormatterInterface {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public String format(long epochTs) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Date date \u003d new Date(epochTs);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yy\", Locale.US);  // IDK what I\u0027m doing here. All I know is that I am converting the epoch timestamp to some timezone."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return format.format(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/report/DangerReportGenerator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.font.PdfFont;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.font.PdfFontFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.geom.PageSize;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.PdfDocument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.PdfWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.Document;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.element.Paragraph;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.element.Table;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.canvas.PdfCanvas;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class DangerReportGenerator {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static final String DEST \u003d \"results/report.pdf\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void GenerateReport(ArrayList\u003cBluetoothPingsSummary\u003e resp) throws IOException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        File file \u003d new File(DEST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        new DangerReportGenerator().createPdf(DEST, resp);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void createPdf(String dest, ArrayList\u003cBluetoothPingsSummary\u003e resp) throws IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        PdfWriter writer \u003d new PdfWriter(dest);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        PdfDocument pdf \u003d new PdfDocument(writer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Document document \u003d new Document(pdf, PageSize.A4.rotate());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.setMargins(20, 20, 20, 20);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        float [] pointColumnWidths \u003d {150F, 150F, 150F};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Table table \u003d new Table(pointColumnWidths);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"Counts\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"ID1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"ID2\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Set IDSet \u003d new HashSet();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (resp.size() \u003e 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            for (int i \u003d 0; i \u003c resp.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                BluetoothPingsSummary instance \u003d resp.get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getCounts() + \"\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                List\u003cInteger\u003e epochTimes \u003d instance.getUserIDs();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(epochTimes.get(0) + \"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                IDSet.add(epochTimes.get(0) + \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(epochTimes.get(1) + \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                IDSet.add(epochTimes.get(1) + \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"CONTACT TRACING REPORT\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"----------------------------------------------\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Paragraph paragraph \u003d new Paragraph(\"This is the report for dangerous cases\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(paragraph);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        String TextString \u003d \"The ID included in this report are:\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Iterator it \u003d IDSet.iterator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        while (it.hasNext())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            TextString \u003d TextString + \"   \" + it.next();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph((TextString)));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"----------------------------------------------\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(table);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 91
    }
  },
  {
    "path": "src/main/java/seedu/address/report/PersonReportGenerator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.font.PdfFont;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.font.PdfFontFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.geom.PageSize;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.PdfDocument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.PdfWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.Document;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.element.Paragraph;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.element.Table;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.canvas.PdfCanvas;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class PersonReportGenerator {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static final String DEST \u003d \"results/report.pdf\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void GenerateReport(ArrayList\u003cPerson\u003e resp) throws IOException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        File file \u003d new File(DEST);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        new PersonReportGenerator().createPdf(DEST, resp);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void createPdf(String dest, ArrayList\u003cPerson\u003e resp) throws IOException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        PdfWriter writer \u003d new PdfWriter(dest);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        PdfDocument pdf \u003d new PdfDocument(writer);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Document document \u003d new Document(pdf, PageSize.A4.rotate());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.setMargins(20, 20, 20, 20);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        float [] pointColumnWidths \u003d {150F, 150F, 150F, 150F, 150F};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Table table \u003d new Table(pointColumnWidths);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"Name\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"ID\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"NRIC\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"Age\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"Contact\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (resp.size() \u003e 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            for (int i \u003d 0; i \u003c resp.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                Person instance \u003d resp.get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getName()+ \"\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getUserId() + \"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getNric()+ \"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getAge()+ \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getMobile() + \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"CONTACT TRACING REPORT\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"----------------------------------------------\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"This is the report for person information\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"The total number of instances in this report is: \" + resp.size()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"----------------------------------------------\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(table);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 80
    }
  },
  {
    "path": "src/main/java/seedu/address/report/ReportGenerator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "package seedu.address.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.font.PdfFont;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.font.PdfFontFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.geom.PageSize;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.PdfDocument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.PdfWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.Document;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.element.Paragraph;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.layout.element.Table;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import com.itextpdf.kernel.pdf.canvas.PdfCanvas;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "public class ReportGenerator {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public static final String DEST \u003d \"results/report.pdf\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void GenerateReport(ArrayList\u003cBluetoothPings\u003e resp) throws IOException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        File file \u003d new File(DEST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        new ReportGenerator().createPdf(DEST, resp);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    public void createPdf(String dest, ArrayList\u003cBluetoothPings\u003e resp) throws IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        PdfWriter writer \u003d new PdfWriter(dest);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        PdfDocument pdf \u003d new PdfDocument(writer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Document document \u003d new Document(pdf, PageSize.A4.rotate());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.setMargins(20, 20, 20, 20);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        float [] pointColumnWidths \u003d {150F, 150F, 150F};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Table table \u003d new Table(pointColumnWidths);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"Time\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"ID1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        table.addCell(\"ID2\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Set IDSet \u003d new HashSet();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        BluetoothPings instance \u003d resp.get(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        if (resp.size() \u003e 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            for (int i \u003d 0; i \u003c resp.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                instance \u003d resp.get(i);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(instance.getEpochTs() + \"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                List\u003cInteger\u003e epochTimes \u003d instance.getUserIDs();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(epochTimes.get(0) + \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                IDSet.add(epochTimes.get(0) + \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                table.addCell(epochTimes.get(1) + \"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                IDSet.add(epochTimes.get(1) + \"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"CONTACT TRACING REPORT\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"----------------------------------------------\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Paragraph paragraph \u003d new Paragraph(\"The total number of instances in this report is: \" + resp.size());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(paragraph);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        String TextString \u003d \"The ID included in this file are:\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        Iterator it \u003d IDSet.iterator();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        while (it.hasNext())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "            TextString \u003d TextString + \"   \" + it.next();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph((TextString)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(new Paragraph(\"----------------------------------------------\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.add(table);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "        document.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 92
    }
  },
  {
    "path": "src/main/java/seedu/address/router/UiRouter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.router;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class UiRouter implements Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/AppStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.aggregators.Aggregators;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface AppStorage\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search(T obj);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void create(T obj) throws Exception;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void delete(ArrayList\u003cT\u003e objs);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void delete(T obj);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void update(T objPast, T objNew);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Performs an aggregated search over records passed in to identify groups of records which satisfies a condition"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param   cond            {@code Condition} interface"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *          agg             Aggregation logic"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return  ArrayList\u003cT\u003e    Filtered results"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search(Conditions cond, Aggregators agg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Given a condition, return all valid objects"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param   cond            {@code Condition} interface"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return  ArrayList\u003cT\u003e    Filtered results"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search(Conditions cond);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/BluetoothPingStorageAccess.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * Interface to enable access policy for command classes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * Implementing this interface allows the command class to gain access to the underlying DAO storage"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface BluetoothPingStorageAccess {}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/BluetoothPingsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingsStorage extends InMemoryStorage\u003cBluetoothPings\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingsStorage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.init();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * TODO: Would be nice if can read from JSON file to initialize fake data"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ArrayList\u003cBluetoothPings\u003e genFakeData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList\u003cBluetoothPings\u003e fakePings \u003d new ArrayList\u003cBluetoothPings\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000000L, Arrays.asList(11, 2)));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000100L, Arrays.asList(14, 9)));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000100L, Arrays.asList(3, 5)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000200L, Arrays.asList(6, 18)));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000200L, Arrays.asList(4, 19)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000200L, Arrays.asList(6, 20)));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000300L, Arrays.asList(12, 3)));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000400L, Arrays.asList(4, 15)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000400L, Arrays.asList(16, 8)));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000400L, Arrays.asList(4, 7)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000500L, Arrays.asList(12, 10)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000500L, Arrays.asList(3, 14)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000500L, Arrays.asList(12, 7)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000400L, Arrays.asList(9, 10)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000500L, Arrays.asList(15, 8)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000600L, Arrays.asList(6, 7)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000700L, Arrays.asList(8, 9)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500000800L, Arrays.asList(11, 9)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500001000L, Arrays.asList(4, 17)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500001300L, Arrays.asList(12, 8)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500001500L, Arrays.asList(5, 8)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500001700L, Arrays.asList(3, 19)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500001900L, Arrays.asList(12, 7)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500003000L, Arrays.asList(14, 9)));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500003200L, Arrays.asList(2, 9)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500003500L, Arrays.asList(13, 8)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500003700L, Arrays.asList(5, 6)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500003900L, Arrays.asList(14, 10)));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500004500L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500004900L, Arrays.asList(2, 13)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500005000L, Arrays.asList(14, 7)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500005500L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500005800L, Arrays.asList(14, 9)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500006000L, Arrays.asList(11, 2)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500007000L, Arrays.asList(3, 19)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500007500L, Arrays.asList(15, 7)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500008000L, Arrays.asList(18, 10)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500008300L, Arrays.asList(6, 9)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500008400L, Arrays.asList(2, 14)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500008600L, Arrays.asList(17, 9)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500008900L, Arrays.asList(13, 4)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500009000L, Arrays.asList(5, 16)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500009300L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500009400L, Arrays.asList(9, 20)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500009500L, Arrays.asList(13, 6)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500009600L, Arrays.asList(7, 18)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500010000L, Arrays.asList(2, 7)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500011000L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500011500L, Arrays.asList(11, 8)));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500011600L, Arrays.asList(13, 4)));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500012000L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500013000L, Arrays.asList(2, 10)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500013500L, Arrays.asList(15, 8)));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500015000L, Arrays.asList(8, 9)));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500017000L, Arrays.asList(1, 12)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500020100L, Arrays.asList(14, 9)));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500023100L, Arrays.asList(3, 5)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500022200L, Arrays.asList(16, 8)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500025200L, Arrays.asList(4, 19)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500027200L, Arrays.asList(6, 10)));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500029300L, Arrays.asList(12, 3)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500032400L, Arrays.asList(14, 5)));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500034400L, Arrays.asList(6, 18)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500039400L, Arrays.asList(4, 17)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500043500L, Arrays.asList(2, 10)));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500045500L, Arrays.asList(13, 4)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500046500L, Arrays.asList(12, 7)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500049400L, Arrays.asList(19, 10)));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500050500L, Arrays.asList(5, 8)));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500054600L, Arrays.asList(6, 7)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500055700L, Arrays.asList(8, 19)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500058800L, Arrays.asList(1, 19)));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500064000L, Arrays.asList(4, 17)));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500065300L, Arrays.asList(2, 8)));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500068500L, Arrays.asList(15, 8)));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500070700L, Arrays.asList(3, 9)));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500071900L, Arrays.asList(12, 7)));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500074000L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500076200L, Arrays.asList(2, 19)));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500078500L, Arrays.asList(3, 8)));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500080700L, Arrays.asList(5, 6)));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500081900L, Arrays.asList(4, 20)));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500083500L, Arrays.asList(6, 18)));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500085900L, Arrays.asList(12, 3)));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500086000L, Arrays.asList(4, 7)));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500089500L, Arrays.asList(16, 8)));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500090800L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500091000L, Arrays.asList(11, 2)));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500098000L, Arrays.asList(3, 9)));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500100500L, Arrays.asList(5, 17)));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500128000L, Arrays.asList(8, 10)));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500148300L, Arrays.asList(6, 19)));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500168400L, Arrays.asList(2, 4)));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500188600L, Arrays.asList(17, 9)));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500208900L, Arrays.asList(13, 4)));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500289000L, Arrays.asList(5, 6)));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500309300L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500359400L, Arrays.asList(9, 10)));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500389500L, Arrays.asList(13, 6)));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500400000L, Arrays.asList(7, 8)));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500412000L, Arrays.asList(4, 19)));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500433000L, Arrays.asList(2, 10)));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500443500L, Arrays.asList(5, 18)));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500425000L, Arrays.asList(8, 9)));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500457000L, Arrays.asList(1, 12)));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500470100L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500493100L, Arrays.asList(13, 5)));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500502200L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500555200L, Arrays.asList(14, 9)));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500597200L, Arrays.asList(6, 10)));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500609300L, Arrays.asList(2, 3)));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500612400L, Arrays.asList(14, 5)));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500634400L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500659400L, Arrays.asList(4, 17)));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500673500L, Arrays.asList(2, 10)));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500695500L, Arrays.asList(13, 4)));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500706500L, Arrays.asList(2, 7)));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500729400L, Arrays.asList(19, 10)));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500730500L, Arrays.asList(5, 8)));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500744600L, Arrays.asList(16, 7)));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1507065700L, Arrays.asList(8, 9)));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500788800L, Arrays.asList(11, 9)));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500794000L, Arrays.asList(4, 7)));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500815300L, Arrays.asList(2, 18)));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500838500L, Arrays.asList(15, 8)));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500840700L, Arrays.asList(3, 9)));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500851900L, Arrays.asList(12, 7)));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500864000L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500876200L, Arrays.asList(12, 9)));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500878500L, Arrays.asList(3, 8)));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500870700L, Arrays.asList(5, 16)));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500881900L, Arrays.asList(14, 10)));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1508073500L, Arrays.asList(6, 8)));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500895900L, Arrays.asList(12, 3)));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500906000L, Arrays.asList(4, 7)));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500909500L, Arrays.asList(6, 18)));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500900800L, Arrays.asList(4, 9)));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500911000L, Arrays.asList(1, 12)));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500918000L, Arrays.asList(3, 9)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500910500L, Arrays.asList(15, 7)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500928000L, Arrays.asList(8, 10)));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500928300L, Arrays.asList(16, 9)));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500928400L, Arrays.asList(2, 4)));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500948600L, Arrays.asList(17, 9)));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500948900L, Arrays.asList(3, 4)));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500959000L, Arrays.asList(5, 16)));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500969300L, Arrays.asList(16, 8)));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500999400L, Arrays.asList(9, 10)));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500999500L, Arrays.asList(3, 16)));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakePings.add(new BluetoothPings(1500999600L, Arrays.asList(7, 18)));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return fakePings;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.fakeStorage \u003d this.genFakeData();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 176,
      "Yujian-Fu": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/DaoRouter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.commands.AppCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class DaoRouter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final InMemoryStorage\u003cBluetoothPings\u003e bluetoothPingStorage \u003d new BluetoothPingsStorage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final InMemoryStorage\u003cPerson\u003e userStorage \u003d new PersonStorage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static DaoRouter routerSingleton \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Enforcing Singleton design pattern"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private DaoRouter() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Identifies the correct storage to allocate for a given command based on a policy"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param command {@code AppCommand}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return InMemoryStorage     Instantiated DAO class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public InMemoryStorage getStorage(AppCommand command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (command instanceof BluetoothPingStorageAccess) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return bluetoothPingStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        } else if (command instanceof UserStorageAccess) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return userStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static DaoRouter getInstance(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (routerSingleton \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            routerSingleton \u003d new DaoRouter();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return routerSingleton;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/InMemoryStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.aggregators.Aggregators;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.Conditions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.conditions.LiterallyNoConditions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * Storage is maintained in memory"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * All transactions are done via memory"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * This does not work for large scale data but suffices for this project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * @param \u003cT\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public abstract class InMemoryStorage\u003cT\u003e implements AppStorage\u003cT\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    protected ArrayList\u003cT\u003e fakeStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search(T obj) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.fakeStorage.stream()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                .filter(each -\u003e each.equals(obj))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void create(T obj) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList\u003cT\u003e duplicates \u003d this.search(obj);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (duplicates.size() \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw new Exception(\"Person exists in database\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.fakeStorage.add(obj);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void update(T objPast, T objNew) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // TODO: write some code here"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void delete(ArrayList\u003cT\u003e objs) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.fakeStorage.removeAll(objs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void delete(T obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.fakeStorage.remove(obj);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search(Conditions cond, Aggregators agg) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList\u003cT\u003e collection \u003d agg.collect(this.fakeStorage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return collection.stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                        .filter(each -\u003e cond.satisfies(each))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                        .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search(Conditions cond) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return  this.fakeStorage.stream()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                .filter(each -\u003e cond.satisfies(each))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public ArrayList\u003cT\u003e search() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Conditions\u003cT\u003e cond \u003d new LiterallyNoConditions\u003cT\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return this.search(cond);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 73
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/PersonStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class PersonStorage extends InMemoryStorage\u003cPerson\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final AtomicInteger counter \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public PersonStorage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.init();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * TODO: Would be nice if can read from JSON file to initialize fake data"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ArrayList\u003cPerson\u003e genFakeData() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        ArrayList\u003cPerson\u003e fakeStorage \u003d new ArrayList\u003cPerson\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"John Doe\").withUserId(counter.getAndAdd(1)).withNric(\"S91111111Q\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                .withAge(25).withMobile(\"9991\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"John Roe\").withUserId(counter.getAndAdd(1)).withNric(\"S92222222J\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                .withAge(26).withMobile(\"9992\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"John Snow\").withUserId(counter.getAndAdd(1)).withNric(\"S93333333K\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                .withAge(27).withMobile(\"9939\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"John Lim\").withUserId(counter.getAndAdd(1)).withNric(\"S94444444L\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                .withAge(28).withMobile(\"9994\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Adam Smith\").withUserId(counter.getAndAdd(1)).withNric(\"B82222222M\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(24).withMobile(\"9980\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Aidan Johnson\").withUserId(counter.getAndAdd(1)).withNric(\"D2222222L\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(29).withMobile(\"9987\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Anthony Williams\").withUserId(counter.getAndAdd(1)).withNric(\"L10000000C\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(32).withMobile(\"9983\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Bob Jones\").withUserId(counter.getAndAdd(1)).withNric(\"S93333333A\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(31).withMobile(\"9980\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Brown Miller\").withUserId(counter.getAndAdd(1)).withNric(\"R01111111V\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(30).withMobile(\"9979\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Brandon Davis\").withUserId(counter.getAndAdd(1)).withNric(\"X69999999A\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(20).withMobile(\"9975\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Caspar Wilson\").withUserId(counter.getAndAdd(1)).withNric(\"P03333333C\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(21).withMobile(\"9971\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Christian Anderson\").withUserId(counter.getAndAdd(1)).withNric(\"A21111111K\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(29).withMobile(\"9976\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Clark Taylor\").withUserId(counter.getAndAdd(1)).withNric(\"P34444444C\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(24).withMobile(\"9973\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Cody Thompson\").withUserId(counter.getAndAdd(1)).withNric(\"C67777777Z\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(29).withMobile(\"9970\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Colin Moore\").withUserId(counter.getAndAdd(1)).withNric(\"Q53333333I\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(30).withMobile(\"9969\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Darwin Williams\").withUserId(counter.getAndAdd(1)).withNric(\"D78888888C\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(31).withMobile(\"9963\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Dick Anderson\").withUserId(counter.getAndAdd(1)).withNric(\"L93333333C\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(27).withMobile(\"9960\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Paul Miller\").withUserId(counter.getAndAdd(1)).withNric(\"V50000000L\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(12).withMobile(\"9954\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Dennis Brown\").withUserId(counter.getAndAdd(1)).withNric(\"S61111111F\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(22).withMobile(\"9951\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        fakeStorage.add(new Person(\"Duke Jackson\").withUserId(counter.getAndAdd(1)).withNric(\"C54444444X\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "                .withAge(30).withMobile(\"9950\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return fakeStorage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Method injects a unique user ID into a created {@code Person} object"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * This simulates a database with user id as unique ID"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @param   obj            Person object without user id"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @throws  Exception"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void create(Person obj) throws Exception {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Person objWithUserId \u003d obj.withUserId(counter.getAndAdd(1));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super.create(objWithUserId);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.fakeStorage \u003d this.genFakeData();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 67,
      "Yujian-Fu": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/UserStorageAccess.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public interface UserStorageAccess {}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/AppCommandBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class AppCommandBox  extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final AppCommandBox.CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppCommandBox(AppCommandBox.CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private void handleCommandEntered() throws ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        commandExecutor.execute(commandTextField.getText());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "         * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        AppMessage execute(String commandText) throws ParseException;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 9,
      "-": 58
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/AppMainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.AppLogic;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.messages.AppMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class AppMainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML \u003d \"AppMainWindow.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private AppLogic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private BluetoothPingPanel bluetoothPingPanel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private BluetoothPingSummaryPanel bluetoothPingSummaryPanel;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private PersonSummaryPanel personSummaryPanel;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private HelpPanel helpPanel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private StackPane bluetoothPingPanelPlaceholder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private void renderToPanel() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.bluetoothPingPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppMainWindow(Stage primaryStage, AppLogic logic) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public void renderToDisplay(AppMessage commandResult) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        if (commandResult.getRenderFlag()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            this.bluetoothPingPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            if (commandResult.getIdentifier().equals(\"BluetoothPings\")){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.bluetoothPingPanel \u003d new BluetoothPingPanel(commandResult.getDisplayAsObservable());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.bluetoothPingPanelPlaceholder.getChildren().add(this.bluetoothPingPanel.getRoot());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            else if (commandResult.getIdentifier().equals(\"BluetoothPingsSummary\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.bluetoothPingSummaryPanel \u003d new BluetoothPingSummaryPanel(commandResult.getDisplayAsObservable());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.bluetoothPingPanelPlaceholder.getChildren().add(this.bluetoothPingSummaryPanel.getRoot());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            else if (commandResult.getIdentifier().equals(\"UserSummary\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.personSummaryPanel \u003d new PersonSummaryPanel(commandResult.getDisplayAsObservable());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.bluetoothPingPanelPlaceholder.getChildren().add(this.personSummaryPanel.getRoot());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            else if (commandResult.getIdentifier().equals(\"HelpList\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.helpPanel \u003d new HelpPanel(commandResult.getDisplayAsObservable());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                this.bluetoothPingPanelPlaceholder.getChildren().add(this.helpPanel.getRoot());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(this.resultDisplay.getRoot());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        AppCommandBox commandBox \u003d new AppCommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private AppMessage executeCommand(String commandText) throws ParseException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            AppMessage commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            this.renderToDisplay(commandResult);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            logger.warning(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 127
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/AppUiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.logic.AppLogic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.ContactTracingMainApp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class AppUiManager implements Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AppUiManager.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private AppLogic logic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private AppMainWindow mainWindow;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public AppUiManager(AppLogic logic) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            mainWindow \u003d new AppMainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return new Image(ContactTracingMainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, Alert.AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 11,
      "-": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BluetoothPingCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML \u003d \"BluetoothPingCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final BluetoothPings bluetoothPings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label contacts;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label timestamp;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingCard(BluetoothPings bluetoothPings, int displayedIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.bluetoothPings \u003d bluetoothPings;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        contacts.setText(bluetoothPings.getUserIDs().toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        timestamp.setText(bluetoothPings.getEpochTs().toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other) {return true;}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BluetoothPingPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML \u003d \"BluetoothPingPanel.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(BluetoothPingPanel.class);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ListView\u003cBluetoothPings\u003e bluetoothPingsListView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingPanel(ObservableList\u003cBluetoothPings\u003e bluetoothPingsList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        bluetoothPingsListView.setItems(bluetoothPingsList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        bluetoothPingsListView.setCellFactory(listView -\u003e new BluetoothPingsListViewCell());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    class BluetoothPingsListViewCell extends ListCell\u003cBluetoothPings\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        protected void updateItem(BluetoothPings bluetoothPings, boolean empty) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            super.updateItem(bluetoothPings, empty);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            if (empty || bluetoothPings \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(new BluetoothPingCard(bluetoothPings, getIndex() +1).getRoot());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BluetoothPingSummaryCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingSummaryCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML\u003d\"BluetoothPingSummaryCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final BluetoothPingsSummary bluetoothPings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label contacts;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label occurrence;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingSummaryCard(BluetoothPingsSummary bluetoothPingSummary,int displayedIndex){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.bluetoothPings \u003d bluetoothPingSummary;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        contacts.setText(bluetoothPingSummary.getUserIDs().toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        occurrence.setText(bluetoothPingSummary.getCounts().toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other){return true;}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BluetoothPingSummaryPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.BluetoothPingsSummary;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class BluetoothPingSummaryPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML \u003d \"BluetoothPingPanel.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(BluetoothPingSummaryPanel.class);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ListView\u003cBluetoothPingsSummary\u003e bluetoothPingsListView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public BluetoothPingSummaryPanel(ObservableList\u003cBluetoothPingsSummary\u003e bluetoothPingSummaryList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        bluetoothPingsListView.setItems(bluetoothPingSummaryList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        bluetoothPingsListView.setCellFactory(listView -\u003e new BluetoothPingSummaryPanel.BluetoothPingsListViewCell());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    class BluetoothPingsListViewCell extends ListCell\u003cBluetoothPingsSummary\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        protected void updateItem(BluetoothPingsSummary bluetoothPingsSummary, boolean empty) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            super.updateItem(bluetoothPingsSummary, empty);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            if (empty || bluetoothPingsSummary \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(new BluetoothPingSummaryCard(bluetoothPingsSummary, getIndex() +1).getRoot());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.CommandList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class HelpCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML\u003d\"HelpCard.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final CommandList commandList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public HelpCard(CommandList commandList, int displayedIndex){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.commandList \u003d commandList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        commandType.setText(commandList.getCommandType());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        instructions.setText(commandList.getInstructions());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other){return true;}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.CommandList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class HelpPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML \u003d \"HelpPanel.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(HelpPanel.class);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ListView\u003cCommandList\u003e commandListListView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public HelpPanel(ObservableList\u003cCommandList\u003e commandList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        commandListListView.setItems(commandList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        commandListListView.setCellFactory(listView -\u003e new HelpPanel.CommandListViewCell());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    class CommandListViewCell extends ListCell\u003cCommandList\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        protected void updateItem(CommandList commandList, boolean empty) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            super.updateItem(commandList, empty);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            if (empty || commandList \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(new HelpCard(commandList, getIndex() +1).getRoot());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonSummaryCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class PersonSummaryCard extends UiPart\u003cRegion\u003e  {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML\u003d\"PersonSummaryCard.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public final Person person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label userid;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label nric;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label age;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private Label mobile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public PersonSummaryCard(Person person, int displayedIndex){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        name.setText(person.getName());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        nric.setText(person.getNric());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        mobile.setText(person.getMobile());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        age.setText(Integer.toString(person.getAge()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        userid.setText(Integer.toString(person.getUserId()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public boolean equals(Object other){return true;}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonSummaryPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.model.bluetooth.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class PersonSummaryPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String FXML \u003d \"BluetoothPingPanel.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(BluetoothPingSummaryPanel.class);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private ListView\u003cPerson\u003e bluetoothPingsListView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public PersonSummaryPanel(ObservableList\u003cPerson\u003e personSummaryList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        bluetoothPingsListView.setItems(personSummaryList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        bluetoothPingsListView.setCellFactory(listView -\u003e new PersonSummaryPanel.personListViewCell());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    class personListViewCell extends ListCell\u003cPerson\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        protected void updateItem(Person person, boolean empty) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            super.updateItem(person, empty);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            if (empty || person \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                setGraphic(new PersonSummaryCard(person, getIndex() +1).getRoot());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiPart.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import seedu.address.ContactTracingMainApp;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Resource folder where FXML files are stored. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #UiPart(URL)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL and root object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #UiPart(URL, T)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the root object of the scene graph of this UiPart."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public T getRoot() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads the object hierarchy from a FXML document."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param location Location of the FXML document."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Specifies the root of the object hierarchy."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadFxmlFile(URL location, T root) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(location);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        URL fxmlFileUrl \u003d ContactTracingMainApp.class.getResource(fxmlFileNameWithFolder);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 2,
      "-": 85
    }
  },
  {
    "path": "src/main/resources/view/AppMainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "         title\u003d\"Contact Tracing App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cVBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"bluetoothPingPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 44,
      "Yujian-Fu": 1
    }
  },
  {
    "path": "src/main/resources/view/BluetoothPingCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" maxWidth\u003d\"200\" prefWidth\u003d\"20\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Ping timestamp: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"timestamp\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timestamp\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c!--\u003cLabel text\u003d\"\" /\u003e--\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Contact IDs: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"contacts\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 68
    }
  },
  {
    "path": "src/main/resources/view/BluetoothPingPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cListView fx:id\u003d\"bluetoothPingsListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 8
    }
  },
  {
    "path": "src/main/resources/view/BluetoothPingSummaryCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" maxWidth\u003d\"200\" prefWidth\u003d\"20\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c!--\u003cLabel text\u003d\"\" /\u003e--\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Contact IDs: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"contacts\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c!--\u003cLabel text\u003d\"\" /\u003e--\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"No. of times of contact: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"occurrence\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 69
    }
  },
  {
    "path": "src/main/resources/view/HelpCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" maxWidth\u003d\"200\" prefWidth\u003d\"20\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Command type: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"commandType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timestamp\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c!--\u003cLabel text\u003d\"\" /\u003e--\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Instructions: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"instructions\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"20\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 68
    }
  },
  {
    "path": "src/main/resources/view/HelpPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cListView fx:id\u003d\"commandListListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yujian-Fu"
        },
        "content": "         title\u003d\"Contact Tracing App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Yujian-Fu": 1,
      "-": 59
    }
  },
  {
    "path": "src/main/resources/view/PersonSummaryCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" maxWidth\u003d\"200\" prefWidth\u003d\"20\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Name: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"ID: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"userid\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"1\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"NRIC: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"2\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"2\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Age: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"3\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"3\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel text\u003d\"Contact: \" GridPane.columnIndex\u003d\"0\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"4\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003cLabel fx:id\u003d\"mobile\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.columnIndex\u003d\"1\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowIndex\u003d\"4\" GridPane.columnSpan\u003d\"1\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "               GridPane.rowSpan\u003d\"1\" \u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"20\" \u003e\u003c/Font\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"0\"\u003e\u003c/Insets\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 140
    }
  }
]
