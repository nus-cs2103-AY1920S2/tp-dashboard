[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d Study Buddy"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://travis-ci.org/AY1920S2-CS2103T-W16-3/main[image:https://travis-ci.org/AY1920S2-CS2103T-W16-3/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://coveralls.io/github/AY1920S2-CS2103T-W16-3/main?branch\u003dmaster[image:https://coveralls.io/repos/github/AY1920S2-CS2103T-W16-3/main/badge.svg?branch\u003dmaster\u0026service\u003dgithub[Coverage Status]]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://ci.appveyor.com/project/teikjun/main-obe5y/branch/master[image:https://ci.appveyor.com/api/projects/status/01kv1ged83vovfi3/branch/master?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://www.codacy.com/gh/AY1920S2-CS2103T-W16-3/main?utm_source\u003dgithub.com\u0026amp;utm_medium\u003dreferral\u0026amp;utm_content\u003dAY1920S2-CS2103T-W16-3/main\u0026amp;utm_campaign\u003dBadge_Grade[image:https://api.codacy.com/project/badge/Grade/8ff09067ff534489afad2264bade805a[Codacy Badge]]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::images/Ui.png[width\u003d\"600\",title\u003d\"UI Sample Picture, will be updated in ther future\"]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d What is Study Buddy ?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Study Buddy is a task management tool for students who wish to organise their tasks more efficiently."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* With the help of Study Buddy, students can easily view and manage their module related tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Sort, filter and search commands are also provided to make the interaction more useful."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* It also provides services to show the statistics for time, grades breakdown and workload comparison between different modules in Pie charts."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This visualisation of data helps students become more aware of their Pending work and which tasks to spend more time on."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Who can benefit most from Study Buddy?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* It is designed for students who can type fast and are comfortable with `Command-Line Interface(CLI)`."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d What is CLI?"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* CLI is a command line program that accepts text input to execute operating system functions."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* Compare with graphical user interfaces(GUI), CLI performs interaction with user by keyboard input instead of mouse clicking, such as command window."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To browse more information, please check our site map:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Some parts of this application were inspired by the excellent"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by _Marco Jakob_."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* AddressBook-Level3 project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 8,
      "wyt-sonia": 13,
      "-": 23,
      "gx-huang": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "mainClassName \u003d \u0027draganddrop.studybuddy.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    archiveName \u003d \u0027studybuddy.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            linkcss             : true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            stylesheet          : \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            icons               : \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            experimental        : true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            sectlinks           : true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            idprefix            : \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            idseparator         : \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-root\u0027         : \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-name\u0027         : \u0027StudyBuddy\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-githuburl\u0027    : \u0027https://github.com/AY1920S2-CS2103T-W16-3/main\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0027site-draganddrop\u0027        : true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 1,
      "-": 150,
      "gx-huang": 1
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "IVLE was developed by our team that is based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore] +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{empty}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Huang Ge Xiang"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "image::gx-huang.png[width\u003d\"150\",align\u003d \"left\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "{empty}[http://github.com/gx-huang[github]][\u003c\u003cgx-huang#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Responsibilities: Testing + Deadlines"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Wang Yuting"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::wyt-sonia.png[width\u003d\"150\",align\u003d\"left\"]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "{empty}[http://github.com/wyt-sonia[github]][\u003c\u003cwyt-sonia#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Responsibilities: Team Lead + Integration"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Teik Jun Tan"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::teikjun.png[width\u003d\"150\",align\u003d\"left\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "{empty}[http://github.com/teikjun[github]][\u003c\u003cteikjun#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Responsibilities: Team lead (assistant) + Integration + Testing"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::souwmyaa.png[width\u003d\"150\",align\u003d\"left\"]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{empty}[http://github.com/souwmyaa[github]] [\u003c\u003csouwmyaa#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Responsibilities: Documentation + Deliverables + deadlines"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Hong Wen"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::aegis-bot.png[width\u003d\"150\",align\u003d\"left\"]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "{empty}[http://github.com/aegis-bot[github]] [\u003c\u003caegis-bot#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Responsibilities: Code Quality"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 17,
      "aegis-bot": 3,
      "wyt-sonia": 4,
      "-": 29,
      "gx-huang": 3
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S2-CS2103T-W16-3/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Contributing* : We welcome pull requests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* *Email us* : You can also reach us at `e0341280 [at] u.nus.edu`, `e0365980 [at] gmail.com`, `e0325702 [at] u.nus.edu`, `e0325606 [at] u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 2,
      "wyt-sonia": 2,
      "-": 4
    }
  },
  {
    "path": "docs/DevOps.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d Study Buddy - Dev Ops"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":repoURL: https://github.com/AY1920S2-CS2103T-W16-3/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Build Automation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Continuous Integration"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Coverage Reporting"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "We use https://coveralls.io/[Coveralls] to track the code coverage of our projects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation Previews"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Making a Release"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Update the version number in link:{repoURL}/src/main/java/draganddrop/address/MainApp.java[`MainApp.java`]."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ". Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ". Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ". https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Managing Dependencies"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "A project often depends on third-party libraries."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For example, Study Buddy depends on the https://github.com/FasterXML/jackson[Jackson library] for JSON parsing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Managing these _dependencies_ can be automated using Gradle."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For example, Gradle can download the dependencies automatically, which is better than these alternatives:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "[loweralpha]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ". Include those libraries in the repo (this bloats the repo size)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ". Require developers to download those libraries manually (this creates extra work for developers)"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 3,
      "wyt-sonia": 10,
      "-": 41
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d Study Buddy - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":bl: pass:[ +]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":caution-caption: :fire:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":important-caption: :heavy_exclamation_mark:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ":repoURL: https://github.com/AY1920S2-CS2103T-W16-3/main"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":jdk_bug_report: https://bugs.openjdk.java.net/browse/JDK-8198830"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "By: `Team Drag\u0026Drop`      Since: `Jan 2020`     "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::introduction[]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy is a task-management tool made for students who want to be able to track and manage their tasks in one place."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It uses various visualization tools such as pie charts and calendars, provides useful features such as the Due Soon task list, a productivity tracker etc to make task management simple and convenient."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "In particular, Study Buddy is a Command Line Interface (\u003c\u003cCLI,CLI\u003e\u003e) application that also provides some Graphical User Interface (\u003c\u003cGUI,GUI\u003e\u003e). This means that users are expected to interact with their Study Buddy mainly through the command line, but each command executed will evoke a visual response as well."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The purpose of this guide is to help potential developers get up to speed on the Study Buddy code base and functionality. We hope that this document will ease the process of further enhancing and developing Study Buddy."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::introduction[]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d Commonly Used Symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates something you should take note of."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates a tip that you could use."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates an aspect that should be used with caution."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates something to which we want to draw your attention."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//tag::ArchitectureDiagram[]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Given below is a quick overview of each component."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//end::ArchitectureDiagram[]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The `.puml` files used to create diagrams in this document can be found in the link:{repoURL}/tree/master/docs/diagrams[diagrams] folder."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the \u003c\u003cUsingPlantUml#, Using PlantUML guide\u003e\u003e to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "`Main` has two classes called link:{repoURL}/blob/master/src/main/java/draganddrop/studybuddy/Main.java[`Main`] and link:{repoURL}/blob/master/src/main/java/draganddrop/studybuddy/MainApp.java[`MainApp`]."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It is responsible for,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::LogicClassDiagram.png[width \u003d \"800\", length \u003d \"500\"]"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "HiddenModel is used to represent the hidden contents of the Model Component."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::ArchitectureSequenceDiagram.png[width \u003d \"450\"]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::UIComponent[]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::UiClassDiagram.png[width \u003d \"650\" ]"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*API* : link:{repoURL}/tree/master/src/main/java/draganddrop/studybuddy/ui[`Ui.java`]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `UI` consists of a `MainWindow` which is made up by different components such as `StatusBarFooter`, `FeedbackDisplayBox`,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " `CommandBox` as well as variants `Panels` and `Cards`. All these components, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `UI` component uses JavaFx UI framework."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "For example, the layout of the link:{repoURL}/blob/master/src/main/java/draganddrop/studybuddy/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/blob/master/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `UI` component::"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Interacts with user* in an interactive process with the help of `Logic` component."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** `CommandBox` collects the user keyboard input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** `Logic` parses user input in each interaction and executes the command subsequently if the interaction ends without any exception."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** `FeedbackDisplayBox` responses system information to user, such as error message and command execution result."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*** When invalid input received, proper message will respond via `FeedbackDisplayBox`. The interaction of the command will not be terminated, user can continue with the process with valid input."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Listens for changes to Model data* so that the UI can be updated simultaneously."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** All Cards components and `CalenderPanel`, `ModuleListPanel`, `ProductivityPanel` and `TaskSummaryPanel` will listen to"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the changes to Model data."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The command execution will only terminate in two scenarios: +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "1.  When the command is successfully executed. +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "2.  When the user enter `quit` and kbd:[enter] to exit the execution."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::UIComponent[]"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//updated by Teik Jun"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//tag::logicComponent[]"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::LogicClassDiagram.png[width \u003d \"800\" length \u003d \"500\"]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/draganddrop/studybuddy/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". After receiving the user input from Ui, `InteractivePrompt` processes the user\u0027s input."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. If the user input is complicated, `InteractivePrompt` uses `Parser` classes to"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "parse the input."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. If more information is needed from the user, `InteractivePrompt` signals the `Ui`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "component to prompt the user for more information using the `interact` command."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Otherwise, if no more information is needed, proceed to the next step."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ". This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". The command execution can affect the `Model` (e.g. adding or editing a task)."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ". The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying a help message to the user."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `interact(\"list\")` API call."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::ListTaskSequenceDiagram.png[width \u003d \"700\", length \u003d \"600\", title \u003d \"Sequence diagram for list\"]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The lifeline for every member should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//end::logicComponent[]"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//.Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::modelComponent[]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::ModelClassDiagram.png[width \u003d \"500\", length \u003d \"500\"]"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*API* : link:{repoURL}/blob/master/src/main/java/draganddrop/studybuddy/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* stores the Study Buddy data."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::modelComponent[]"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "image::StorageClassDiagram.png[width\u003d\"600\", height\u003d\"400\"]"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*API* : link:{repoURL}/blob/master/src/main/java/draganddrop/studybuddy/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* can save the Study Buddy data in json format and read it back."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* saves all tasks, due soon tasks, archived task, modules and stats."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Classes used by multiple components are in the `draganddrop.studybuddy.commons` package."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::InteractiveCommandProcessFeature[]"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Interactive Command Process Feature"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Feature introduction*"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The Interactive Command Process Feature allows user to execute his/her command in an"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "interactive way."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Implementation detail*"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This feature applies on all commands provided by Study Buddy and is implemented using:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. The `*CommandBox*` from `UI` component to collect user input and init an associate interactivePrompt"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. The `*InteractivePrompt*` from `Logic` component to parse user input step by step and generate meaningful response"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "message accordingly."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It also produces an executable `Command` from each successful interaction to perform the user\u0027s desired action."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... Different types of `InteractivePrompt` such as `AddTaskInteractivePrompt` are provided to handel interactions with different purpose."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::AddTaskObjectDiagram.png[width \u003d \"550\" align\u003d\"center\" title \u003d \"Object diagram when user add task using interactive command process\"]"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... Allow user to quit from each step of an interaction using `quit` (case insensitive) key word. Here is an example of user quiting from add task interactive command process."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::QuitFromInteractionActivityDiagram.png[width \u003d \"550\" align\u003d\"center\" title \u003d \"Activity diagram when user quite from add task interactive command process\"]"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Example Usage Scenario"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Given below is an example usage scenario and how the interactive command process mechanism behaves at each step."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 1. The user launches the application for the first time and skips the user guid."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "By following the hint from `UI` (i.e. when `CommandBox` is idle, it should display \"Please enter your command here...\"),"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "he can try some random input and hit enter to get the list of available commands."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 2. The user picks a command from the list and type it in the `CommandBox`. The guide information of the next step will"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "display in `FeedbackDisplayBox` after user press enter."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For some commands there is only one interaction involved, such as `help` and `list`. In such a case"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the application will execute the command right after user press enter."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 3. The user made a typo mistake in the data and time filed when adding a task record."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Proper massage with the error type and the correct format of the data and time will be displayed in the"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`FeedbackDisplayBox`. User can follow the instruction to continue the interaction."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 4. The user is performing an interaction to edit a task, but realized he/she"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "chose a wrong task from the list, he/she can use `quit` to exit"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the process without making any changes to the task."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How to react to an invalid input"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Alternative 1 (current choice):* provides relevant error message and stays at current interaction step."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *If the next input is*"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Invalid: provides the relevant error message and continue waiting for another input."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Valid: start next interaction step."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- `quit`: quite from the command process."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Pros: Save the data from previous stages, especially in add task interaction, thus user no need to repeatedly"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "enter the same information. Also the clear instruction provided by error message makes the"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "interaction more straightforward. Besides, this approach can improve the typo-tolerance of the application."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Cons: The interaction can only be stopped when user successfully complete the process or use"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`quit` to exit half-way."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* **Alternative 2:** Quite from current step with proper error message."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Pros: Quit the interaction immediately, which allows user to start with a new"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "interaction. It will be useful when user want to quit from a particular process but forgets the exit command"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "(i.e. `quit`)."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Cons: User has to restart the entire interaction process when the he/she enter"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "invalid command."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::InteractiveCommandProcessFeature[]"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "// tag::dueSoon[]"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Due Soon Tasks Feature"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The Due Soon Tasks feature allows users to view the tasks that have deadlines within the next week."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This feature is implemented using a panel on the main window with a list of tasks Due Soon that is updated with every command that may affect Due Soon task list (such as add, delete or archive)."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Some situations that trigger due soon feature are:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". *When user enters a task:*"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. What it does: +"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... When a task that is added to the main list, is due within the next week, it is automatically added to the list of due soon tasks. +"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The list is automatically sorted to be in increasing order of deadlines. +"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The time left for the deadline is also added."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::AddDueSoonActivityDiagram.png[width \u003d \"200\", length \u003d \"300\", title \u003d \"Activity Diagram for Add to Due Soon list\"]"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Details: +"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The add command when entered by the user, triggers the creation of an object of the InteractivePrompt class (in this case AddTaskInteractivePrompt). +"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... In the AddTaskInteractivePrompt class, the data entered by user is parsed. +"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... If there are no errors, the AddTaskCommand object is created which triggers the addTask() function in Model. +"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... This function in turns calls addTask() function in Study Buddy. +"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... This function calls the isDueSoon() function in Task to confirm if the task belong to the due soon list. +"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... If it does, it is added to due soon list and main list, and the due soon list is sorted. Else, it is simply added to the main list."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::AddDueSoonSequence.png[width \u003d \"800\", length \u003d \"600\", title \u003d \"Sequence Diagram for Add to Due Soon list\"]"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The lifeline for every member should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". *When user deletes a task:*"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. What it does:"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... When a task that is deleted from the main list occurs in the due soon list as well, it is automatically deleted."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::DeleteDueSoonActivityDiagram.png[width \u003d \"200\", length \u003d \"300\", title \u003d \"Activity Diagram for Delete from Due Soon list\"]"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Details:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The delete command when entered by the user, triggers the creation of an object of the InteractivePrompt class (in this case DeleteTaskInteractivePrompt)."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... In the DeleteTaskInteractivePrompt class, the data entered by user is parsed."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... If there are no errors, the DeleteTaskCommand object is created which triggers the deleteTask() function in Model."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... This function in turns calls removeTask() function in Study Buddy."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... removeTask() calls the updateDeleteDueSoon() function in StudyBuddy which checks if the task exists in the due soon list."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... If it does, it is deleted from the due soon list and main list. Else, it is simply deleted from the main list."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::DeleteDueSoonSequence.png[width \u003d \"800\", length \u003d \"600\", title \u003d \"Sequence Diagram for Delete from Due Soon list\"]"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The lifeline for every member should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Other commands like edit, archive etc also trigger due soon feature in a similar manner."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". *When user refreshes due soon list:*"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. What it does: +"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Refreshes the list of due soon tasks and status tags. This command is useful for a situation where due soon list is not up to date due to a drastic change in time."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::DueSoonActivityDiagram.png[width \u003d \"500\", length \u003d \"600\", title\u003d \"Activity diagram for refresh\"]"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Details:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The refresh command when entered by the user, triggers the creation of an object of the InteractivePrompt class (in this case RefreshTaskInteractivePrompt)."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... In the RefreshTaskInteractivePrompt class, the data entered by user is parsed."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... If there are no errors, the RefreshCommand object is created which clears the due soon list and then, iterates through the main list and calls addDueSoonTask() in Model, for any tasks that are due soon."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::DueSoonSequenceDiagram.png[width \u003d \"800\", length \u003d \"600\", title \u003d \"Sequence diagram for refresh\"]"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The lifeline for every member should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". *When the application launches:*"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. What it does:"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... It loads the due soon tasks into a panel by filtering tasks that are due soon from the main list."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... This is necessary, because old list of due soon tasks may not be up-to-date."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Details:"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The addTask() function in StudyBuddy class already checks if task is due soon and adds to due soon list (as mentioned above)."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... While all tasks are being added to their respective lists in JsonSerializableStudyBuddy class, the due soon list gets automatically updated."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Calculation of time left for deadline and check for if task is due soon can be found in the Task class."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::dueSoon[]"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Example Usage Scenario"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Given below is an example usage scenario and how the Due Soon list mechanism behaves at each step."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Step 1. The user launches the application for the first time."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The list of tasks Due Soon will be initialized and displayed with the initial study buddy state. Initialization is done by filtering tasks that are Due Soon from the general list of tasks."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Step 2. The user executes `add` command to add a task."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `add` command execution checks if this task belongs in the Due Soon tasks list (i.e it is due in 7 days). If it does, the task is added to both lists, else it is only added to the main list. +"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Step 3. The user executes `delete` command to delete a task."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `delete` command execution also checks if this task exists in the Due Soon task list. If it does, task is deleted from both lists, else it is only deleted from the main list."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Step 4. The user executes `refresh` command to refresh the due soon task list."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The `refresh` command execution will traverse the main list and check if there are any inconsistencies. For example, if there has been a change in time and a task is missing from the due soon task list, it will be added."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It will also update the time left."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If there are no such inconsistencies, the refresh command will not make any changes to the Due Soon task list."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::refresh[]"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How `refresh` command works"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* **Alternative 1 (current choice):** Clear and reload the due soon task list."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Pros: Less prone to errors since the entire list is \"refreshed\"."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Cons: More operation intensive."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* **Alternative 2:** Does not clear and reload the due soon task list."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Pros: Fewer operations need to be performed."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Cons: May have be more prone to errors because list is not completely \"refreshed\". Some parts of it are the same."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "// end::refresh[]"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::taskSummary[]"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Task Summary Feature"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Feature introduction*"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The task summary feature automatically summarizes the collected data into different charts."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It also allows the user to click on a chart to find the relevant tasks."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The UI of the feature is in the `Statistics` Page."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Implementation detail*"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This feature is implemented using `JavaFx` charts such as `PieChart`, `AreaChart` and `StackedBarChart`, as well as a"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`Task List Panel`."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `Task List Panel` is used to show the relevant task records when the user clicks on `charts`."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Table of Charts \u0026 DataBind \u0026 OnClick Action*"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To improve the readability, only the tasks due or start within the next *60 days* will be counted into `Area Chart`."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[cols\u003d\"3,2,3\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Chart Type |Data Used|OnClick Action"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|*PieChart* +"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Compare the number of tasks in different statuses."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|{bl}"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`TaskStatus`, `TaskCount`"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Display all tasks with the selected status."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|*AreaChar* +"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Summarize the task deadlines or start dates for different modules."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|{bl}"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`ModuleCode`, `Deadline/Start date`, +"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " `TaskCount`"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|*Click on area*: +"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Display tasks under the selected module. +"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Click on data point*: +"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Display tasks under the selected module and will due or start the chosen date."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|*StackedBar Chart* +"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Compare the weight of different types of tasks in each module."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|{bl}"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`ModuleCode`, `TaskType`, `WeightSum`"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Display tasks under the selected module and type."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::TaskSummaryOnClickActivityDiagram.png[width \u003d \"650\" align\u003d\"center\" title \u003d \"Sequence diagram for task summary UI update when data change\"]"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *OnChangeListener*"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The feature listens to the change of `Model\u0027s` `UnArchived Task Records`, `Archived Task Records` and `Module Records`."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Once a change is captured, the charts will automatically re-render to show the latest statistics."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Currently, commands as `add` `edit` `delete` `sort` `find` `archive` `done` `list` `clear` etc. can"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "trigger the refresh of the charts."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::TaskSummaryOnDataChangeSequenceDiagram.png[width \u003d \"800\" align\u003d\"center\" title \u003d \"Sequence diagram for task summary UI update when data change\"]"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It is possible that the labels of charts can overlap together."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This is an unfixed bug regarding the JDK which is caused by JavaFX chart off-sync. To get more information, you may refer to link:{jdk_bug_report}[here]."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When this issue happens, you can use any command that can trigger chart updating to refresh."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Example Usage Scenario"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Given below is an example usage scenario and how the task summary mechanism behaves at each step."
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 1. The user launches the application for the first time, the statistics will perform on top of the sample records,"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "and the result will be visualized into different charts organized in the `Tab Panel`. After the user clicks `Statistics`"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "from the top menu bar, the `Tab Panel` and the `Task List Panel` will display."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 2. The user navigates to the `Statistics` Page for the first time. The `Tab Panel` should"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "display the `Pie Chart` and the `Task List Panel` is empty with a title: \"Click on Chart to View Related Tasks\"."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Indeed, this is how the `Statistics` Page looks like every time the user navigates back from another Page."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 3. The user clicks on `Pie Chart` \u0027s `Pending` portion. All tasks in `Pending` status should display in `Task List Panel`."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Meanwhile, the title of the Panel will change to \"PENDING: # Tasks\" (# stands for the number of `Pending` tasks)."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 4. The user clicks on `Area Chart` \u0027s `CS2101` area. All tasks under `CS2101` should display in `Task List Panel`."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Meanwhile, the title of the Panel will change to \"Tasks under CS2101\"."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 5. The user executes `add` command at `Statistics` Page,"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the charts should update automatically."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Step 6. The user executes `done` command at another page, and navigate back to `Statistics` Page"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the charts should show the latest statistics."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Will this feature contribute value to CLI user"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Consideration::"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Task Summary feature involves mouse clicking event when user retrieving relevant tasks."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Explanation::"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The Task Summary Feature provides tow main services:"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " 1. The *automatic statistics* of the user input (i.e. the tasks and modules information)."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " 2. The relevant *records retrieving*."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The retrieving service is built on top of the statistics result."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Meanwhile, the statistics is auto-generated along the way the user managing their records using *keyboard input*. +"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Therefore, this feature can make a fast typist be more productive, especially when Study Buddy primarily"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "supports the CLI."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How to update charts"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* **Alternative 1 (current choice):** Use `onChangeListener` to monitor the data update and re-render the UI simultaneously."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Pros: More user-friendly, no need to ask user to manually update."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Cons: Might encounter JavaFX chart off-sync bug, and results in label overlapping. But user can always use another"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "command which can trigger data updating to walk around this problem."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* **Alternative 2:** Trigger the UI rendering by asking the user to re-launch the application or navigate away and back to the page."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Pros: Safe from the JavaFX chart off-sync bug."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Cons: Force user to close or navigate around the application every time he/she wants to"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "check the updated charts."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "// end::taskSummary[]"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::calendar[]"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Calendar feature"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "The calendar feature displays a calendar for users."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "The feature is implemented by overriding the task list display panel on the main window with calendar box. The calendar currently supports following features:"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Displays the name of all tasks on that day in the calendar grid."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Access calendars in previous or next month using the buttons on top."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Displays more information about tasks for the day on the Due Soon panel after clicking on a grid."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Fast forward to a specific year/month using CLI."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When a calender is requested, a CalendarPanel object is constructed, the object diagram below shows the structure of a CalendarPanel. We will be using the date `01/04/2020` as an example."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::CalendarBoxObjectDiagram.png[title\u003d\"CalendarPanel object diagram\"]"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Tasks shown in `calendar` will automatically be updated upon using any of the following commands:"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* `add`"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* `delete`"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* `archive`"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* `unarchive`"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Any other commands that modifies the task list"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Example usage scenarios"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Using mouse click"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Clicking on the show calendar menu item under the calendar menu will enable this feature. Upon requesting for the calendar to be shown:"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The calendar box object will be constructed"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The calendar loops through every day of the month while searching for tasks due on that day"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The task name is added to the calendar grid"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Using CLI"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "As of Study Buddy v1.4, a new feature has been added that allows users to navigate the calendar using CLI."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The user enters \u0027calendar\u0027 into the command box."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The user enters the selected date into the command box."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Calendar will be generated the same way as a mouse click, however, it will use the entered date as parameters."
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "It is implemented by getting the latest instance of `MainWindow` and directly changing the UI by calling `handleShowCalendar()`."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Below is an activity diagram describing the events that will happen:"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::CalendarActivityDiagram.png[width \u003d \"400\", length \u003d \"600\" title \u003d \"Calendar Activity Diagram\"]"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Design considerations"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* It is more efficient to cache the calendar rather than to generate a new one, however, we do not expect the user to have too many tasks and therefore it should not slow down the application."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* The implementation used for CLI involves a static method in MainWindow which might be unsafe, however, it was the best choice given the time constraints."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//end::calendar[]"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::archive[]"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Archive feature"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Archive stores selected task away into a separate task list, this command is used when the user has completed a task but still wants to keep track of it."
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Archive uses a new archive command. Upon executing the archive command, it will call the model to delete the task and archive it"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "into another list stored within model."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "The index for archived tasks are not used for any commands other than `unarchive`."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Sequence diagram:"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::ArchiveSequenceDiagram.png[width \u003d \"600\", length \u003d \"500\" title \u003d \"Archive Sequence Diagram\"]"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The lifeline for every member should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Design consideration"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "There were two possible ways to store archived tasks:"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Store it as a separate list"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Add another field to task to keep track of its archived state"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "The first choice was chosen as it speeds up the runtime. Also, it makes it easier to manage the indexes."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//end::archive[]"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//tag::productivity[]"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d Productivity feature"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The productivity feature displays insights related to the user\u0027s productivity over the"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "teikjun"
        },
        "content": "past day, week and more on the Productivity panel."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The Productivity page is integrated with the main page as a side panel."
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The Productivity page is further composed of 3 tabs:"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Daily Productivity Tab"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Weekly Productivity Tab"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Productivity Points Tab"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The Productivity page can be viewed by clicking on the Productivity menu item,"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "teikjun"
        },
        "content": "which directs the user to the Daily Productivity Tab."
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The Productivity page can also be viewed by clicking on the Productivity Points shown on"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "teikjun"
        },
        "content": "the top right of the application window."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "teikjun"
        },
        "content": "This directs the user to the Productivity Points Tab."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The productivity feature is facilitated by the `Statistics` class, which allows"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "teikjun"
        },
        "content": "StudyBuddy to keep track of relevant usage statistics of the user."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "teikjun"
        },
        "content": "`Statistics` is further composed of classes that keep track of specific statistics:"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. `CompletionStats` keeps track of the number of tasks completed by the user each day and each week"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. `OverdueStats` keeps track of the number of tasks that went overdue each day and each week."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. `ScoreStats` keeps track of the user\u0027s Productivity Points and rank each day"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. `GeneralStats` keeps track of the user\u0027s goal, streak, and other statistics not covered by the other statistics classes"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The object diagram for the Productivity feature is shown below: +"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::ProductivityObjectDiagram.png[width \u003d 900 title\u003d\"Productivity object diagram\"]"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The Productivity feature displays the Producitivity Points of the user, this is recorded in `currentScore`"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "teikjun"
        },
        "content": "and `scoreList` attributes in `ScoreStats` class."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The user can gain or lose Productivity Points in StudyBuddy when certain actions or events are completed."
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "teikjun"
        },
        "content": "These include:"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Adding a task: _+1_"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Completing a task: _+10_"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Completing your daily goal: _+(points equivalent to daily goal)_"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Using advanced features; _+1_"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Letting a task go Overdue: _-1_"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Each usage statistic is updated accordingly when the respective user action or event"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "teikjun"
        },
        "content": "has concluded. These statistics are then rendered on the `ProductivityPanel`."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The chart visualizations are implemented using `ProgressIndicator`, `BarChart` and `AreaChart`."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "teikjun"
        },
        "content": "When the statistics are updated, the task list\u0027s event listener and classes implementing"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "teikjun"
        },
        "content": "`GoalObserver` will be informed of the changes. `ProductivityPanel` re-renders the"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "teikjun"
        },
        "content": "displayed information when either of these are updated."
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The data displayed will be automatically updated upon calling any of the following commands:"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* `add`"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* `done`"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* `delete`"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* `refresh`"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* `goal`"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* Any command that modifies the task list"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Example Use Scenario"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Given below is an example usage scenario and how the"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Productivity feature behaves at each step."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 1: The user launches the application."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 2: The Productivity feature displays the user\u0027s Productivity Points on the top right of the screen."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 3: The user clicks the Productivity Menu button"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 4: The Daily Productivity Tab is displayed to the user"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 5: The user completes a task using `done`"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 6: The daily number of tasks is added and Productivity Points is increased."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "teikjun"
        },
        "content": "If the daily goal has been reached, the user\u0027s streak is incremented."
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Here is an activity diagram of the aforementioned steps:"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::ProductivityActivityDiagram.png[width \u003d \"400\", length \u003d \"500\" title \u003d \"Productivity Feature Example Activity Diagram\"]"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Extension: Suppose the user sees the Productivity Points and clicks it"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 3: The user clicks the Productivity Points on the top right of the screen"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Step 4: The Productivity Points Tab is displayed to the user"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "teikjun"
        },
        "content": "From here, the user can continue to manage tasks as per Step 5 and 6 above,"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "teikjun"
        },
        "content": "or navigate to other Productivity tabs."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How to re-render Productivity Panel when statistics are updated"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "teikjun"
        },
        "content": "*Alternative 1*: re-render only the values that have been updated"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "teikjun"
        },
        "content": "- Pros: maximizes loading speed and minimizes lag for the user"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "teikjun"
        },
        "content": "- Cons: increases complexity for codebase, higher chance of bugs occuring"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "teikjun"
        },
        "content": "*Alternative 2*: always re-render the whole Productivity Panel"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "teikjun"
        },
        "content": "- Pros: easy to implement"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "teikjun"
        },
        "content": "- Cons: may result in slower loading speed and more lag for the user"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "teikjun"
        },
        "content": "*Alternative 3 (current choice)*: re-render only the values that have been updated"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "teikjun"
        },
        "content": "if it does not result in increased code complexity"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "teikjun"
        },
        "content": "- Pros: improves loading speed and decreases lag for the user,"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "teikjun"
        },
        "content": "while keeping the codebase readable and easy to reason with."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "teikjun"
        },
        "content": "- Cons: may result in slower loading speed. However, based on testing,"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "teikjun"
        },
        "content": "this trade-off does not result in any measurable delay."
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//As far as feasible, the productivity feature re-renders only the values that"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//have been updated. This improves the loading speed and minimizes lag for the user."
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//However, in some cases, this will lead to more complicated code to reason with."
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//As such, the productivity feature sometimes re-renders more values than necessary."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//Based on testing, this trade-off made by the productivity feature does not result"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//in any measurable delay."
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//end::productivity[]"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//tag::mod[]"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Modules"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "(Contributed by Hong Wen)"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "The `modules` feature enables users to be able to group and view their tasks according to various modules or subjects."
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Each module is assigned with a unique module code \u0026 a name."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "By default, all task created with the `add` command will be be assigned to module code `OO0000O`."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Modules are created with `create mods` Command and the program will request for a module name and module code. There are no restrictions on module name as long as it is not an empty entry."
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Module codes however, require at least an alphabetical prefix, a number, and a postfix(optional)."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "```"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Correct moduleCodes:"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "A0A"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "CS11X"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "AA1234"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Incorrect moduleCodes:"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "123456"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "CAT"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "555T"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "```"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Sequence diagram for creating modules"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "This is a sequence of how a module is created using the `create mods` feature. Take note that all interactions go through the `CommandBox` first in the UI, but it will be omitted from this diagram for simplicity."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "image::ModuleSequenceDiagram.png[width \u003d \"1000\", length \u003d \"800\", title\u003d \"Sequence diagram for modules\"]"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "1. When the user keys in  `create mods` or click *Module/create* on the menu bar,"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "a `CreateModuleInteractivePrompt` class is created. It automatically constructs an `EmptyModule`."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "2. The interactivePrompt class will then change module attributes such as"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "name and `ModuleCode` on according to user input."
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "3. At the last stage, the prompt will construct a `CreateModCommand` for execution."
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "It will go through the various layers in Model before returning to the prompt,"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "which will then return to the user."
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "The lifeline for every member should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "{bl}"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//end::mod[]"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "We are using `java.util.logging` package for logging."
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::dataencryption[]"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data encryption"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Since Study Buddy is an offline application, there is no threat of being attacked via a network channel. However, in case the computer has a shared owner, a password feature can be implemented in the future for privacy purposes."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The goal is to encrypt `taskList3.json`, while still allowing the owner to access his/her tasks using his password."
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "We will be using AES (Advanced Encryption Scheme) for encryption, and a slow hashing algorithm to derive a key from the user\u0027s password. The slow hashing algorithm is to prevent brute force attacks."
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Encryption*"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". User sets a password. (Optional)"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Study Buddy uses a slow hashing algorithm (https://github.com/patrickfav/bcrypt[bCrypt]) to generate a key."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". When user exits the app, Study Buddy will encrypt taskList.json using the https://github.com/facebookarchive/conceal[conceal] library and the generated key."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". TaskList.json should now be encrypted"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Decryption*"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". User enters a password."
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". If the password is correct, the same key should be hashed and taskList.json can be decrypted."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". If the password is incorrect, user will be allowed to try again."
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "We leave it to the user\u0027s own jurisdiction to create a strong password."
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//end::dataencryption[]"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* has a need to manage a significant number of tasks for various modules"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* appreciates visualization tools to aid in task management"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* prefers desktop apps over mobile apps"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Value proposition*:"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* manages tasks faster than a typical mouse/\u003c\u003cGUI,GUI\u003e\u003e driven app"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* uses interactive prompt to enhance user experience"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::userStories[]"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[cols\u003d\"1,1,3,3\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* * *` |user |view a list of my tasks | know what I have Pending"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* * *` |user |add a new task | view all my tasks in one place"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* * *` |user |delete a task |remove entries that I no longer need"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* * *` |user |mark a task as completed| update my list of Pending tasks"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* * *` |user |find a task by keyword |locate details of a task without having to go through the entire list"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user with many deadlines |sort tasks in order of deadlines |organise my list by priority"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user |archive tasks |separate the tasks that are not applicable right now"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user |view renamed tasks | easily filter out any renamed data in my list"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user |filter all pending tasks | view all my Pending tasks in one place"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who likes organization |view all my tasks that are Due Soon|know what to focus on in the next week"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user who makes typos |be able to edit a task I have added|correct any typos I have made"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user who is forgetful |have an interactive command prompt|not have to remember long commands"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user who is starting a new semester |clear all my tasks|start adding on to an empty list"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`* *` |user who takes many modules |add my modules |view my modules"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "|`* *` |user who finds it hard to keep track of all my deadlines| have a calendar| easily find tasks due on a day"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::userStories[]"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|`* *` |user who is stressed out by all my deadlines| have a fun todolist| have fun while completing my tasks"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|`* *` |user who wants to be more productive | have an overview of my task completed this week| monitor my progress"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::userStoriesYuting[]"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who is forgetful| have a clear instruction every time I made mistake in command | play with the application more fluently"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user whose deadline of a task is extended | edit the particular task | update my task accordingly"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who is lazy | set daily goal | force myself to study"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who lacks of motivation | get award by completing task | be motivated"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who has many tasks | check the summary of their current status in one place | do my future plan easily"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who has many modules | view all tasks under a particular module | focus on this module"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who has many modules and tasks | check the summary of task deadlines under different modules | understand which module need to study first"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who has many modules and tasks | check the summary of task weights under different modules | understand which assessment should pay more attention to"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`* *` |user who likes multitasking| adjust the application\u0027s window size | fit it with other windows"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::userStoriesYuting[]"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(For all use cases below, the *System* is `Study Buddy` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::useCasesYuting[]"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Use case: Add a new task"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "1. User requests to add a new task."
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "2. Study Buddy requests user to choose module from available module list."
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "3. User chooses module."
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "4. Study Buddy requests for task name."
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "5. User provides task name."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "6. Study Buddy requests user to choose task type from available task type list."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "7. User provides task type."
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "8. Study Buddy requests for task description."
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "9. User provides task description."
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "10. Study Buddy requests for task weight."
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "11. User provides task weight."
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "12. Study Buddy requests for estimated cost of time for this task."
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "13. User provides estimated time cost for this task."
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "14. Study Buddy requests for confirmation."
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "15. User confirms."
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "16. Study Buddy inserts the new task to user\u0027s task list."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 3a. User can press enter to skip."
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Use case resumes at step 4."
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 3b."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given index is invalid."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 3b1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 3c."
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given module code is invalid."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 3c1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 5a."
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The length of given task name exceeds 20 characters."
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 5a1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 5."
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 7a."
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given index is invalid."
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 7a1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 7."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 9a."
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "User can press enter to skip."
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Use case resumes at step 10."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 9b."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The length of given task description exceeds 300 characters."
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 9b1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 9."
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 11a."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "User can press enter to skip."
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Use case resumes at step 12."
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 11b."
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given weight is invalid."
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 11b1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 11."
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 13a."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "User can press enter to skip."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** Use case resumes at step 14."
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 13b."
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given estimated cost of time is invalid."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 13b1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 13."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* a. At any time, user enters quit and press enter to exit the interaction."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Use case: Edit task\u0027s weight"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "1. User requests to edit a specific task in the list"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "2. Study Buddy asks for the index"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "3. User provides index"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "4. Study Buddy asks for the index of the field that he/she wish to edit for the task"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "5. User selects index of Task weight"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "6. Study Buddy asks for the new weight"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "7. User provides the new weight"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "8. Study Buddy updates the selected tasks weight to the new value"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 3a."
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given index is invalid."
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 3a1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* 7a."
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given weight is invalid."
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** 7a1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case resumes at step 7."
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* a. At any time, user enters quit and press enter to exit the interaction."
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::useCasesYuting[]"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::useCasesSouwmyaa[]"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Use case: List task"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "1. User is on the `All tasks` or `productivity` tab."
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "2. User requests to list tasks"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "3. Study Buddy shows a list of unarchived tasks"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Use case: Delete task"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "1. Refer to List task use case"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "2. User requests to delete a specific task in the list"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "3. Study Buddy asks for the index"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "4. User provides index"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "5. Study Buddy deletes the task"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* 4a."
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The given index is invalid."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** 4a1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Use case: Filter tasks"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. User requests to filter tasks"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. Study Buddy shows two options for filter"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "3. User requests to filter by status"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "4. Study Buddy provides options to filter by status"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "5. User provides input"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "6. Study Buddy shows filtered task list"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* 3a."
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The given index is invalid."
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** 3a1. Study Buddy shows an error message."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* 3a."
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "User chooses to filter by type."
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** 4a. Study Buddy provides options to filter by type"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case resumes at step 5."
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Use case: View renamed"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. User requests to view renamed tasks"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. Study Buddy shows a list of renamed tasks"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* 1a."
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "There are no duplicate tasks"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** 1a1. Study Buddy shows an empty list"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Use case: Refresh"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. User notices Due Soon list needs to be updated"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "2. User requests to refresh"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "3. Study Buddy refreshes the Due Soon list and status tags"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* 2a."
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The list is empty."
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** 2a1. List remains the same"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* 2b."
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "There is nothing to refresh"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** 2b1. List remains the same"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::useCasesSouwmyaa[]"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": ". Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Should come with automated unit tests and open source code."
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Should work on both 32-bit and 64-bit environments."
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": ". A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[[mainstream-os]]"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Mainstream OS::"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[[GUI]]"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "GUI::"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Graphical User Interface i.e a user interface that allows users to interact using graphical icons rather than text-based user interfaces"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "[[Index]]"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Index::"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "The index of a task refers to the sequence number of a task in the dashboard"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[[CLI]]"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "CLI::"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Command Line Interface i.e a text base interface"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[[AB3]]"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "AB3::"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Address Book Version 3 - the code base that Study Buddy is built upon"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: Shows the \u003c\u003cGUI, GUI\u003e\u003e with a set of sample tasks."
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The window size may not be optimum."
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Resize the window to an optimum size."
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Move the window to a different location."
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Close the window."
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Deleting a task"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Deleting a task while all tasks are listed"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... List all tasks using the `list` command."
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Multiple tasks in the list."
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ".. Test case: `delete [Enter]` + `1` +"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "   Expected: First task is deleted from the list."
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Successful deletion indication in the status message."
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ".. Test case: `delete [Enter]` + `0` +"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "   Expected: No task is deleted."
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Error details shown in the status message."
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ".. Other incorrect delete commands to try: `delete x`(where x is anything)"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Refreshing the due soon list"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Refreshing the due soon list when the time left is off"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Have some tasks in the due soon list"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Change the time of your PC to a time in the past/future"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Use the `refresh` command +"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: All the tags with time left now show updated time."
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Successful refresh indication in the status message."
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Adding a duplicate task"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Adding a duplicate task to the list"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Have at least one task in the unarchived tasks list"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Use the `add` command to add a duplicate of an existing task +"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: It will add this duplicate task and append (1) at the end of its name. +"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Successful add indication in the status message."
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Filter tasks"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Filters tasks by status or type"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Have a few tasks in the unarchived tasks list of different types and status\u0027"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Use the `filter` command to filter by \u0027status\u0027 -\u003e \u0027pending\u0027 +"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: It will filter all your pending tasks in the list. +"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Successful filter indication in the status message."
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Clear tasks"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Clears all tasks in the study buddy"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Have a few tasks in the unarchived tasks list"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Use the `clear` command +"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: It will clear everything in Study Buddy. +"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Successful clear indication in the status message."
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d View renamed"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Filters all tasks in your list with a number appended in brackets (auto-renamed)"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Have a few duplicated tasks in the unarchived tasks list"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Use the `View renamed` command +"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: It filters all the auto-renamed tasks out. +"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Successful filter indication in the status message."
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Exit"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Exits from the application"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites:"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Launch the application"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Use the `bye` command +"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: It exits the application."
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::savingData[]"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites: Delete the \"tasklist.json\" file from data folder."
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Launch the application +"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: The application indicates that the data file needed is missing and creates one."
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "c"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Prerequisites: Modify the \"tasklist.json\" file to show some incorrect data."
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Test case: Launch the application +"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "   Expected: The application indicates that the data file is corrupted."
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Application launches successfully but has no data."
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::savingData[]"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d Effort"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Interactive prompt*"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* \u003c\u003cAB3,AB3\u003e\u003e requires users to input a whole line of text at once, which is unintuitive and prone to typos by the user."
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Furthermore, \u003c\u003cAB3,AB3\u003e\u003e uses tags like \"`\\p`\" to break the user\u0027s input up for parsing. This means that users will not be able to use these strings for any of their inputs."
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Study buddy fixes that issue by introducing an interactive prompt for every command. This required a lot effort as there had to be an interactive prompt"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "for every command."
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Refactoring*"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* While \u003c\u003cAB3,AB3\u003e\u003e uses the `Person` class which had 5 fields, Study buddy uses the `Task` class that has 12 fields and every one of them is used in a major feature."
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* The \u003c\u003cGUI, GUI\u003e\u003e has seen a major revamp, with 5 different tabs as well as some sub-tabs."
      }
    ],
    "authorContributionMap": {
      "teikjun": 169,
      "souwmyaa": 343,
      "aegis-bot": 46,
      "wyt-sonia": 394,
      "-": 313,
      "gx-huang": 143
    }
  },
  {
    "path": "docs/Documentation.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d Study Buddy - Documentation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":repoURL: https://github.com/AY1920S2-CS2103T-W16-3/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Editing Diagrams"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingPlantUml#, UsingPlantUml.adoc\u003e\u003e to find out how to create and update the UML diagrams in the developer guide."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ". Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ". Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "The link:{repoURL}/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|`site-draganddrop`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|Define this attribute if the project is an official draganddrop project."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This will render the draganddrop navigation bar at the top of the page, and add some draganddrop-specific navigation items."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Template"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The files in link:{repoURL}/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5. These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Modifying the template files in link:{repoURL}/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The SE-EDU team does not provide support for modified template files."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 5,
      "wyt-sonia": 3,
      "-": 115
    }
  },
  {
    "path": "docs/README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../README.adoc[]"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2
    }
  },
  {
    "path": "docs/SettingUp.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d Study Buddy - Setting Up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":repoURL: https://github.com/AY1920S2-CS2103T-W16-3/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Prerequisites"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ". *JDK `11`* or above"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ". *IntelliJ* IDE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "IntelliJ by default has Gradle and JavaFx plugins installed. +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Do not disable them."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up the project in your computer"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork this repo, and clone the fork to your computer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ". Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `New...` and find the directory of the JDK"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Import Project`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Locate the `build.gradle` file and select it."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Click `OK`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Open as Project`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK` to accept the default settings."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Verifying the setup"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Run the `studybuddy.Main` and try a few commands"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ". \u003c\u003cTesting#,Run the tests\u003e\u003e to ensure they all pass."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Configurations to do before writing code"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuring the coding style"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To rectify,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Editor` \u003e `Code Style` \u003e `Java`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ". Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Add a `\u003cblank line\u003e` between each `import`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Updating documentation to match your fork"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "After forking the repo, the documentation will still have the DRAGANDDROP branding and refer to the `draganddrop/studybuddy` repo."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "If you plan to develop this fork as a separate product (i.e. instead of contributing to `draganddrop-studybuddy`), you should do the following:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ". Configure the \u003c\u003cDocumentation#Docs-SiteWideDocSettings, site-wide documentation settings\u003e\u003e in link:{repoURL}/build.gradle[`build.gradle`], such as the `site-name`, to suit your own project."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the URL in the attribute `repoURL` in link:{repoURL}/docs/DeveloperGuide.adoc[`DeveloperGuide.adoc`] and link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`] with the URL of your fork."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Setting up CI"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Set up Travis to perform Continuous Integration (CI) for your fork."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Getting started with coding"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "When you are ready to start coding, we recommend that you get some sense of the overall design by reading about \u003c\u003cDeveloperGuide#Design-Architecture, Study Buddy\u0027s architecture\u003e\u003e."
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 6,
      "wyt-sonia": 11,
      "-": 73
    }
  },
  {
    "path": "docs/Testing.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d Study Buddy - Testing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":repoURL: https://github.com/AY1920S2-CS2103T-W16-3/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 1: Using IntelliJ JUnit test runner*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 2: Using Gradle*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Types of tests"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "We have three types of tests:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ". _Unit tests_ targeting the lowest level methods/classes. +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "e.g. `draganddrop.address.commons.StringUtilTest`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ". _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "e.g. `StorageManagerTest`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Hybrids of unit and integration tests."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "These test are checking multiple code units as well as how the are connected together. +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "e.g. `LogicManagerTest`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Troubleshooting Testing"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: Keyboard and mouse movements are not simulated on macOS Mojave, resulting in GUI Tests failure.**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: From macOS Mojave onwards, applications without `Accessibility` permission cannot simulate certain keyboard and mouse movements."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Open `System Preferences`, click `Security and Privacy` -\u003e `Privacy` -\u003e `Accessibility`, and check the box beside `Intellij IDEA`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".`Accessibility` permission is granted to `IntelliJ IDEA`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "image::testfx-idea-accessibility-permissions.png[width\u003d\"600\"]"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 5,
      "wyt-sonia": 3,
      "-": 45
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d Study Buddy - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ":toclevels: 4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":bl: pass:[ +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":caution-caption: :fire:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":important-caption: :heavy_exclamation_mark:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ":repoURL: https://github.com/AY1920S2-CS2103T-W16-3/main"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":javaVersionURL_win: https://www.wikihow.com/Check-Your-Java-Version-in-the-Windows-Command-Line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":javaVersionURL_mac: https://www.wikihow.com/Check-Java-Version-on-a-Mac"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":javaInstallURL_win: https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-C11500A9-252C-46FE-BB17-FC5A9528EAEB"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":javaInstallURL_mac: https://docs.oracle.com/en/java/javase/11/install/installation-jdk-macos.html#GUID-2FE451B0-9572-4E38-A1A5-568B77B146DE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":jdk_bug_report: https://bugs.openjdk.java.net/browse/JDK-8198830"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "By: `Team Drag\u0026Drop`      Since: `Jan 2020`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::introduction[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy is a desktop application which is designed for students who *wish to manage their module related tasks*."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "More importantly, Study Buddy is *optimized for those who prefer to work with a Command Line Interface* (CLI) while still having the benefits of a Graphical User Interface (GUI). This means that while you primarily interact with Study Buddy through text based commands, each command executed will evoke a visual response as well."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You will never have to remember long, wordy commands to use your command line interface, since Study Buddy *provides an interactive way of communication*."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This not only helps prevent typos, but also makes the application much easier to use!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "If you can type fast, Study Buddy can get your module management done faster than traditional GUI apps."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "The purpose of this document is to explain in detail, how users can utilize the various commands and functions that Study Buddy provides."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Currently, we support both Windows and Mac operating systems."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you are interested, please jump to the \u003c\u003cQuick Start\u003e\u003e to get started."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Hope you enjoy!"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::introduction[]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::quickStart[]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "(Contributed by Yuting)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy relies on a particular computer environment to operate correctly, thus to enjoy it, you need to have `Java 11` or above installed in your computer."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Here is the guideline for checking java version of your computer."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* link:{javaVersionURL_win}[windows]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* link:{javaVersionURL_mac}[mac]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- If your computer does not have java or its version is below `Java 11`, you may refer to the guide below."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* link:{javaInstallURL_win}[windows]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* link:{javaInstallURL_mac}[mac]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When your computer is ready, you can download the latest link:{repoURL}/releases[`studybuddy.jar`] to get your Study Buddy."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". To better manage your tasks, you may copy the file to the folder you want to use as the home folder for the Study Buddy."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Last, double-click the file to start the app and the dashboard should appear in a few seconds."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::Ui.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Study Buddy Dashboard\"]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Jump to \u003c\u003cDashboard\u003e\u003e to get more information about dashboard."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". To view a list of the available commands, you can key in *`help`* and click kbd:[Enter]."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "A more detailed description of our features is available in"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c\u003cFeatures\u003e\u003e of this document."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::quickStart[]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::symbols[]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Commonly Used Symbols"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates something you should take note of."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates a tip that you could use."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates an aspect that should be used with caution."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This symbol indicates something to which we want to draw your attention."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::symbols[]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::usefulTips[]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Useful tips"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* You may need to adjust the size of the Study Buddy window when you launch it."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* The scroll bar on the right of the response box can be used to view the entire reply."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* At any point during the execution of a command, you can use `quit` to quit the command and start over/try a different command."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Study Buddy will analyze your input and reply accordingly."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It utilizes an \"interactive command prompt\". (explained in each command\u0027s description under \u003c\u003cFeatures\u003e\u003e)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* In this document, kbd:[enter] indicates *the enter key on your keyboard*."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* In this document, *|* indicates an *alternative option* (i.e. A | B implies A or B)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* A task\u0027s *index number*, refers to the number displayed on the left of a task in *All Tasks Panel*."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Note that the index of the same task could be different after some commands, such as `filter`, `find` and `sort`."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::usefulTips[]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//tag::intro[]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d User Interface Introduction"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "(Contributed by Yuting, Hong Wen \u0026 Teik Jun)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy makes use of color schemes and animations to enhance your user experience."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Dashboard"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The *dashboard* is the landing page each time the application is launched. +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It consists of different components that can interact with you and provide you with meaningful information."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Navigation Menu Bar"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The *menu bar* is located at the top of the dashboard and is primarily used for navigation."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::dashboard/nav_bar.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Menu bar\"]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Shortcuts are available for navigating to each page:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "kbd:[F1] - Modules"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "kbd:[F3] - Statistics"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "kbd:[F4] - Calendar"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "kbd:[F5] - Productivity"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "kbd:[F6] - StudyBuddy (All Tasks)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d All Tasks Panel"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "By default, the *All Tasks Panel* lists all unarchived task tasks with their detailed information in the order of creation date and time."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::dashboard/all_tasks.png[width\u003d\"600\",align\u003d\"center\",title \u003d \"All Tasks Panel\"]"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Task Badges"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To highlight `Module code`, `Task Type` and  `Task Status` of each task in the *All Tasks list* , we use *Badges*."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Module Badges::"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* All in light steelblue."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* If the task is not related to any module, the Module Badges will be omitted."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Task Type Badges::"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Badges of different types are in different colours."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Task Status::"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Badges of different status types are in different colours."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Tasks that are due within a week (i.e. 7 days) will be marked as `Due Soon`."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "You may need to use the refresh command (\u003c\u003cRefresh\u003e\u003e) to refresh the status of all your tasks."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Tasks Due Soon Panel"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The tasks that are due within a week (i.e. 7 days) will be listed here."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can jump to \u003c\u003cDue Soon Tasks\u003e\u003e to get more details."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::dashboard/due_soon.png[width\u003d\"600\",align\u003d\"center\",title \u003d \"Task Due Soon Panel\"]"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Task Badges"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To highlight the `Weight \u0026 Module Code`,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "`Time left for deadline` and  `Task Type` of each task in the *Tasks Due Soon Panel* , we use *Badges*."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Weight \u0026 Module Code::"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* All in steelblue."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Display the weight and module code of a task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Time left for deadline::"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* All in light orange."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Display the time left for a tasks\u0027 deadline."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* More information please refer to \u003c\u003cDue Soon Tasks\u003e\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Task Type Badges::"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* Badges of different types are in different colors."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Interactive Prompt Box"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The *Interactive Prompt Box* can be found at the bottom of the user interface."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To interact with Study Buddy, you can enter the desired command in the box with the words `Please enter your command here...`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "and press kbd:[enter] to execute."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "The reply from Study Buddy will be displayed in the box above."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::dashboard/prompt_box.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Interactive Prompt Box\"]"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To get more detailed information about how to use Study Buddy, please refer to \u003c\u003cFeatures\u003e\u003e."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//end::intro[]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Basic features"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Help"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This function displays a list of interactive commands that you can use."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It also provides a link to this document, (our user guide)."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This is the command you should use if you are unsure of what to type for a certain command."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Say you have forgotten the format of a command and need some help."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy provides a help command for your convenience!"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `help`:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Initiate the command using keyword `help`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/help/help_rep.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027help\u0027\"]"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Remember to scroll down to see the entire reply."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::add[]"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Add"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "(Contributed by Yuting)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This command enables you to add a new task into Study Buddy."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Through the interaction, task\u0027s details will be collected."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Required information: task name, task type, task deadline or duration"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Optional information: module, task description, task weight, estimated number of hours needed"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Input format requirement:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[cols\u003d\"1,2,1\",options\u003d\"header\"]"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Information Type |Format Requirement| Example"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`MODULE CODE`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|2 or 3 letters + 4 digits + 1 letter (optional)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|CS2101, CS2103T, +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " LSM1101"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`INDEX NUMBER OF +"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "MODULE`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Integer number"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|1"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`TASK NAME`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|No more than 20 characters"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Demo presentation"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`INDEX NUMBER OF +"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "TASK TYPE`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Integer number"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|1"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`TASK DEADLINE +"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "OR DURATION`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "| Different task types apply different date and time format"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Deadline (for Assignment): +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`HH:mm dd/MM/yyyy`"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Duration (for other task types): +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " `HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy` +"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`HH -\u003e hour, mm -\u003e minutes, dd -\u003e date, mm -\u003e month,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "yyyy -\u003e year`"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Assignment: +"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "23:59 01/05/2020"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Meeting: +"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "14:0 15/04/2020-16:0 15/04/2020"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`TASK DESCRIPTION`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|No more than 300 characters"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|this is a valid description"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`TASK WEIGHT`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Positive integer or float number from 0.0 to 100.0"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|12.0"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|`ESTIMATED NUMBER OF HOURS NEEDED`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|Positive integer or float number"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|10.0"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Other constraints::"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The application does not allow you to enter a name that has special characters (any character that is not a letter in the alphabet)."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... The application does not allow you to assign date time that has already passed to a task."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It must be a time in the future."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... For duration, the two dates should follow the order of `start date`-`end date`, the `end date` should be later than `start date`."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... The total weight of tasks under the same module is capped at 100.0."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Both `archived` and `not archived tasks` will be taken into consideration."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* This constraint also applies to tasks without module information."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Those tasks will be treated as from a same extra module."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It is designed for you to practice your time management skill :)."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... All `index numbers` entered should be positive and within a valid range. (i.e When there is only 5 modules available, the valid module index number range is 1 to 5)."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... The \"Required Information\" cannot be empty, on the other hand, you can press kbd:[enter] to skip the \"Optional Information\"."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ".. Adding duplicate tasks:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "... Look at \u003c\u003cAdd duplicates\u003e\u003e for more information."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `add`:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Initiate the command using keyword `add` + kbd:[enter]."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy should start with asking module information with `a list of available modules` as:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/add/add_module.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Reponse to \u0027add\u0027, asks for module\"]"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You can link this task with a module by entering its `MODULE CODE` | `INDEX NUMBER OF MODULE` here , or you can press kbd:[enter] to skip."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"1\" (CS2101) as an example."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After the selection of module, Study Buddy should ask for the task name."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"new task\" as an example."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After entered the task\u0027s name and press kbd:[enter], Study Buddy should prompt for task type with the list of available types as:"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/add/add_task_type.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Asks for task\u0027s type\"]"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You can use the `INDEX NUMBER` here to choose a task type."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"1\" (Assignment) as an example."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After the selection of task type, Study Buddy will prompt for new task\u0027s date-time information together with the type related date-time format (i.e. different task types support different date-time formats)."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"14:00 04/05/2020\" as an example."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Next, Study Buddy should ask for the new task\u0027s description, and we use \"new task description\" as an example."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Then, Study Buddy should ask for the new task\u0027s weight."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"10\" as an example."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Next, Study Buddy will prompt for the estimated number of hours needed for this new task."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"10\" as an example."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Once you specify the estimated time needed and press kbd:[enter], Study Buddy should respond with the task details collected and ask for your confirmation to add the task as:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/add/add_task_info_1.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Asks for user conformation to add a new task\"]"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/add/add_task_info_2.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Task details collected\"]"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Now, by pressing kbd:[enter] the new task will be added into your Study Buddy."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Meanwhile, the *All Tasks Panel* will update accordingly."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For this example, the panel should update as below."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/add/add_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"New task added\"]"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Remember, you can use `quit` command to quit at any step."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::add[]"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::addDuplicates[]"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Add duplicates"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This command accounts for you adding duplicate tasks."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you attempt to add a duplicate, the name will be modified slightly so that you can differentiate them."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Say you have tried to add a task, you enter all the fields needed and at the end, you realise that you have already added this task."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Study Buddy lets you add duplicate tasks with a slight modification!"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "So, now you can add the task and edit it as needed."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "A task is considered duplicate when the name, type, module, description, weightage, estimated time cost and deadline are the same."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This feature is case sensitive i.e if you have one task named \"Homework\" and another named \"homework\", they will be considered to be different."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `add duplicates`:"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Follow the same steps as in \u003c\u003cAdd\u003e\u003e, but enter a duplicate task."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::duplicate/addDuplicate.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Reponse to adding a duplicate\"]"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Type in `yes` if you would like to continue and `no` if you do not."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". If you type `yes` and press kbd:[enter]"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". The Study Buddy should respond with:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::duplicate/addDuplicate1.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to adding duplicate\"]"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". As you can see in the snippet above, Study Buddy will append a number in brackets to the task name."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This number corresponds to the number of times this task name has been duplicated."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you add two duplicates of a task (eg: task(1) and task(2)), and then delete task(1), when u try to duplicate it again, it will get added as task(3)."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The number will not reset to 2, because this is the third time you are attempting to duplicate."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". If you choose to enter `no` at step 2, this is what you will see."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::duplicate/addDuplicate2.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to choosing not to add\"]"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "You can view all tasks that have been auto-edited this way, using the \u003c\u003cView renamed\u003e\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Use the \u003c\u003cEdit\u003e\u003e to edit your duplicated tasks!"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::addDuplicates[]"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::edit[]"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Edit"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "(Contributed by Yuting)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This command is for you to edit an existing task."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To indicate the task you want to edit, you need to provide its index number."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Say when there are some typo in an existing task."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can use this command to edit as you wish."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "teikjun"
        },
        "content": "*Constraints*"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Each new value entered will be checked under the same constrain of add command."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "More info you can refer from \u003c\u003cAdd\u003e\u003e."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When editing weight or module, the application will also make sure the total weight of related module\u0027s tasks will not overflow (i.e. exceed 100)."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". You cannot edit a task to be a duplicate. i.e all the fields cannot be the same as a task that already exists."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Due to the `deadline/Duration format` is different from `Assignment` to `Other Task Types`, we currently don\u0027t support:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. `Assignment` -\u003e `Another Tsk Type` editing"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. `Another Tsk Type` -\u003e `Assignment` editing"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `edit`:"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Initiate the command using keyword `edit` + kbd:[enter]."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy should start the task editing interaction by asking you the index number of the desired task."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here use \"1\" (Homework 1) as an example."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When you specified the target task, Study Buddy should continue the interaction by prompting you with the list of editable information."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can choose any of them via an index number."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"2\" (Task name) as an example."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/edit/edit_response_index.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"List of editable fields\"]"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After you selected the field to edit, Study Buddy should asks you for the new value."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For this example, let\u0027s use \"Updated Task\" as the new task name."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Once you specified the updated information and press kbd:[enter], the updated record will be captured, and the *All Tasks Panel* will update automatically."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For this example, the panel should update as below."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/edit/edit_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Task edited\"]"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::edit[]"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Done"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "(Contributed by Hong Wen)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//tag::Done[]"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This command is for you to mark a task as *Finished*."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Constraints*"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". A *Finished* task cannot be marked as *Finished* again."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `done`:"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Key in `done` and press kbd:[enter], you should get this prompt:"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/done/done_index.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for task index.\"]"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Now key in the index of the task you wish to complete."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Press kbd:[enter] again to confirm your change."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/done/done_confirm.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for confirmation\"]"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Task set to `Finished` successfully!"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Note that the task in your task list has the tag `Finished`."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/done/done_result.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Done result\"]"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can choose to archive your completed task using the `archive` command."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Check more details from \u003c\u003cArchive/ Unarchive\u003e\u003e."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//end::Done[]"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::clear[]"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Clear"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This commands clears all data in the Study Buddy."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Be careful with this command!"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It will remove any data you may have entered into the Study Buddy and you cannot retrieve it."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Say you have finished a semester and would like to clear everything in your Study Buddy and start over."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can always clear everything!"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `clear`:"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Initiate the command using keyword `clear`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/clear/clear_confirm.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027clear\u0027\"]"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Type yes and hit kbd:[enter] again to confirm"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy has been cleared completely!"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/clear/clear_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"View empty Study Buddy\"]"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". At step 2, if you choose to type no and hit kbd:[enter], this is what you will see."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::basic/clear/clear_no_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to choosing not to clear\"]"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::clear[]"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::delete[]"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Delete"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This commands deletes a task from the existing list, using the index provided by you. Index simply refers to the number on the left of the task in the `All Tasks` panel."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Once a task is deleted, it cannot be retrieved."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Use this command with caution!"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "After having added a task, you realise that there has been a change and you do not need to do that task anymore."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy provides you an option to delete that task from the list!"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `delete`:"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Initiate the command using keyword `delete`"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/delete/delete_index.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027delete\u0027\"]"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Type the index of the task you want to delete. In this case, the index entered is 1."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/delete/delete_confirm.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Asks for confirmation\"]"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Press kbd:[enter] again to confirm"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Task has been deleted!"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You will notice that the task at the index you selected has disappeared from the list of tasks."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/delete/delete_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Updated All Tasks Panel\"]"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::delete[]"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::viewRenamed[]"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d View renamed"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This commands filters all renamed tasks in the list i.e tasks that have a number appended to their names."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Say you want to go back and edit all the renamed tasks in your list."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "However, you do not want to scroll through the entire list to find them."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy provides you an option to view all your renamed tasks in the list!"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "You will still need to navigate to the main list and use that index to perform any index based operations (eg: delete, edit etc)"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `view renamed`:"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Initiate the command using keyword `view renamed`"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/viewrenamed/viewRenamed1.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027view renamed\u0027\"]"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Press kbd:[enter] again to confirm"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Renamed tasks have been filtered!"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/viewrenamed/viewRenamed2.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Updated list of renamed tasks\"]"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "In order to navigate back to the main list, use \u003c\u003cList\u003e\u003e"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::viewRenamed[]"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//updated by gx-huang"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::archive/unarchive[]"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Archive/ Unarchive"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "(Contributed by gexiang) +"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "This commands stores the specified task into a separate list."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After a hard days work, you completed some tasks."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You don\u0027t want them in your to-do list anymore, but you don\u0027t want to delete them; some of the information in the task card could still be useful."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "You can always store them in an archive!"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "To `archive`:"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Initiate the command using keyword `archive`"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/archive/archive_index.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027archive\u0027\"]"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Type the index of the task you want to archive, here use \"1\" (Leadership Presentation) as an example."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy will ask for your confirmation before archive the target task."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/archive/archive_confirm.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Asks for confirmation\"]"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Press kbd:[enter] again to confirm, the task will be archived and the user interface will update."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/archive/archive_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Task is archived successfully\"]"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You can view the archived task under the `StudyBuddy` -\u003e `Archived Tasks` tab."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/archive/check_archive.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Navigates to archived tasks\"]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/archive/archive_list.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Archived tasks\"]"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* To `unarchive` a task, and add it back to the main list, simply follow the same set of commands, but replace the `archive` keyword with `unarchive`"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Remember to use the index in the *Archived Task* instead of *All Tasks*"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you attempt to unarchive a task that already exists in the main list, the name will automatically be appended with a number in order to avoid duplication."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This is done in the same way as \u003c\u003cAdd duplicates\u003e\u003e"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//end::archive/unarchive[]"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::sort[]"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[[Sort]]"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Sort"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "(Contributed by Yuting)"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This command is for you to reorder the task list in *All Tasks Panel*."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Currently you can sort tasks by their::"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Deadline / Task Start Date"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Task Name"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Creation Date \u0026 Time"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Example*"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you want to sort all your unarchived tasks by their deadline or start date, you may utilize this command to achieve the desired order."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `sort`:"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Initiate the command using keyword `sort` + kbd:[enter]."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Study Buddy should provide the list of sorting options as below， and you can use the index number to select the desired sort."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use `1` (Deadline / Task Start Date) as an example."
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/sort/sort_term.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Sorting options and the order of the tasks before sort\"]"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After the selection, Study Buddy should ask for your confirmation to perform the reorder."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can press kbd:[enter] again to confirm."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Meanwhile, the tasks in *All Tasks Panel* will be sorted accordingly."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/sort/sort_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"The order of the tasks after sort\"]"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The tasks in *All Tasks Panel* will not change back to the original order by itself. +"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can use `sort` -\u003e `Creation Date \u0026 Time` to do so."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::sort[]"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//updated by Teik Jun"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//tag::find[]"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[[Find]]"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Find"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "teikjun"
        },
        "content": "(Contributed by Teik Jun)"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Finds tasks whose names contain any of the given keywords."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "teikjun"
        },
        "content": "To `find` a task:"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Initiate the command with `find`."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "teikjun"
        },
        "content": "+"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/find/find_keyword.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027find\u0027\"]"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Enter the keyword that you want to search for, e.g. quiz, and press kbd:[enter] to confirm sorting."
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". You have found a list of tasks that contain your keyword!"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "teikjun"
        },
        "content": "+"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/find/find_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Find result\"]"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* The search is case insensitive. e.g `homework` will match `Homework`"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* The order of the keywords does not matter. e.g. `CS Homework` will match `Homework CS`"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "* Only the name is searched."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* Substrings will be matched e.g. `work` will match `Homework`"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* Tasks matching at least one keyword will be returned (i.e. `OR` search). e.g. `CS Homework` can return `CS Quiz`,"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "teikjun"
        },
        "content": "`Reflection Homework`."
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "teikjun"
        },
        "content": "To navigate back to the full list of tasks, you can use the \u003c\u003cList\u003e\u003e function."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//end::find[]"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//updated by Teik Jun"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//tag::list[]"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[[LIST]]"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d List"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "teikjun"
        },
        "content": "(Contributed by Teik Jun)"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Oh no!"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "How do I get the original list back after using `find`?"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Calm down and use the `list` command!"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The `list` command lists all the tasks that have been created in StudyBuddy."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "teikjun"
        },
        "content": "To use the `list` command:"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Initiate the command with `list`."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Done!"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "All your tasks are listed once again!"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "teikjun"
        },
        "content": "+"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/list/list_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"List result\"]"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//end::list[]"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//updated by Teik Jun"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//tag::goal[]"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Goal"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "teikjun"
        },
        "content": "(Contributed by Teik Jun)"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Want to challenge yourself to complete tasks? You can set your daily goal using `goal`."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "teikjun"
        },
        "content": "To use the `goal` command:"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Initiate the command with `goal`. StudyBuddy should reply with:"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "teikjun"
        },
        "content": "+"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::productivity/goal1.png[width\u003d\"790\", align\u003d\"center\",title\u003d\"Prompt after entering `goal`\"]"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Now enter the number of tasks that you want to complete today."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "teikjun"
        },
        "content": "It should be a number between 1 and 100. As usual, hit kbd:[Enter] once you\u0027re done."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". Your goal has been set and reflected on the Daily goal tracker. All the best in achieving it!"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "teikjun"
        },
        "content": "+"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::productivity/goal2.png[width\u003d\"790\", align\u003d\"center\",title\u003d\"Prompt after entering the number 7\"]"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Your daily goal is displayed on the Productivity Page. You can find more information"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "teikjun"
        },
        "content": "about the Productivity Page in \u003c\u003cProductivity\u003e\u003e."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//end::goal[]"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::filter[]"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[[Filter]]"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Filter"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This commands helps you filter your tasks by category."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The two categories available are status and type."
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Note that Due Soon tasks are already filtered for you."
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Refer to \u003c\u003cDue Soon Tasks\u003e\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To navigate back to your main list, check out \u003c\u003cList\u003e\u003e"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Say you want to view a list of all your pending tasks."
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy provides an option to filter your list!"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `filter`:"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Initiate the command using keyword `filter`"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/filter/filter_term.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027filter\u0027\"]"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Enter your choice."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you enter 1, you have chosen to filter by status."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/filter/filter_status.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to filter by \u0027status\u0027\"]"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You can then proceed to choose what status type you would like to filter by."
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we have filtered by \"Pending\" as an example."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/filter/filter_status_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to filter by status tag \u0027Pending\u0027\"]"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". At point 3 above, if you enter 2 instead, you have chosen to filter by task types."
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/filter/filter_type.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to filter by task \u0027type\u0027\"]"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Once again, imagine your study buddy currently looks like Figure 30 above. (at point 4)"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You can then proceed to choose what task type you would like to filter by."
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we have filtered by \"assignment\" as an example."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/filter/filter_type_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to filter by task type \u0027assignment\u0027\"]"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::filter[]"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::refresh[]"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[[Refresh]]"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Refresh"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This commands refreshes the list of tasks Due Soon as well as status tags."
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[IMPORTANT]"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Due soon list shows tasks due within the next week."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Details are in \u003c\u003cDue Soon Tasks\u003e\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Status tags include information on the tasks\u0027 status, eg: pending, overdue etc."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Say you left Study Buddy open for a few days."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you come back, you notice that the time left for the deadline on the Due Soon tasks is not accurate."
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "You can refresh them!"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Anytime you notice an inconsistency in time left/status, use this command!"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `refresh`:"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Say this is what Study Buddy looks like and you notice that the task \"Homework 1\" is still in pending status although it should be in due soon status."
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/refresh/refresh_before.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Current state (needs to be refreshed)\"]"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Initiate the refresh command using keyword `refresh` and press kbd:[enter] to confirm the action."
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Tasks have been refreshed! You will notice that the pending task has now moved to the due soon list and the status has been updated."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/refresh/refresh_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Refreshed Study Buddy\"]"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::refresh[]"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After \u0027refresh\u0027, the tasks in *All Tasks Panel* will be sorted by their deadline or start date."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::exit[]"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d\u003d Exit"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This command exits from Study Buddy."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "All your data will be saved and reloaded when you open the application later!"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can find details about this in \u003c\u003cSaving Data\u003e\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*Example:*"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "After working all day, you would like to close the application and have a good night\u0027s sleep."
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "You can always exit the application!"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "To `exit`:"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Initiate the command using keyword `bye`"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Study Buddy should respond with:"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::basic/exit/exit_confirm.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to \u0027bye\u0027\"]"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Type \u0027yes\u0027 and press kbd:[enter] to exit, the Study Buddy window will close automatically."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". If instead, you type \u0027no\u0027 and press kbd:[enter], this is what you will see,"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::basic/exit/exit_no.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Response to choosing not to exit\"]"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "You can still use `quit` command to go back!"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::exit[]"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::savingData[]"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Saving Data"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Study Buddy data is automatically saved in the hard disk after any command that changes the data."
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "When the application is closed and re-opened, you should be able to see all the data you have added previously!"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::savingData[]"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//updated by Souwmyaa"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::dueSoon[]"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d Due Soon Tasks"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The Due Soon task list is always on display in your application under `Study Buddy` -\u003e `All tasks`"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It provides the following functionality:"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". It displays your tasks that are due within the next week. (uses deadline you have provided)"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::duesoon/due_soon.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Due Soon List\"]"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". It automatically sorts these tasks in an ascending order of deadlines."
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::duesoon/due_soon_sort.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Due Soon List Auto-Sort\"]"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". It automatically adds applicable tasks when you make changes to your main list, such as add (\u003c\u003cAdd\u003e\u003e) or delete (\u003c\u003cDelete\u003e\u003e)."
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". It displays a tag with the time left to the deadline."
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "image::duesoon/due_soon_tag.png[width\u003d\"790\", align\u003d\"center\",title\u003d\"Due Soon List Time Tags\"]"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". It provides a \u003c\u003cRefresh\u003e\u003e function that allows you to refresh time/state of this list if needed."
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Time left is never displayed in days and minutes."
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Hence if the current time is 9:00 am on 01/04/2020 and the task deadline is 9:02 am on 02/04/2020, it will show time left as 1 day. (not 1 day and 2 minutes)"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Due soon list will never display finished tasks. eg: if you unarchive a completed task, it will not appear in the Due Soon list."
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::dueSoon[]"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//tag::Modules[]"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Modules"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "(Contributed by Hong Wen)"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The modules page organises your tasks into various modules."
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "By default (i.e, when there is no module created), the modules page shows the following:"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Overview*."
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This tab shows all the modules you created."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *No Module Allocated*."
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This tab shows the list of tasks that has not yet been allocated to any module."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "By default, all tasks will show up here if you have not allocated any tasks to the modules."
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_show.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"modules page\"]"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Navigation"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Navigate to modules page::"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". To navigate to the modules page, click on `Modules` -\u003e `Show Modules` in the menu bar or press kbd:[F1] in your keyboard."
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/modules_show_module.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Modules dropdown menu\"]"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Navigation in modules page::"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". The clicking on the leftmost tab shows the `*Overview*` of all your modules. it displays the module\u0027s name and their code."
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_tab_1.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Module tab `Overview`\"]"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". The rightmost tab shows the list of task that has not been allocated to any modules."
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_tab_3.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Module tab `No Module Allocated`\"]"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". The tabs in the middle are modules that you have added to the modules page."
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_tab_2.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Module tab available modules\"]"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Functions"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Create Modules"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Study Buddy provides tow approaches for user to execute `create module` and `edit module` actions."
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To start the interaction of creating a module, click on `Modules`-\u003e `Create` in the menu bar. +"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Alternatively, you can key in `create mods` into the input line."
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_nav_create.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Entry of module creation\"]"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Constraints*"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Module Name* +"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The name of this module cannot be the same as any existing modules."
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Module Code Format* +"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. The module code also need to be unique. +"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. The module code should have a 2-3 letter prefix, a 4-digit number, followed by a single postfix."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Correct Module Code Examples* +"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "LSM1303 +"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "CS2040C +"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "IS1103 +"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "MA1521"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Incorrect Module Code Examples* +"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "CSSS1234 - Prefix is too long +"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "C0001 - Prefix is too short +"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "ZZ12345 - number is more than 4 digits +"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "A1111XX - Postfix is too long"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `Create Module`:"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Click on `Module` -\u003e `Create` or key in `create mods`."
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "A prompt will show up at the bottom of the screen."
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_create_name.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for module name\"]"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Key in the name of your module.Here we use \"New Module\" as an example."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Then Study Buddy will ask for the module code."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_create_code.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for module code\"]"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Here we use \"CSS1234\" as an example."
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_create_confirm.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for confirmation\"]"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Press kbd:[enter] to confirm, and the module page will update accordingly."
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_create_result.png[width\u003d\"790\",align\u003d\"center\",title\u003d \"New Module with code CSS1234 created.\"]"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Congratulations, you have added a module to your modules page!"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Edit Modules"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To start the interaction of editing a module, click on `Modules`-\u003e `Edit` in the menu bar. +"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Alternatively, you can key in `edit mods` into the input line."
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_nav_edit.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Entry of module editing\"]"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Study Buddy provides three module editing options."
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Edit options::"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Change Module name."
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Change Module code."
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Delete Module."
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Constraints:*"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When choosing the module to edit, you need to provide a valid and existed module code."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When entering the value of new module name or new module code, you need to provide a different valid value."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The above \"valid\" judgment follows the same constraints as \u003c\u003cCreate Modules\u003e\u003e."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To `Edit Module`:"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Click on `Module` -\u003e `Edit` key in edit mods."
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "A prompt will show up to ask the module code of target module."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_edit_code.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for module mode\"]"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Key in the code of the module that you want to edit."
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"CSS1234\" as an example."
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Then Study Buddy will ask for the edit option."
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_edit_option.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Asks for edit option\"]"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Key in the index of your option."
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. \"1\" -\u003e Change Module Name"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Key in your new module name and press kbd:[enter] to confirm the editing."
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"Edited Module Name\" as an example. +"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The module page will update accordingly."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_edit_name_result.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Module name editing result\"]"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. \"2\" -\u003e Change Module Code"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Key in your new module code and press kbd:[enter] to confirm the editing."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here we use \"LY3000\" as an example. +"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The module page will update accordingly."
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_edit_code_result.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Module code editing result\"]"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Module code changed!"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. \"3\" -\u003e Delete Module"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[CAUTION]"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After successfully deleting a module, the related tasks will also be affected."
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To delete the chosen module, you only need to press kbd:[enter] to confirmed the deletion."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To better showcase the behaviour of deletion, here we use \"CS2103T\" as an example."
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... Before delete:"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "+"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_delete_before.png[width\u003d\"790\",align\u003d\"center\",title \u003d \u0027Before delete\u0027]"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "... After delete: +"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After successfully deleted target module, the module page will update accordingly and switch to"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`Overview` page."
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you switch to `No Module Allocated` tab, you\u0027ll find the tasks affected by this deletion (i.e. The tasks which belong to the deleted module)."
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::module/module_delete_after.png[width\u003d\"790\",align\u003d\"center\",title \u003d \u0027Checking the affected tasks\u0027]"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "//end::Modules[]"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//tag::Statistics[]"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Statistics"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "(Contributed by Yuting)"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "With all the tasks and modules\u0027 information you entered, Study Buddy can provide you with a real-time visualized statistics about:"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Task status"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Module related tasks\u0027 deadline/ start date"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "- Module related tasks\u0027 weight"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It utilizes different types of charts to make the information more intuitive."
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "In addition, the chart is always updated in sync with your task records."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Especially when you execute commands such as"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`add` `edit` `delete` `sort`  `find` `archive` `done` `list` and `clear`."
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The colour theme will also change randomly, hope you enjoy :)"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The statistics feature is built on top of the data collected from the basic functionality described in \u003c\u003cBasic features\u003e\u003e."
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Which means Study Buddy only supports keyboard input for statistics generating. +"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Therefore, even though this feature involves mouse-clicking, it is still designed for a fast typist."
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Navigate to Statistics Page"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can navigate to Statistics page by clicking the *Statistics* from the menu bar."
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_nav.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Entry of Statistics page\"]"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d Statistics Page User Interface and Interaction"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The left panel contains different charts for different statistics."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can use the tabs circled in light orange to navigate."
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you click on a statistics chart, the associated task records will be listed automatically in the right-side panel."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_ui.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Statistics Page User Interface \"]"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Task Status Tab"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Introduction::"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This clickable *pie chart* compares the number of tasks in different statuses."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_pie.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Task Status Chart\"]"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Clicking Action::"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you click on the chart, all tasks with the selected status will display on the right-side panel automatically."
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here is an example when you are clicking on the *Due Soon* portion."
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* The part highlighted by light purple lines represents all your Due Soon tasks."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you are clicking on it, all tasks with Due Soon status will be listed in the right-side panel."
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can refer to the screenshot below where the relevant information is highlighted for you."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_pie_click.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Clicking on \u0027Due Soon\u0027 part\"]"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Module Related Tasks\u0027 Deadline/Start Date Tab"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Introduction::"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This clickable *area chart* summarizes the task deadlines or start dates for different modules."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_area.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Module Related Tasks\u0027 Deadline/Start Date Chart\"]"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Chart Details::"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *X-axis* represents a particular date."
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *Y-axis* represents the number of tasks."
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *area* (i.e. The triangles or quadrilaterals exclude their vertices) with the same background colour represents the tasks under the same module."
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *data point* (i.e. The vertices of the triangles or quadrilaterals) represents tasks under a particular module, which will due or start on the same specific data."
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Tasks under different module have a different background colour."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Only the tasks due or start within *the next 60 days* will display in both chart or right-side panel."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Since the colour of each module is translucent, \"extra\" colours may appear as a result of data overlapping."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When clicking on an overlapping area, only one layer\u0027s related records will be listed in the right-side panel."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Clicking Action::"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After you click on the chart, the related task records will display on the right-side panel automatically."
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here are two different behaviours according to the place you click."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Click on data area*:"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The tasks under a particular module will be listed in the right-side panel."
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here is an example when you are clicking on the area of module \"CS2101\"."
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* The parts highlighted using light purple lines represents the tasks under module \"CS2101\"."
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you are clicking on those areas, the tasks under CS2101 and will due or start within the next 60 days will display in the right-side panel."
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can refer to the screenshot below where the relevant information is highlighted for you."
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_area_click_area.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Clicking on the area of module \u0027CS2101\u0027\"]"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". *Click on data point*:"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The tasks under a particular module and will due or start on a specific date will be listed in the right-side panel."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here is an example when you are clicking on the data point of tasks under module \"CS2101\" and will due or start on 13/04/2020."
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* The point circled in light purple is the data point you clicked."
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After you clicked on this point, the tasks under module \"CS2101\" and will due or start on 13/04/2020 will display in the right-side panel."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can refer to the screenshot below where the relevant information is highlighted for you."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_click_point.png[width\u003d\"790\",align\u003d\"center\",title \u003d \"Clicking on the data point of module \u0027CS2101\u0027s tasks which will due or start on 13/04/2020\"]"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Module Related Tasks\u0027 Weight Tab"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Introduction::"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This clickable *stacked bar chart* compares the weight of different types of tasks in each module."
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_bar.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Module Related Tasks\u0027 Weight Chart\"]"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Chart Details::"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *X-axis* represents different modules."
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *Y-axis* represents the weight-sum under the same module."
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The *blocks* in each bar represent the total weight of a particular task type."
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Different task type has a different background colour."
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Clicking Action::"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "After you click on the chart, the tasks under the selected module and type will display on the right-side panel automatically."
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Here is an example when you are clicking on the block which represents the assignments of module \"CS2101\"."
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* The block highlighted using light purple lines represents the assignments of module \"CS2101\"."
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When you are clicking it, all assignments of module \"CS2101\" will show in the right-side panel."
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can refer to the screenshot below where the relevant information is highlighted for you."
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::stats/stats_bar_click.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Clicking on the block of \u0027CS2101\u0027\u0027s assignments\"]"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "As the data of charts are filled dynamically, thus it is possible that their labels can overlap together. +"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This is an unfixed bug regarding the JDK which is caused by JavaFX chart off-sync."
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To get more information, you may refer to link:{jdk_bug_report}[here]. +"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When this issue happens, you can use any command that can trigger chart updating to refresh the chart."
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//end::Statistics[]"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//updated by gx-huang"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::calendar[]"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Calendar"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "(contributed by gexiang)"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Constraints*"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The calendar GUI does not work well if the window size is set too small."
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". You will not be able to navigate too far into the past/ future using CLI."
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The calendar feature allows you to visualise your schedule by displaying the number of task you have for the month."
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This allows students to plan their time efficiently."
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The calendar feature can be toggled by clicking `Calendar` from the menu bar."
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::calendar/calendar_init.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"calendar interface\"]"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* `Previous` and `Next` buttons can be used to navigate through previous and next months respectively. `Current month` button brings you to the current date, which is in a blue border."
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Clicking on any date will show you all tasks for that day."
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Keep in mind that the *Index* shown in this panel cannot be used for other commands."
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::calendar/calendar_click.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"calendar after clicking on a date\"]"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d Navigation using CLI"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Study buddy also allows you to navigate to any date in the `Calendar`."
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". To initiate fast navigation, simply key in `calendar` into the input line."
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Study buddy will ask you for a date"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::calendar/Calendar_CLI_Date.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Interactive prompt after keying in calendar\"]"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "In this example, we entered `20/04/2020`."
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Input your date using the format shown and press kbd:[enter] once to proceed."
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Press kbd:[enter] again to confirm your command."
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "You will now see the calendar for your selected date as well as all the tasks on that day."
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image::calendar/calendar_after_CLI.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Successfully navigated calendar using CLI\"]"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//end::calendar[]"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//updated by Teik Jun"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//tag::productivity[]"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d Productivity"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "(Contributed by Teik Jun)"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The productivity page shows insights related to your productivity over the past day, week and more."
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "teikjun"
        },
        "content": "By keeping tabs on your past productivity, you can improve your future productivity."
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The productivity feature also gamifies your task management experience."
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Doing work has never been more fun!"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Daily Productivity Tab"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::productivity/daily_tab.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Daily Productivity Tab\"]"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "To get started, click on the Productivity menu button or type kbd:[F6]."
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The daily productivity tab tracks the number of tasks you completed today."
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "teikjun"
        },
        "content": "As you complete tasks using the `done` command, you will get closer to your daily goal."
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Completing your goal each day adds to your streak."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Your streak will reset to zero if you fail to complete your goal."
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "You can set a daily goal for the number of tasks you want to complete using the command `goal`."
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Refer to \u003c\u003cGoal\u003e\u003e for more details on the `goal` command."
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Note that the streak can only be increased once a day,"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "teikjun"
        },
        "content": "even if you change your goal after completing your streak."
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Weekly Productivity Tab"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::productivity/weekly_tab.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Weekly Productivity Tab\"]"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "teikjun"
        },
        "content": "On the weekly productivity tab, you can look back on your progress over the past week."
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The weekly tab displays information about your productivity for the past seven days."
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Here, you can keep track of the total number of tasks you completed this week."
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "teikjun"
        },
        "content": "You can visualize the number of tasks you completed using the bar chart shown."
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Furthermore, you can keep track of the number of tasks that went overdue this week,"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "teikjun"
        },
        "content": "so that you can be more punctual in the future."
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "teikjun"
        },
        "content": "If you complete or add a task while looking at the weekly tab or productivity points tab,"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "teikjun"
        },
        "content": "the color theme changes randomly."
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d\u003d Productivity Points Tab"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "teikjun"
        },
        "content": "image::productivity/points-tab.png[width\u003d\"790\",align\u003d\"center\",title\u003d\"Productivity Points Tab\" title-align\u003d\"center\"]"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "teikjun"
        },
        "content": "You can go to this tab directly by clicking your Productivity Point count on the top right of the menu."
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The Productivity Points tab displays your current Productivity Points (PP) and your progression."
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "teikjun"
        },
        "content": "You gain Productivity Points upon adding tasks, completing tasks, and using advanced features in StudyBuddy."
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "On the other hand, you lose Productivity Points when your tasks go Overdue."
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Here are some examples of how to obtain Productivity Points in StudyBuddy:"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Adding a task: _+1_"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Completing a task: _+10_"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Completing your daily goal: _+(points equivalent to daily goal)_"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "teikjun"
        },
        "content": ".. Using advanced features; _+1_ (Explore StudyBuddy to find out more!)"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Letting a task go Overdue: _-1_"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "teikjun"
        },
        "content": "You start with some productivity points."
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "teikjun"
        },
        "content": "They\u0027re free! :)"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//end::productivity[]"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::Password[]"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Password [Coming in v2.0]"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "(Contributed by ge xiang) +"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "In order to protect your privacy from shared users of a computer, Study Buddy v2.0 will include a new feature that encrypts your data."
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "You will be the only one able to view your tasks using your password that you can set optionally."
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Here\u0027s how to protect your data:"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Set a password"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". When you exit Study Buddy, your tasks stored in `tasklist.json` will be encrypted."
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". The next time you use `Study Buddy`, you will be required to enter the same password and Study Buddy will decrypt the file for you."
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". You will have unlimited tries to enter the password."
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Remember to use a strong password!"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//end::Password[]"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "teikjun"
        },
        "content": "//updated by Souwmyaa \u0026 Teik Jun"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//tag::summary[]"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[[Summary]]"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "(Contributed by Souwmyaa) +"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". help \u003c\u003cHelp\u003e\u003e"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". add \u003c\u003cAdd\u003e\u003e"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". edit \u003c\u003cEdit\u003e\u003e"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". archive \u003c\u003cArchive/ Unarchive\u003e\u003e"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". clear \u003c\u003cClear\u003e\u003e"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". create mods \u003c\u003cCreate Modules\u003e\u003e"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". delete \u003c\u003cDelete\u003e\u003e"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". view renamed \u003c\u003cView renamed\u003e\u003e"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". done \u003c\u003cDone\u003e\u003e"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". find \u003c\u003cFind\u003e\u003e"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". list \u003c\u003cList\u003e\u003e"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". goal \u003c\u003cGoal\u003e\u003e"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". filter \u003c\u003cFilter\u003e\u003e"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". sort \u003c\u003cSort\u003e\u003e"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". refresh \u003c\u003cRefresh\u003e\u003e"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". calendar \u003c\u003cCalendar\u003e\u003e"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "teikjun"
        },
        "content": ". bye \u003c\u003cExit\u003e\u003e"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "//end::summary[]"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//updated by gx-huang"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//tag::FAQ[]"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "(Contributed by Teik Jun \u0026 ge xiang)"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Study Buddy folder (should be under data -\u003e taskList.json)."
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Q*: How do I save my data? +"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*A*: Study buddy saves your data automatically after every command."
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Q*: The task I\u0027m trying to delete/archive is in the task list, but study buddy keeps replying that my index is out of range! +"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*A*: Check that you are using the index from the \"All Tasks\" list. This can be accessed from the tab `StudyBuddy` -\u003e `All tasks`. +"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Unless you are using the `unarchive` command, use the \"Archived list\" index found at `StudyBuddy` -\u003e `Archived tasks` instead."
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "teikjun"
        },
        "content": "*Q*: How do I update to the latest version of Study Buddy +"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "teikjun"
        },
        "content": "*A*: Simply download the latest `.jar` file released on our GitHub page: +"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/releases"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 145,
      "souwmyaa": 346,
      "aegis-bot": 62,
      "wyt-sonia": 682,
      "-": 86,
      "gx-huang": 82
    }
  },
  {
    "path": "docs/UsingAppVeyor.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d AppVeyor"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "https://www.appveyor.com/[AppVeyor] is a _Continuous Integration_ platform for GitHub projects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It runs its builds on Windows virtual machines."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "AppVeyor can run the project\u0027s tests automatically whenever new code is pushed to the repo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This ensures that existing functionality and features have not been broken on Windows by the changes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "The current AppVeyor setup runs `gradlew.bat test` whenever someone pushes code to the repo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "If you would like to customize your AppVeyor build further, you can learn more about AppVeyor from the https://www.appveyor.com/docs/[AppVeyor Documentation]."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up AppVeyor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork the repo to your own organization."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Go to https://ci.appveyor.com/, and under `Login`, click on `GitHub` to login with your GitHub account."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Enter your GitHub account details if needed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/login.png[Click on GitHub in the login page]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After logging in, you will be brought to your projects dashboard."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Click on `NEW PROJECT`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/add-project-1.png[Click on \"NEW PROJECT\" in the projects dashboard]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You will be brought to the `Select repository` page."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Select `GitHub`."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* On your first usage of AppVeyor, you will need to give AppVeyor authorization to your GitHub account."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Click on `Authorize GitHub`."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/add-project-2.png[Click on Authorize GitHub]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* This will bring you to a GitHub page that manages the access of third-party applications to your repositories."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Depending on whether you are the owner of the repository, you can either grant access:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "image:grant_access.png[Grant Access]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Or request access:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "image:request_access.png[Request Access]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". AppVeyor will then list the repositories you have access to in your GitHub account."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Find the repository you want to set AppVeyor up on, and then click `ADD`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/add-project-3.png[Click \"Add\" on the repository you want to set AppVeyor up on]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". AppVeyor will then be activated on that repository."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To see the CI in action, push a commit to any branch!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Go to the repository and see the pushed commit."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "There should be an icon which will link you to the AppVeyor build:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "image:appveyor/ci-Pending.png[Commit build]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "* As the build is run on a remote machine, we can only examine the logs it produces:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/ci-log.png[AppVeyor build]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ". Update the link to the \"build status\" badge at the top of `README.adoc` to point to the AppVeyor build status of your own repo."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "* To find your build status badge URL, first go to your project settings by clicking on the \"Settings\" icon:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/project-settings-1.png[Click on project settings]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "* Then go to the `Badges` section of your project settings by clicking on it:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/project-settings-2.png[Click on \"Badges\"]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* As AppVeyor does not provide asciidoc code for the badge, we will have to create our own."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Start by copying the markdown code provided:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/project-settings-3.png[Copy the markdown code]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "The markdown code should be in this format:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "[![Build status](\u003clink to image\u003e)](\u003clink to project\u003e)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Convert it to the asciidoc format as follows:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink to project\u003e[image:\u003clink to image\u003e[Build status]]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "The asciidoc code should look similar to:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "https://ci.appveyor.com/project/damithc/addressbook-level3[image:https://ci.appveyor.com/api/projects/status/3boko2x2vr5cc3w2?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Copy and paste the asciidoc code to your `README.adoc` file."
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 22,
      "-": 75
    }
  },
  {
    "path": "docs/UsingCheckstyle.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using Checkstyle-IDEA"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Configuring Checkstyle-IDEA"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ". Install the Checkstyle-IDEA plugin by going to `File` \u003e `Settings` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS). +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Select `Plugins`, press `Browse Repository`, and find the plugin. +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Restart the IDE to complete the installation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `File` \u003e `Settings...` \u003e `Other Settings` \u003e `Checkstyle`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ". Set `Scan Scope`  to `Only Java sources (including tests)`, so that the plugin will run checkstyle for our test source codes as well"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Ensure that the `Checkstyle version` is set to `8.1`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This is the same version that we are using inside Gradle, so that you won\u0027t get any errors due to version incompatibility"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* If `Checkstyle version` is not set to `8.1`, set it to version `8.1` and click `Apply`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "image::checkstyle-idea-scan-scope.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ". Click the plus sign under `Configuration File`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Enter an arbitrary description e.g. studybuddy"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Use a local Checkstyle file`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ". Use the checkstyle configuration file found at `config/checkstyle/checkstyle.xml`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Next` \u003e `Finish`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ". Mark `Active` for the newly imported check configuration"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "image::checkstyle-idea-configuration.png[width\u003d\"700\"]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Troubleshooting Checkstyle-IDEA"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: When importing `checkstyle.xml`, Checkstyle-IDEA plugin complains that `The Checkstyle rules file could not be parsed. ... The file has been blacklisted for 60s.`**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: `checkstyle.xml` is written for a particular version, but the plugin was not configured to the correct version."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Ensure that you have selected the correct `Checkstyle version` that matches the version in `build.gradle` and have clicked `Apply`, as `checkstyle.xml` is written for Gradle\u0027s checkstyle."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: After setting up `checkstyle.xml`, Checkstyle-IDEA plugin does not seem to highlight the errors / real-time scanning seems broken.**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: The plugin may not immediately run after setting it up."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Restart the IDE."
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "wyt-sonia": 2,
      "-": 41
    }
  },
  {
    "path": "docs/UsingCoveralls.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using Coveralls"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "https://coveralls.io/[Coveralls] is a web service that tracks code coverage over time for GitHub projects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Coveralls requires Travis CI to be set up beforehand as Travis sends the coverage report from the latest build to Coveralls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If you have not set up Travis CI, see \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Currently, Coveralls supports Travis CI but not AppVeyor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up Coveralls"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Go to https://coveralls.io/ and click `SIGN IN`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Then click `GITHUB SIGN IN` and enter your GitHub account details if needed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". After logging in, you will be brought to the `Your Repositories` page."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "On the site\u0027s navigation bar, click https://coveralls.io/repos/new[ADD REPOS]."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ". Find the switch for the forked repository."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* If the organization is not shown, click `GITHUB SETTINGS` as shown below:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/github_settings.png[GitHub settings]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This should bring you to a GitHub page that manages the access of third-party applications."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Depending on whether you are the owner of the repository, you can either grant access"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "image:grant_access.png[Grant Access]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "or request access"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "image:request_access.png[Request Access]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "to Coveralls so that it can access your repository."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If your repository cannot be found, click `SYNC REPOS`."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/sync_repos.png[Sync repos]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ". Activate the switch."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/flick_repository_switch.png[Activate the switch]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ". Update the link of the `Coverage Status` badge at the top of your \u003c\u003cREADME#, README.adoc\u003e\u003e to point to that of your own repo by replacing the outlined areas with `your-org-name/your-repo-name`."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/coverage_asciidoc_code.png[Coverage Status Badge]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ". You can now see the coverage report for your project after each Travis build by clicking on the `Coverage Status` badge."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/coverage_report.png[Coverage Report Summary]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Disabling Coveralls Automatic Comments on Pull Requests"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Coveralls automatically comments on the coverage status of the pull requests in GitHub."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If it\u0027s a hindrance, you can disable it in the settings of your project in Coveralls:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Settings`."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Uncheck the `LEAVE COMMENTS?` checkbox."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Then click `SAVE CHANGES`."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/disable_comments.png[Disable comments,width \u003d 942]"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 12,
      "-": 52
    }
  },
  {
    "path": "docs/UsingGradle.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using Gradle"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "https://gradle.org/[Gradle] is a build automation tool."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "It can automate build-related tasks such as"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* Running tests"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* Managing library dependencies"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* Analyzing code for style compliance"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "The gradle configuration for this project is defined in the _build script_ link:../build.gradle[`build.gradle`]."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "To learn more about gradle build scripts, refer https://docs.gradle.org/current/userguide/tutorial_using_tasks.html[Build Scripts Basics]."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Running Gradle Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To run a Gradle command, open a command window on the project folder and enter the Gradle command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Gradle commands look like this:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* On Windows: `gradlew \u003ctask1\u003e \u003ctask2\u003e ...` e.g. `gradlew clean test`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* On Mac/Linux: `./gradlew \u003ctask1\u003e \u003ctask2\u003e...` e.g."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`./gradlew clean test`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "If you do not specify any tasks, Gradlew will run the default tasks `clean` `test` `coverage`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Cleaning the Project"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* *`clean`* +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the files created during the previous build tasks (e.g. files in the `build` folder). e.g. `./gradlew clean`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "*`clean` to force Gradle to execute a task*: +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "When running a Gradle task, Gradle will try to figure out if the task needs running at all."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If Gradle determines that the output of the task will be same as the previous time, it will not run the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For example, it will not build the JAR file again if the relevant source files have not changed since the last time the JAR file was built."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If we want to force Gradle to run a task, we can combine that task with `clean`."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Once the build files have been `clean` ed, Gradle has no way to determine if the output will be same as before, so it will be forced to execute the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Creating the JAR file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* *`shadowJar`* +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Creates the `studybuddy.jar` file in the `build/jar` folder, _if the current file is outdated_. +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `./gradlew shadowJar`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "To force Gradle to create the JAR file even if the current one is up-to-date, you can \u0027`clean`\u0027 first. +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `./gradlew clean shadowJar`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "*Why do we create a fat JAR?* If we package only our own class files into the JAR file, it will not work properly unless the user has all the other JAR files (i.e. third party libraries) our classes depend on, which is rather inconvenient."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Therefore, we package all dependencies into a single JAR files, creating what is also known as a _fat_ JAR file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To create a fat JAR file, we use the Gradle plugin https://github.com/johnrengelman/shadow[shadow jar]."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Rendering AsciiDoc files"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "* **`asciidoctor`** +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Converts AsciiDoc files in `docs` to HTML format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Generated HTML files can be found in `build/docs`."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "* **`deployOfflineDocs`** +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Updates the offline user guide, and its associated files, used by the Help window in the application."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Deployed HTML files and images can be found in `src/main/resources/docs`."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Running the application"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "* *`run`* +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "Builds and runs the application."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "* *`runShadow`* +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "Builds the application as a fat JAR, and then runs it."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Running code style checks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "* **`checkstyleMain`** +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "Runs the code style check for the main code base"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "* **`checkstyleTest`** +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Runs the code style check for the test code base"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The set of code style rules implemented can be found in `config/checkstyle/checkstyle.xml`."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To enable _exceptions_ to code styles, add in the comment `//CODESTYLE.OFF: RuleName` at the start of the section and `//CODESTYLE.ON: RuleName` at the end of the section."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "* **`test`** +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "Runs all tests."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Here are some examples:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "* `./gradlew test` -- Runs all tests"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "* `./gradlew clean test` -- Cleans the project and runs tests"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Updating Dependencies"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to run these Gradle tasks manually as they are called automatically by other relevant Gradle tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "* **`compileJava`** +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Checks whether the project has the required dependencies to compile and run the main program, and download any missing dependencies before compiling the classes. +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "See `build.gradle` -\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "`allprojects` -\u003e `dependencies` -\u003e `compile` for the list of dependencies required."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "* **`compileTestJava`** +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Checks whether the project has the required dependencies to perform testing, and download any missing dependencies before compiling the test classes. +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "See `build.gradle` -\u003e `allprojects` -\u003e `dependencies` -\u003e `testCompile` for the list of dependencies required."
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "wyt-sonia": 18,
      "-": 91
    }
  },
  {
    "path": "docs/UsingNetlify.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using Netlify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "https://www.netlify.com/[Netlify] is an automated hosting platform for deploying static websites."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "With the aid of build tools such as Gradle, Netlify provides a smoother experience for previewing documentation."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This can be done by using Netlify\u0027s https://www.netlify.com/blog/2016/07/20/introducing-deploy-previews-in-netlify/[Deploy Previews] feature, which shows a preview of the updated documentation whenever a pull request is made."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up Netlify"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork the repository to your own organization."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Go to https://www.netlify.com/ and click `Sign Up`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Next, click `GITHUB SIGN IN`, enter your GitHub account details and authorize netlify."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ". After logging in, click `New site from Git`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". You will then be brought to the setup page."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Click `GitHub` to link your repository to Netlify."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* Depending on whether you are the owner of the repository, you can either grant or request access to Netlify so that it can access your repository and build your documentation."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "image:netlify/grant_or_request_access.png[Grant or request access,width \u003d 630]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* After granting or requesting access to your repository, click `Authorize netlify`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". Pick your repository from the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ". Fill out the details as follows and then click `Deploy site`."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* Branch to deploy: select `master` branch"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* Build command: `./gradlew asciidoctor`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "The build command is the command that builds the documentation into HTML format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* Publish directory: `build/docs/html5`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "The publish directory is the directory in which the built HTML documentation resides."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ". Once Netlify has completed building your project, you can now:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* View your main branch\u0027s deployed documentation on the site name given by Netlify (customizable as shown \u003c\u003cChanging the site name of your project, below\u003e\u003e)."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "image:netlify/temp_site_name.png[Temporary site name,width \u003d 630]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Preview the updated documentation whenever a pull request is made by clicking the `Details` hyperlink next to the Netlify test status."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "image:netlify/netlify_details.png[Netlify details link,width \u003d 630]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Changing the site name of your project"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "If you don\u0027t like the site name given by Netlify, you can change it as follows:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ". Click on `Settings`."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ". Then click `Change site name` and fill in your desired site name."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "image:netlify/change_site_name.png[Change site name,width \u003d 630]"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 10,
      "-": 51
    }
  },
  {
    "path": "docs/UsingPlantUml.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using PlantUML"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images/plantuml"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction to PlantUML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "PlantUML is a tool used in this project to create UML diagrams."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "For more information about the basics of PlantUML, head over to http://plantuml.com/[its official website]."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Set up PlantUML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Installing Graphviz"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Graphviz is a dependency that PlantUML requires to generate more advanced diagrams."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Head over to the https://www.graphviz.org/download/[downloads page] on the official Graphviz website and follow instructions to install Graphviz."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Installing the `PlantUML integration` plugin for IntelliJ IDEA"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Go to `Settings` \u003e `Plugins` \u003e `Marketplace` and install the plugin `PlantUML integration`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Then go to `Settings` \u003e `Other Settings` \u003e `PlantUML` or search for PlantUML."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Configure the path to the `dot` executable."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "This executable can be found in the `/bin` directory where you installed GraphViz."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ".Settings - Other Settings - PlantUML: input the path to your dot executable"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "image::ConfiguringGraphviz.png[]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Create/Edit PlantUML diagrams"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "After installing the `PlantUML integration` plugin, simply create or open any `.puml` file to start editing it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ".Editing `DeleteSequenceDiagram.puml`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "image::EditingDeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Any changes you make in editor pane on the left will be reflected in the preview pane on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "However, do take note that these changes _will not_ be reflected in the developers guide until you export the diagram."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "//TODO: Discussion about why we\u0027re not using asciidoctor-diagram"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Export PlantUML diagrams"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "The `PlantUML integration` plugin allows you to export individual diagrams to a location of your choosing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "Click the `Save Current Diagram Only` button and choose the location to export the image file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: You will have to `git add` any new diagrams generated!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Common tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Applying consistent formatting to PlantUML diagrams"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "It is highly recommended to consistently color your UML diagrams as an visual aid."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "You can achieve this by creating a dictionary of colors and import it like CSS."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "For example, you can create a `Style.puml` with the contents:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".Style.puml"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "[source]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR #3333C4"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T1 #7777DB"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T2 #5252CE"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T3 #1616B0"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T4 #101086"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Then you can use it in another PlantUML file like this:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ".UndoSequenceDiagram.puml"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "[source]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "!include Style.puml"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "box Logic LOGIC_COLOR_T2"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "participant \":StudyBuddyParser\" as StudyBuddyParser LOGIC_COLOR"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "participant \":UndoCommand\" as UndoCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "end box"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "You can fine-tune the formatting of PlantUML diagrams with the `skinparam` command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "For example, `skinparam backgroundColor transparent` turns the background of the diagram transparent."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "For a comprehensive list of ``skinparam``s head over to the https://plantuml-documentation.readthedocs.io/en/latest/[unofficial PlantUML skinparam documentation]."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "***"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Repositioning elements in PlantUML diagrams"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "While PlantUML\u0027s automatic layout engine usually produces satisfactory results, at times the result can be less than ideal, especially on larger diagrams."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example where the default layout generated by PlantUML has a lot of overlapping lines that are hard to decipher:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ".The UI class diagram without additional formatting"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "image::RawUiDiagram.png[]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: In most cases, you should consider decomposing the diagram into smaller ones or focusing on a more specific portion of the diagram."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Here are some of the techniques we used in this project to obtain a more palatable diagram."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Link lengths"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "By default, a short link (`\\-\u003e`) points to right and a long link (`-\\-\u003e`) points downwards. you can extend any link to make it longer (```--\\-\u003e```)."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".Length of arrows and its effects"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArrowLength.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Link directions"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "Clever usage of arrow directions will resolve most layout issues."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the table below shows how the way in which you specify arrows can results in drastically different layouts for the same diagram."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".Link directions"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"40a,60a\"]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "|Source |Result"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "|[source, puml]"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "A --\u003e Z"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "B --\u003e Z"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "C --\u003e Z"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "D --\u003e Z"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "A --\u003e 1"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "B --\u003e 2"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "C --\u003e 3"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "D --\u003e 4"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "|image::AllDown.png[]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "|[source, puml]"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027default is down"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "A --\u003e Z"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027specify down"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "B -down-\u003e Z"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027shorthand for down"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "C -d-\u003e Z"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027arrow lengths take priority"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "D -down\u003e Z"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "A -up-\u003e 1"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "B -up-\u003e 2"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "C -up-\u003e 3"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "D -up-\u003e 4"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "|image::UpAndDown.png[]"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "|[source, puml]"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "A -up-\u003e Z"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "B -up-\u003e Z"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "C -up-\u003e Z"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "D -up-\u003e Z"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "A --\u003e 1"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "B --\u003e 2"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "C --\u003e 3"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "D --\u003e 4"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027Force A B C D"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "A -right[hidden]- B"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "B -right[hidden]- C"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "C -right[hidden]- D"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "|image::HiddenArrows.png[]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Reordering definitions"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "As a general rule of thumb, the layout engine will attempt to order objects in the order in which they are defined."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "If there is no formal definition, the objects is taken to be declared upon its first usage."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ".Definition ordering and outcomes"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"70a,30a\"]"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "|Source |Result"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "|[source, puml]"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "A --\u003e B"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "C --\u003e D"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "|image::ABeforeC.png[]"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "|[source, puml]"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027Class C is defined before A"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "Class C"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "A --\u003e B"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "C --\u003e D"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "|image::CBeforeA.png[]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "|[source, puml]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "package \"Rule Of Thumb\"{"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    Class C"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    A --\u003e B"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    C --\u003e D"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "|image::PackagesAndConsistency.png[]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "TIP: Explicitly define all symbols to avoid any potential layout mishaps."
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "wyt-sonia": 4,
      "-": 208
    }
  },
  {
    "path": "docs/UsingTravis.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Travis CI"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "https://travis-ci.org/[Travis CI] is a _Continuous Integration_ platform for GitHub projects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Travis CI can run the projects\u0027 tests automatically whenever new code is pushed to the repo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This ensures that existing functionality and features have not been broken by the changes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "The current Travis CI set up performs the following things whenever someone push code to the repo:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* Runs the `./gradlew clean test coverage coveralls -i` command (see \u003c\u003cUsingGradle#, UsingGradle\u003e\u003e for more details on what this command means)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* Renders documentation from asciidoc to html and automatically publishes them using GitHub Pages."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* Runs additional link:#repository-wide-checks[repository-wide checks]."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "If you would like to customise your travis build further, you can learn more about Travis from https://docs.travis-ci.com/[Travis CI Documentation]."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up Travis CI"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork the repo to your own organization."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to https://travis-ci.org/ and click `Sign in with GitHub`, then enter your GitHub account details if needed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "image:signing_in.png[Signing into Travis CI]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". Head to the https://travis-ci.org/profile[Accounts] page, and find the switch for the forked repository."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* If the organization is not shown, click `Review and add` as shown below:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "image:review_and_add.png[Review and add]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This should bring you to a GitHub page that manages the access of third-party applications."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Depending on whether you are the owner of the repository, you can either grant access"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "image:grant_access.png[Grant Access]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "or request access"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "image:request_access.png[Request Access]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "to Travis CI so that it can access your commits and build your code."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* If repository cannot be found, click `Sync account`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ". Activate the switch."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "image:flick_repository_switch.png[Activate the switch]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". This repo comes with a link:../.travis.yml[`.travis.yml`] that tells Travis what to do."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "So there is no need for you to create one yourself."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ". To see the CI in action, push a commit to the master branch!"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* Go to the repository and see the pushed commit."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "There should be an icon which will link you to the Travis build."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "image:build_pending.png[Commit build]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "* As the build is run on a provided remote machine, we can only examine the logs it produces:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "image:travis_build.png[Travis build]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ". If the build is successful, you should be able to check the coverage details of the tests at http://coveralls.io/[Coveralls]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ". Update the link to the \u0027build status\u0027 badge at the top of the `README.adoc` to point to the build status of your own repo."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Enabling auto-publishing of documentation"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ". Ensure that you have followed the steps above to set up Travis CI."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ". On GitHub, create a new user account and give this account collaborator and admin access to the repo. +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "   Using this account, generate a personal access token https://github.com/settings/tokens/new[here]."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Personal access tokens are like passwords so make sure you keep them secret!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "If the personal access token is leaked, please delete it and generate a new one."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "We use a new user account to generate the token for team projects to prevent team members from gaining access to other team members\u0027 repos. +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "If you are the only one with write access to the repo, you can use your own account to generate the token."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "* Add a description for the token. (e.g. `Travis CI - deploy docs to gh-pages`)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "* Check the `public_repo` checkbox."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "* Click `Generate Token` and copy your new personal access token."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "We will use this token to grant Travis access to the repo."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "image:generate_token.png[Generate token]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ". Head to the https://travis-ci.org/profile[Accounts] page, and find the switch for the forked repository."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "image:flick_repository_switch.png[Activate the switch]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Click on the settings button next to the switch."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "In the Environment Variables section, add a new environment variable with"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "* name: `GITHUB_TOKEN`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "* value: personal access token copied in step 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "* Display value in build log: `OFF`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "image:travis_add_token.png[Travis add token]"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "*Make sure you set `Display value in build log` to `OFF`.* +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Otherwise, other people will be able to see the personal access token and thus have access this repo. +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, make sure you *do not print `$GITHUB_TOKEN` to the logs* in Travis scripts as the logs are viewable by the public."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ". Now, whenever there\u0027s a new commit to master branch, Travis will push the latest documentation to gh-pages branch."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "**To verify that it works,**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Trigger Travis to regenerate documentation."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To do so, you need to push a new commit to the master branch of the fork. +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   Suggested change: Remove the codacy badge from `README`."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ". Wait for Travis CI to finish running the build on your new commit."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ". Go to the URL `\\https://\u003cyour-username-or-organization-name\u003e.github.io/studybuddy/index.html`."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You should see your `README` file displayed."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Repository-wide checks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "In addition to running Gradle checks, we also configure Travis CI to run some repository-wide checks."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover _all_ files in the repository."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "They check for repository rules which are hard to enforce on development machines such as line ending requirements."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To run all checks locally on these operating systems, execute the following in the repository root directory:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[source,shell]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "./config/travis/run-checks.sh"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "Any warnings or errors will be printed out to the console."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Implementing new checks"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Checks are implemented as executable `check-*` scripts within the `config/travis/` directory."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The `run-checks.sh` script will automatically pick up and run files named as such."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Check scripts should print out errors in the following format:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "...."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "SEVERITY:FILENAME:LINE: MESSAGE"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "...."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "where `SEVERITY` is either `ERROR` or `WARN`, `FILENAME` is the path to the file relative to the current directory, `LINE` is the line of the file where the error occurred and `MESSAGE` is the message explaining the error."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Check scripts must exit with a non-zero exit code if any errors occur."
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 1,
      "wyt-sonia": 24,
      "-": 124
    }
  },
  {
    "path": "docs/team/aegis-bot.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d Tin Hong Wen  - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d PROJECT: Study Buddy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "StudyBuddy is a desktop application designed for students who *wish to manage their module related tasks* in a convenient and user-friendly interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "It is *optimized for those who prefer to work with a Command Line Interface* (CLI) but still contains some aspects of Graphical User Interface (GUI) which was written using JavaFX."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "The codebase is in Java and contains about 13kLoc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Main Enhancements"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Designed the Module Feature"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "This optional feature enables users to view their tasks sorted according to the modules that they have taken."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Each module is designed to contain a name, a unique module code, as well as all the tasks that it holds."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Users can choose to assign their task to any module they want (or not at all), as well as create new modules,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "edit or delete any existing modules."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Given how college students have many, many task coming from multiple assignments,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "I believe this is one of the good way they can organise and view their tasks if they need to sift"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "multiple tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Highlights:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "One of the challenging features is to design something for tasks that do not have any modules"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "assigned to them. All task by default will have a module attached to them, so we have to create a \"figurehead\" module"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "for these tasks. This figurehead module have to be able to conceal its module code from the user and has to prevent"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "users from edits and deletes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Another difficulty is dealing with storage. To avoid changing the order of the tasks, module has to be designed to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "temporarily store tasks instead of actually storing it in the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Edit \u0026 Create Module Function"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "These 2 features allows users to create new modules, as well as edit existing modules. Users cannot"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "create any modules with duplicate names or code, or those with invalid module codes. In `edit mods`,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "users can choose to edit name, code or even delete existing modules."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Highlights:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "One key challenge with designing `edit mod` function is dealing with existing tasks is under the module."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "The program has to be designed to change the module of each consecutive task that was under the module,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "making this portion fragile."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Added Complete Function"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Allows users to set their task from pending to `Finished`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "To allow users to mark their task as complete so that it can be easily ignored /hidden by the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Minor Enhancements"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d\u003d Added \u0027modules\u0027 option in Edit function"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "Allow users to edit change the module in which the task was assigned to."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "So that users can edit and reassign task to a different existing module."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Team-based Tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. Debugged a serious bug involving storage that was holding the entire team back for a week at the start of tP."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. Help to refactor team\u0027s code by creating parent class."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. Helped repackaged some of the old codes into separate folders, as well as reorganizing"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "`commands` and `interactiveprompts` into many folders"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. Modified \u0026 cropped many of the team\u0027s UG images for better readability."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. Helped shorten some existing nested codes with `streams`."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Review/Mentoring"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "* Left constructive feedback on teammate\u0027s repo."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "* Left feedback for another team\u0027s DG. https://github.com/AY1920S2-CS2103-W14-3/main/issues/59[59]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "* Left feedback for another team\u0027s UG. https://github.com/aegis-bot/ped/issues/4 [4]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Code contributed:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#search\u003daegis-bot\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-02-14\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d User guide"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "include::../UserGuide.adoc[tag\u003dintro]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "include::../UserGuide.adoc[tag\u003dDone]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "include::../UserGuide.adoc[tag\u003dModules]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003d\u003d\u003d Developer Guide"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "include::../DeveloperGuide.adoc[tag \u003d ArchitectureDiagram]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "include::../DeveloperGuide.adoc[tag \u003d mod]"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ". Diagrams:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/ArchitectureDiagram.puml[ArchitectureDiagram]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/ModuleSequenceDiagram.puml.puml[ModuleSequenceDiagram]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 111
    }
  },
  {
    "path": "docs/team/gx-huang.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d Huang ge xiang - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d PROJECT: Study Buddy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "StudyBuddy is a desktop application designed for students who *wish to manage their module related tasks* in a convenient and user-friendly interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "It is *optimized for those who prefer to work with a Command Line Interface* (CLI) but still contains the benefits of *Graphical User Interface* (GUI)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "The codebase is in Java and contains about 13kLoc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Enhancements"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Major enhancements*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Added a *calendar* to Study buddy."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** _What it does_:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** The calendar allows users to have an overview of all the tasks that has to be done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** Calendar also allows you to view all tasks due on the day the user clicks on."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** _Justification_:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** This feature is important as the task list will be too cluttered without it."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** A calendar gives a good indication of how busy the user is going to be."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** _Highlights_"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "+"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Challenges faced when implementing this feature:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". Had to learn what the different panes and objects in javafx does and choose the most suitable one for the feature"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ". There was an 50% chance (tested) the click event would return the wrong object,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "leading to complications. This meant that tasks cannot be within the calendar itself."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "I had to reverse engineer the algorithm used to generate a calendar and use that data to find tasks for the date the user clicked on."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* *Archive* and *unarchive*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** _What it does_:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** Allows users to store their task into a separate archive list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** Unarchive retrieves tasks from archive list and stores it into the main list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** _Justification_:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** Archive allows users to store task that they have completed or do not wish to look at right now, while still keeping those tasks in check."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** This is important as users sometimes do not wish to delete a task they completed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** _Highlights_:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*** This feature was not particularly difficult to implement. However, as it is the first feature to be pushed to address book,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "I had to carefully trace and modify the code to make sure it did not break address book."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "*Minor enhancements*"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* *Calendar view command*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** Calendar view command was created in response to an https://github.com/AY1920S2-CS2103T-W16-3/main/issues/217[issue] that claimed the app is not CLI friendly."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** This command allows a user to jump to any date they want to on the calendar."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "** It also serves as a way to find tasks by date."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Code contributed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#\u003dundefined\u0026search\u003dgx-huang[Tp-dashboard]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Team-based Tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Helped set up the github team and repo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Assigned issues to my team mates. https://github.com/AY1920S2-CS2103T-W16-3/main/issues/33[33], https://github.com/AY1920S2-CS2103T-W16-3/main/issues/31[31]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Wrote proposed feature in developer\u0027s guide."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Created test cases for classes that were not mine. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/61[61]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Review/Mentoring"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Left constructive feedback on my team mate\u0027s pull request. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/58[58]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Helped resolve some issues my team mates had regarding address book 3. https://github.com/AY1920S2-CS2103T-W16-3/main/issues/49[49]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* Left feedback for another team\u0027s DG. https://github.com/AY1920S2-CS2103-W14-3/main/issues/59[59]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d User guide contributions"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Given below is a section that I contributed to the User Guide. It showcases my ability to write documentation targeting end-users."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "include::../UserGuide.adoc/[tag\u003dcalendar]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d Developer Guide contributions"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Given below are some sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "include::../DeveloperGuide.adoc/[tag\u003dcalendar]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "include::../DeveloperGuide.adoc/[tag\u003darchive]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "include::../DeveloperGuide.adoc/[tag\u003ddataencryption]"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 86
    }
  },
  {
    "path": "docs/team/souwmyaa.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003d\u003d\u003d [teal]#*Soumwyaa Sabarinathann - Project Portfolio*#"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Project: Study Buddy*#"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Overview*#"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "StudyBuddy is a desktop application designed for students who *wish to manage their module related tasks* in a convenient and user-friendly interface. The application is written in Java and spans over 12k lines of code."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Summary of contributions*#"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* *Major enhancement*: added *the Due Soon List feature*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It allows users to view a list of tasks due within the next week in one panel. It also displays time left before the deadline for each due soon task, auto-sorts tasks to be in order of most urgent to least urgent deadline and auto-updates when changes are made to the data (additions, deletions, edits etc). +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It also provides a refresh command that is used to update the due soon list so it doesn\u0027t become invalid after a certain duration of time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Helpful to the user because it reminds them of upcoming deadlines."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Highlights:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "This implementation was challenging because it required changes to be made to every command that changed data. It involved working in the logic, model, storage and UI components of the code base. It also involved changing the GUI."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* *Major enhancement*: added *the Add Duplicate Tasks feature*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It allows users to add duplicate tasks by automatically appending brackets with a number to its task name. The number corresponds to the number of times task has been duplicated."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "If the user makes a mistake in one field while adding task, they will have to re-enter all 12 fields if duplicates are not allowed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Highlights:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "It required working on other commands, such as edit command and unarchive command to prevent duplication. Since study buddy already had a lot of checks to prevent duplicate tasks, it required a large amount of refactoring code."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* *Minor enhancement*: added *the Delete Task command*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Function: Allows user to delete an existing task in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Justification: Helpful to the user because it enables them to remove tasks from their list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "* *Minor enhancement*: added *the Filter command*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Function: Allows user to filter by status (eg: finished, pending etc) or by type (eg: assignment, quiz etc)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "** Justification: This feature is extremely helpful to the user because it enables them to filter their list of all tasks by various categories."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Code contributed:*# +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#\u003dundefined\u0026search\u003dsouwmyaa"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Team-based Tasks*# +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. Refactored all occurrences of Address Book to Study Buddy. Link to Pull Request https://github.com/AY1920S2-CS2103T-W16-3/main/pull/135[#135] +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. Helped to maintain the issue tracker. Links to issues https://github.com/AY1920S2-CS2103T-W16-3/main/issues/283[#283], https://github.com/AY1920S2-CS2103T-W16-3/main/issues/268[#268]. +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "3. Attempted to find bugs in all team members code to help them fix any issues. Links to issues https://github.com/AY1920S2-CS2103T-W16-3/main/issues/107[#107], https://github.com/AY1920S2-CS2103T-W16-3/main/issues/256[#256] +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "4. Wrote test cases for error-prone classes, even if they were not mine. Links to Pull Requests https://github.com/AY1920S2-CS2103T-W16-3/main/pull/166[#166], https://github.com/AY1920S2-CS2103T-W16-3/main/pull/139[#139] +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "5. Contributed to the forum. Link to issue https://github.com/nus-cs2103-AY1920S2/forum/issues/75[#75]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Review/Mentoring*# +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "1. Reviewed other members Pull Requests. Links to Pull Requests https://github.com/AY1920S2-CS2103T-W16-3/main/pull/59[#59], https://github.com/AY1920S2-CS2103T-W16-3/main/pull/279[#279] +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "2. Reviewed another team\u0027s DG and provided useful feedback. Links to issues https://github.com/AY1920S2-CS2103T-W17-3/main/issues/208[#208], https://github.com/AY1920S2-CS2103T-W17-3/main/issues/204[#204]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*User guide*#"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|_Given below is a section that I contributed to the User Guide. It showcases my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddelete]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "[teal]#*Developer Guide*#"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|_Given below are some sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddueSoon]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003drefresh]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "Diagrams: +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/ModelClassDiagram.puml[Model class diagram] +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/DueSoonActivityDiagram.puml[Due soon activity diagram] +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/DueSoonSequenceDiagram.puml[Due soon sequence diagram] +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/AddDueSoonActivityDiagram.puml[Add due soon task activity diagram] +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/AddDueSoonSequence.puml[Add due soon task sequence diagram] +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/DeleteDueSoonActivityDiagram.puml[Delete due soon task activity diagram] +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/DeleteDueSoonSequence.puml[Delete due soon task sequence diagram]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 80
    }
  },
  {
    "path": "docs/team/teikjun.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003d\u003d\u003d [teal]#*Tan Teik Jun - Project Portfolio*#"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Project: Study Buddy*#"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Overview*#"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "StudyBuddy is a desktop application designed for students who *wish to manage their module related tasks* in a convenient and user-friendly interface. The application is written in Java and spans over 12k lines of code."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Summary of contributions*#"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* *Major enhancement*: added *Productivity feature*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "It allows the user to keep track of productivity in a fun manner. The productivity feature displays metrics that are recorded over the past day, week, and more. It also introduces a point and rank system to gamify the user experience."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "This is helpful to the user as it allows the user to keep track of progress in an interesting way."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Highlights:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "This implementation was challenging because it required a lot of statistics to be logged all over the application. Finally, these statistics needed to be displayed on the Ui in an visually appealing and useful manner."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* *Major enhancement*: added *the Edit Task command*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Function:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "The edit command allows the user to edit any information about the tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "This includes the task name, date, description, etc."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Justification:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "If the user needs to edit the detail of the task, the user can simply use the edit"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "command instead of deleting the task and creating a new one. This is hugely convenient for the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Highlights:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "This implementation was challenging because editing things may lead to a lot of side effects. However, I have managed to avoid these side effects by using defensive programming."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* *Minor enhancement*: added *the Find Task command*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Function: Allows user to find an existing task in the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Justification: Helpful to the user when the list is long because it enables them to look for a certain task in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* *Minor enhancement*: added *the List command*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Function: Allows user to list all the existing tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Justification: After using a command like Find or Filter, the List command is necessary to recover the original list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* *Minor enhancement*: added *the Help command*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Function: Shows the user the list of available commands and the user guide."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Justification: Users require the help command when they are unsure of how to use the application."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "* *Minor enhancement*: added *navigation shortcuts for pages*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Function: Allows user to navigate the pages using keys instead of using"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "** Justification: This feature helps fast typists (the target user) work more efficiently."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Code contributed:*# +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#\u003dundefined\u0026search\u003dteikjun"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Team-based Tasks*# +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "1. Set up the team repository and ensured that the repository was protected from any accidental merges. +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "2. Ensured that the integration process was smooth and bug-free. Set up Travis and AppVeyor to ensure that only working code is integrated. +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "3. Ensured code quality was well-maintained. Set up Codacy to keep track of code quality and coverage. +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "4. Ensured that the code was well-tested. I wrote tests for classes that were error-prone, and set up Coveralls to keep track of code coverage. +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "5. Helped to maintain the issue tracker. Links to issues https://github.com/AY1920S2-CS2103T-W16-3/main/issues/46[#46], https://github.com/AY1920S2-CS2103T-W16-3/main/issues/47[#47]. +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Review/Mentoring*# +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "1. Reviewed other members Pull Requests and helped them learn git workflow. Example Pull Request: https://github.com/AY1920S2-CS2103T-W16-3/main/pull/56[#56] +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "2. Reviewed another team\u0027s DG and provided useful feedback. Example Issue: https://github.com/AY1920S2-CS2103T-W17-3/main/issues/209[#209]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*User guide*#"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|_Given below is a section that I contributed to the User Guide. It showcases my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "include::../UserGuide.adoc[tag\u003dproductivity]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[teal]#*Developer Guide*#"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|_Given below are some sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dlogicComponent]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dproductivity]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Diagrams: +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/ListTaskSequenceDiagram.puml[Add List Task Sequence Diagram] +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/LogicClassDiagram.puml[Add Logic Class Diagram] +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/ProductivityObjectDiagram.puml[Add Productivity Feature Object Diagram] +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/ProductivityActivityDiagram.puml[Add Productivity Feature Activity Diagram]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 92
    }
  },
  {
    "path": "docs/team/wyt-sonia.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d Wang Yuting - Project Portfolio"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d PROJECT: Study Buddy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "StudyBuddy is a desktop application designed for students who *wish to manage their module related tasks* in a convenient and user-friendly interface. The application is written in Java and spans over 12k lines of code."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Major enhancement*: designed *the interactive process logic*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Function*:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". It allows user to execute his/her command in an interactive way."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Display clear instruction or error message at each interaction step."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". When invalid command received (e.g. the user made a typo mistake), the interaction will not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "terminate, instead, it will response with clear instruction and wait for user\u0027s next action."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Allow user to quit from interaction using \"quit\" keyword."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Justification*: +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". This feature saves user from remembering long, wordy commands to use the command line interface."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The \"stay and wait\" reaction against any invalid input improves the typo-tolerance of the application, which contributes a"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "notable benefit to CLI users."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Highlights*:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The implementation was challenging because it required a huge changes in the original logic."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The time left me to design and develop this logic was tight because"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "I needed to finish it so that my team can started to work on their own part."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Major enhancement*: designed *the UI/UX of Study Buddy*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Function*:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The GUI of:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Landing page (i.e. the all tasks page)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Modules page"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Statistics page"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Calendar page"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. The Task card (i.e. the items in task list)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Responsive layout. The inner components can automatically adjust themselves according to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the current width and height."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The mouse events when:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. hovering on menu bar item, calendar button, as well as tabs in modules and statistics page"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. focusing on list items (e.g. all tasks list)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. clicking on chars in statistics page"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The GUI of this application follows a relaxed style,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "which helps users to ease the pressure accumulated from school."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The responsive layout allows the application to be adapted to different screen sizes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The mouse event makes it easier for user to focus on what he/she is doing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Highlights*:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "To design and implement of the UI/UX requires lot of self-learning and reference."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Major enhancement*: added *task summary feature*"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Function*:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Automatically summarizes the collected data into different charts."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. *pie chart* compares the number of tasks in different statuses."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. *area chart* summarizes the task deadlines or start dates for different modules."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. *stacked bar chart* compares the weight of different types of tasks in each module"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Retrieves and displays relevant tasks when user clicking on a chart."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Listen to the data change and update simultaneously."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The statistics helps user to integrates scattered information in one place and represents in dynamic charts,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "witch makes the information more straightforward."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". With this feature, user can be more productive as they have better idea of what is going on and"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "what is more important."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The statistics is auto-generated along the way the user managing their records using keyboard input,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "which means this feature can contribute significant value to those fast typist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Highlights*:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". The data bind of each chart is not easy to implement, especially when I take this opportunity to"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "practice on Lambda."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". It also needs to be careful when choosing a suitable chart for a data set. Even for the same collection of data,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "the comparison results obtained from different charts can be variant."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Major enhancement*: added *the Add and Edit command*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Function*:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Add: Allows user to add a new task in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Edit: Allows user to edit an existing task in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This feature is extremely helpful to the user because it enables them to insert and edit task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Highlights*:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Implementing this basic functionality is not easy because it involves a lot of obvious and non-obvious validation,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "such as:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. obvious: empty input for required fields, wrong input format etc."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. non-obvious: the validation of time, task weight etc."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "* *Minor enhancement*: added *the Sort command*"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Function*:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Allows user to sort their tasks by:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Deadline / Task Start Date"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Task Name"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. Creation Date \u0026 Time"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "** *Justification*:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "This feature can help uer to prioritize their task by desired aspect."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Code contributed:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". https://nus-cs2103-ay1920s2.github.io/tp-dashboard/#search\u003dwyt-sonia[code contribution link]"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Team-based Tasks"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Morphed the original AB3 into a different product: Study Buddy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/27[Interactive feature implemented with Add Task function]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Renamed the product"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/15[Update project name and Travis link]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Edited and provided all pictures for User Guide:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/265[UG update and bug fix]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/262[Bug fixes and UG update]"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Improved the code quality for the whole project:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/276[Code quality]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/271[Code quality improvement]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/182[Code quality improves]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Troubleshoot and fixed bugs at the whole project scope:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/100[bug fix for overdue check]"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/124[DG update and bug fix]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/98[Bug fixed: Bug with task index]"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/59[Bug fix, Quit/Sort function implementing and UI improving]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/63[Bug fix for not handling invalid user input]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/279[more log, bug fix, typo fix]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/262[Bug fixes and UG update]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/240[module index bug fix]"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Helped Implemented the GUI for the whole project:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/74[GUI for list view updated and GUI bug fix]"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/71[GUI improvement]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/59[Bug fix, Quit/Sort function implementing and UI improving]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/89[UI improvement and better tracking of task status]"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/pull/257[UI update and UG update]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Review/Mentoring"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Reviewed another team\u0027s DG and provided useful feedback."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W17-3/main/issues/206[Review for DG]"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W17-3/main/issues/207[Review for DG_02]"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W17-3/main/issues/210[Review for DG 03]"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d User guide"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../UserGuide.adoc[tag\u003dintro]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../UserGuide.adoc[tag\u003dadd]"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../UserGuide.adoc[tag\u003dedit]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../UserGuide.adoc[tag\u003dsort]"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../UserGuide.adoc[tag\u003dStatistics]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003d\u003d\u003d Developer Guide"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dUIComponent]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dInteractiveCommandProcessFeature]"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dtaskSummary]"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "+"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ". Diagrams:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/UiClassDiagram.puml[UI class diagram]"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/AddTaskObjectDiagram.puml[Add task object diagram]"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/QuitFromInteractionActivityDiagram.puml[Quit from interaction activity diagram]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/TaskSummaryOnClickActivityDiagram.puml[Task summary on click activity diagram]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ".. https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/diagrams/TaskSummaryOnDataChangeSequenceDiagram.puml[Task summary on data changing sequence diagram]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 175
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/AppParameters.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.FileUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the parsed command-line parameters given to the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParameters {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path configPath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the application command-line parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AppParameters parse(Application.Parameters parameters) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d new AppParameters();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String configPathParameter \u003d namedParameters.get(\"config\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            configPathParameter \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return appParameters;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path getConfigPath() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setConfigPath(Path configPath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.configPath \u003d configPath;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath.hashCode();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof AppParameters)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters otherAppParameters \u003d (AppParameters) other;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "wyt-sonia": 13,
      "-": 48
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/Main.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * This is a workaround for the following error when MainApp is made the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * entry point of the application:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * The reason is that MainApp extends Application. In that case, the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * LauncherHelper will check for the javafx.graphics module to be present"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * to be the entry point of the application, we avoid this issue."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(MainApp.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/MainApp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Version;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.Storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StudyBuddyStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.Ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.UiManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final Version VERSION \u003d new Version(1, 4, 0, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StudyBuddy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(userPrefs.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storage \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(\"Starting StudyBuddy \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Study Buddy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s study buddy and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The data from the sample study buddy will be used instead if {@code storage}\u0027s study buddy is not found,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * or an empty study buddy will be used instead if errors occur when reading {@code storage}\u0027s study buddy."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Optional\u003cReadOnlyStudyBuddy\u003e studyBuddyOptional;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ReadOnlyStudyBuddy initialData;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddyOptional \u003d storage.readStudyBuddy();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (!studyBuddyOptional.isPresent()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample StudyBuddy\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d studyBuddyOptional.orElseGet(SampleDataUtil::getSampleStudyBuddy);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default config properties\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default user prefs\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 24,
      "souwmyaa": 15,
      "wyt-sonia": 18,
      "-": 125,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Config.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Config values used by the app"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Config {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Config values customizable through config file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Level logLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public Level getLogLevel() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return logLevel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLogLevel(Level logLevel) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logLevel \u003d logLevel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFilePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefsFilePath(Path userPrefsFilePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsFilePath \u003d userPrefsFilePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(logLevel, userPrefsFilePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Config)) { //this handles null as well."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Config o \u003d (Config) other;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(logLevel, o.logLevel)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Current log level : \" + logLevel);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 5,
      "-": 57
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/GuiSettings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 750;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 1000;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 5,
      "-": 65,
      "gx-huang": 2
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/LogsCenter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String LOG_FILE \u003d \"studybuddy.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes with a custom log level (specified in the {@code config} object)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logging levels for existing loggers will only be updated if the logger with the same name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * is requested again from the LogsCenter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void init(Config config) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 2,
      "-": 109
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_COMPLETE_TASK_SUCCESS \u003d \"Task Completed: \\n%1$s\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_CLEAR_SUCCESS \u003d \"Study Buddy has been cleared!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUE_SOON_TASK_SUCCESS \u003d \"Tasks\u0027 status and Due Soon list is updated\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_FILTER_TASK_SUCCESS \u003d \"Filtered tasks\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_VIEW_RENAMED_TASK_SUCCESS \u003d \"Filtered renamed tasks\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_ADD_SUCCESS \u003d \"New Duplicate Task added: %1$s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 7,
      "aegis-bot": 8,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Version.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a version with major, minor and patch number"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Version implements Comparable\u003cVersion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int major;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int minor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int patch;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean isEarlyAccess;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public Version(int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.major \u003d major;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minor \u003d minor;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.patch \u003d patch;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isEarlyAccess \u003d isEarlyAccess;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a version number string in the format V1.2.3."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param versionString version number string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a Version object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Version fromString(String versionString) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!versionMatcher.find()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Version(Integer.parseInt(versionMatcher.group(1)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(2)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(3)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            versionMatcher.group(4) \u003d\u003d null ? false : true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMajor() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return major;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMinor() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return minor;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getPatch() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return patch;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEarlyAccess() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEarlyAccess;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public int compareTo(Version other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (major !\u003d other.major) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return major - other.major;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if (minor !\u003d other.minor) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            return minor - other.minor;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if (patch !\u003d other.patch) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return patch - other.patch;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isEarlyAccess) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            hash \u003d \"1\" + hash;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Integer.parseInt(hash);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof Version)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        final Version other \u003d (Version) obj;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return compareTo(other) \u003d\u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 27,
      "-": 86
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/index/Index.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a zero-based or one-based index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * base the other component is using for its index. However, after receiving the {@code Index}, that component can"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * convert it back to an int if the index will not be passed to a different component again."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Index {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Index can only be created by calling {@link Index#fromZeroBased(int)} or"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Index#fromOneBased(int)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Index(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        if (zeroBasedIndex \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zeroBasedIndex \u003d zeroBasedIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a zero-based index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromZeroBased(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(zeroBasedIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a one-based index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromOneBased(int oneBasedIndex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(oneBasedIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getZeroBased() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getOneBased() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Index // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 9,
      "-": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/exceptions/DataConversionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error during conversion of data from one format to another"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DataConversionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public DataConversionException(Exception cause) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/exceptions/IllegalValueException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param cause   of the main exception"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/AppUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * A container for App specific utility functions"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtil {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(imagePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if {@code condition} is false."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void checkArgument(Boolean isValid) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isValid) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void checkArgument(Boolean isValid, String errorMessage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isValid) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(errorMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "wyt-sonia": 4,
      "-": 33
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/CollectionUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Utility methods related to Collections"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #requireAllNonNull(Collection)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Object... items) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Stream.of(items).forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Throws NullPointerException if {@code items} or any element of {@code items} is null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        items.forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code items} contain any elements that are non-null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isAnyNonNull(Object... items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 33
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/ConfigUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A class for accessing the Config File."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(configFilePath, Config.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void saveConfig(Config config, Path configFilePath) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.saveJsonFile(config, configFilePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/FileUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Writes and reads files"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String CHARSET \u003d \"UTF-8\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isFileExists(Path file) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(URI)}},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise returns false."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param path A string representing the file path. Cannot be null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPath(String path) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Paths.get(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidPathException ipe) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createIfMissing(Path file) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFileExists(file)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            createFile(file);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Files.exists(file)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        createParentDirsOfFile(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createFile(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates parent directories of file if it has a parent directory"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createParentDirsOfFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Path parentDir \u003d file.getParent();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (parentDir !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(parentDir);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Assumes file exists"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String readFromFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String(Files.readAllBytes(file), CHARSET);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes given string to a file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will create the file if it does not exist yet."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void writeToFile(Path file, String content) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.write(file, content.getBytes(CHARSET));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 81
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/JsonUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationContext;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.module.SimpleModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Converts a Java object instance to JSON and vice versa"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        .registerModule(new SimpleModule(\"SimpleModule\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .addSerializer(Level.class, new ToStringSerializer())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * If any values are missing from the file, default values will be used, as long as the file is a valid json file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath                   cannot be null."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Json file \" + filePath + \" not found\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        T jsonFile;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.of(jsonFile);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the Json object to the specified file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param jsonFile cannot be null"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath cannot be null"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was an error during writing to the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(jsonFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        serializeObjectToJsonFile(filePath, jsonFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given string representation of a JSON data to instance of a class"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The instance of T with the specified values in the JSON string"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.readValue(json, instanceClass);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given instance of a class into its JSON data string representation"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instance The T object to be converted into the JSON string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e      The generic type to create an instance of"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return JSON data representation of the given class instance, in string"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Contains methods that retrieve logging level from serialized string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        protected LevelDeserializer(Class\u003c?\u003e vc) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            super(vc);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        protected Level _deserialize(String value, DeserializationContext ctxt) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            return getLoggingLevel(value);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         * Gets the logging level that matches loggingLevelString"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns null if there are no matches"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        private Level getLoggingLevel(String loggingLevelString) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.parse(loggingLevelString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public Class\u003cLevel\u003e handledType() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.class;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "wyt-sonia": 4,
      "-": 139
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/StringUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Helper functions for handling strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code sentence} contains the {@code word}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ignores case, but a full word match is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003eexamples:\u003cpre\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *       \u003c/pre\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param sentence cannot be null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param word     cannot be null, cannot be empty, must be a single word"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static boolean isContainsWordIgnoreCase(String sentence, String word) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(sentence);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(word);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String preppedWord \u003d word.trim().toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String preppedSentence \u003d sentence.toLowerCase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(wordsInPreppedSentence)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .anyMatch(x -\u003e x.contains(preppedWord));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed message of the t, including the stack trace."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDetails(Throwable t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        t.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return t.getMessage() + \"\\n\" + sw.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code s} represents a non-zero unsigned integer"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will return false for any other non-null string input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code s} is null."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isNonZeroUnsignedInteger(String s) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 3,
      "-": 60
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/Logic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException   If an error occurs during parsing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the StudyBuddy."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see Model#getStudyBuddy()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ReadOnlyStudyBuddy getStudyBuddy();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks that are Due Soon"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of archived tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ObservableList\u003cModule\u003e getFilteredModuleList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 9,
      "wyt-sonia": 10,
      "-": 35,
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/LogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.StudyBuddyParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddyParser studyBuddyParser;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddyParser \u003d new StudyBuddyParser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult commandResult \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Command command \u003d studyBuddyParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (java.text.ParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ex.getLocalizedMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            storage.saveStudyBuddy(model.getStudyBuddy());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            storage.saveStudyBuddy(model.getStudyBuddy());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // keep track of task list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task.updateCurrentTaskList(new ArrayList\u003cTask\u003e(getStudyBuddy().getTaskList()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task.updateArchivedTaskList(new ArrayList\u003c\u003e(getStudyBuddy().getArchivedList()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getStudyBuddy();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return model.getFilteredTaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return model.getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return model.getFilteredModuleList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 18,
      "souwmyaa": 21,
      "aegis-bot": 2,
      "wyt-sonia": 17,
      "-": 52,
      "gx-huang": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 3,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Help information should be shown to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final boolean isShowHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The application should exit.1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isShowHelp \u003d isShowHelp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(feedbackToUser, isShowHelp, isExit);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 15,
      "-": 50
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/AddDuplicateTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Adds a duplicate task to the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class AddDuplicateTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an AddDuplicateTaskCommand to add the specified {@code Task}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public AddDuplicateTaskCommand(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (Task task : lastShownList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (task.equals(toAdd)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.addDuplicateTask(toAdd, task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_DUPLICATE_ADD_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof AddDuplicateTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u0026\u0026 toAdd.equals(((AddDuplicateTaskCommand) other).toAdd));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 55
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/AddTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the command of adding new task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"AddTaskCommand\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AddTaskCommand.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an AddTaskCommand to add the specified {@code Task}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to execute the add task command.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        model.addTask(toAdd);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of executing the add task command.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof AddTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "wyt-sonia": 43
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/CreateModCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A command to create modules. Adds into study buddy. module is constructed outside createModCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * and it will throw an exception outside createModCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create mod\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Mod added: %1$s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This module already exists in the study buddy\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Module mod;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModCommand(Module mod) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.mod \u003d mod;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (model.hasMod(mod)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.addMod(mod);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, mod));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof CreateModCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 mod.equals(((CreateModCommand) other).mod));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "aegis-bot": 40,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/ClearTasksCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Clears all data in study buddy."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.setStudyBuddy(new StudyBuddy());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_CLEAR_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 16,
      "-": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Deletes a task identified using it\u0027s displayed index from the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof DeleteTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 42
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/ViewRenamedTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Filters all the renamed tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ViewRenamedTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view renamed\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Predicate\u003cTask\u003e predicate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ViewRenamedTaskCommand(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_VIEW_RENAMED_TASK_SUCCESS);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof ViewRenamedTaskCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 41
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/ArchiveTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Archives an entry in the study buddy."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"archive\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Archives the selected entry\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_ARCHIVE_TASK_SUCCESS \u003d \"Archived Task: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        model.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            || (other instanceof ArchiveTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((ArchiveTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 1,
      "wyt-sonia": 1,
      "gx-huang": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/CompleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Completes a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"Complete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \": Complete the task based on the displayed list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task taskToComplete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.completeTask(taskToComplete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteDueSoonTask(taskToComplete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_COMPLETE_TASK_SUCCESS,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                taskToComplete.getTaskName()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 3,
      "aegis-bot": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/EditModCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Command for editing mod."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EditModCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String MOD_DOES_NOT_EXIST \u003d \"Module does not exist in Study Buddy!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module oldModule;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module newModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private InteractivePromptTerms term;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public EditModCommand(Module oldModule, Module newModule, InteractivePromptTerms term) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(oldModule);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(newModule);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.oldModule \u003d oldModule;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.newModule \u003d newModule;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.term \u003d term;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!model.hasMod(oldModule)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return new CommandResult(MOD_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                switch (term) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case CHANGE_MOD_NAME:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    model.changeModName(oldModule, newModule);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Module name Change successful!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case CHANGE_MOD_CODE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    model.changeModCode(oldModule, newModule);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Module code change successful!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case DELETE_MOD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    model.deleteMod(oldModule);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Module deleted!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Did nothing! from EditModCommand.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new CommandException(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 51,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/EditTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Edits the details of an existing task in the study buddy."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String EDIT_TASK_SUCCESS \u003d \"Task has been edited successfully\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"EditTaskCommand\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(EditTaskCommand.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskField taskField;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String newTaskName \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String newTaskDescription \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double newTaskWeight \u003d 0.0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double newTaskTimeCost \u003d 0.0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TaskType newTaskType \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private LocalDateTime[] newDateTimes \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module newModule \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an edit task command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param targetIndex index of target task to be edited"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskField   the task field to be edited"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskCommand(Index targetIndex, TaskField taskField) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(targetIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(taskField);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskField \u003d taskField;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewTaskName(String newTaskName) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newTaskName \u003d newTaskName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void provideNewTaskWeight(double newTaskWeight) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.newTaskWeight \u003d newTaskWeight;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void provideNewTaskDescription(String newTaskDescription) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.newTaskDescription \u003d newTaskDescription;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void provideNewTaskTimeCost(double newTaskTimeCost) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.newTaskTimeCost \u003d newTaskTimeCost;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewTaskType(TaskType newTaskType) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newTaskType \u003d newTaskType;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void provideNewDateTime(LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newDateTimes \u003d newDateTimes;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void provideNewModule(Module newModule) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.newModule \u003d newModule;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws DuplicateTaskException, CommandException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to execute edit task command.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task taskToEdit \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskName(taskToEdit, newTaskName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            assert taskToEdit.getTaskName().equals(newTaskName)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                : \"The task name is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            requireNonNull(newTaskDescription);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            model.setTaskDescription(taskToEdit, newTaskDescription);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            assert taskToEdit.getTaskDescription().equals(newTaskDescription)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                : \"The task description is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            requireNonNull(newTaskWeight);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            model.setTaskWeight(taskToEdit, newTaskWeight);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            assert taskToEdit.getWeight() \u003d\u003d newTaskWeight"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                : \"The task weight is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            requireNonNull(newTaskTimeCost);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            model.setTaskTimeCost(taskToEdit, newTaskTimeCost);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            assert taskToEdit.getEstimatedTimeCost() \u003d\u003d newTaskTimeCost"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                : \"The task estimated time needed is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskType(taskToEdit, newTaskType);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            assert taskToEdit.getTaskType().equals(newTaskType)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                : \"The task type is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            requireNonNull(newDateTimes);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            model.setTaskDateTime(taskToEdit, newDateTimes);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            assert taskToEdit.getDateTimes().equals(newDateTimes)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                : \"The task date time info is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            requireNonNull(newModule);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                model.setTaskMod(taskToEdit, newModule);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                assert taskToEdit.getModule().equals(newModule)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    : \"The task module is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.info(LOG_TAG + \": module code invalid/does not exist!!!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new CommandException(\"module code invalid/does not exist!!!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateDueSoon(taskToEdit, model);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of executing edit task command.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(EDIT_TASK_SUCCESS);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates Due Soon list as well."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param model"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void updateDueSoon(Task taskToEdit, Model model) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteDueSoonTask(taskToEdit);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.addDueSoonTask(lastShownList.get(targetIndex.getZeroBased()));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 75,
      "souwmyaa": 13,
      "aegis-bot": 11,
      "wyt-sonia": 63
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/UnarchiveTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Archives an entry in the study buddy."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UnarchiveTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"unarchive\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": retrieves the selected entry from archived\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_ARCHIVE_TASK_SUCCESS \u003d \"retrieved Task: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UnarchiveTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownMainList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (lastShownMainList.contains(taskToArchive)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (Task task : lastShownList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (task.equals(taskToArchive)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.addDuplicateTask(taskToArchive, task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.unarchiveDuplicateTask(taskToArchive);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            model.unarchiveTask(taskToArchive);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                || (other instanceof UnarchiveTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u0026\u0026 targetIndex.equals(((UnarchiveTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 11,
      "gx-huang": 53
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/exceptions/CommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/sort/SortTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommand that can handle the sorting of tasks according to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * user\u0027s choice."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Sort Task: %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskListPanel\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SortTaskCommand.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \": Sort the tasks by keyword chosen by user. \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Parameters: Sort Keyword (1 (deadline / task start date), 2 (task name) and 3 creation datetime)\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String sortKeyword;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommand(String sortKeyword) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.sortKeyword \u003d sortKeyword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of executing the sort command.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        model.sortTasks(sortKeyword);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of executing the sort command.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS, sortKeyword));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof SortTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 sortKeyword.equals(((SortTaskCommand) other).sortKeyword)); // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 45
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/CalendarViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.MainWindow;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * brings up calendar immediately with task from input date shown."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Might not need to have this class since model is not changed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String CALENDAR_VIEW_SUCCESS \u003d \"Now showing tasks for date:  %1$s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CalendarViewCommand.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate selectedDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarViewCommand(LocalDate selectedDate) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.selectedDate \u003d selectedDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        logger.info(\"Selected date: \" + selectedDate.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public LocalDate getSelectedDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return selectedDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        MainWindow.getInstance().handleShowCalendar();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        MainWindow.getInstance().getCalendarPanel().generateCalendar(selectedDate.getYear(), selectedDate.getMonth());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        MainWindow.getInstance().getCalendarPanel().viewTaskByDate(selectedDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(CALENDAR_VIEW_SUCCESS, selectedDate.toString()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                || (other instanceof CalendarViewCommand"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u0026\u0026 ((CalendarViewCommand) other).getSelectedDate().equals(this.getSelectedDate()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 56
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/FilterTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Filters the list by status or by tags."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //logging"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTaskCommand.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Predicate\u003cTask\u003e predicate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an FilterTaskCommand to filter the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public FilterTaskCommand(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"Attempting to filter tasks\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_FILTER_TASK_SUCCESS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof FilterTaskCommand); // state check"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 49
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/FindTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Finds and lists all tasks in the tasks list whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Keyword matching is case-insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof FindTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 37,
      "souwmyaa": 2
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/ListTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.model.Model.PREDICATE_SHOW_ALL_TASKS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represent a ListTaskCommand that can List all tasks in the task list to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 25,
      "souwmyaa": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/RefreshCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Refreshes the Due Soon list as well as status tags."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann, Wang Yuting"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class RefreshCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //logging"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(RefreshCommand.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"Attempting to refresh due soon list and tags\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //resetting the due soon list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.clearDueSoonList(new StudyBuddy());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (Task task : lastShownList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (task.isDueSoon()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.forceAddDueSoonTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.sortDueSoonTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //refreshing the status tags"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        final int size \u003d lastShownList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task task \u003d lastShownList.get(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            refreshStatus(task, model);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.sortTasks(\"deadline / task start date\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_DUE_SOON_TASK_SUCCESS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This function refreshes the status tags."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task a task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param model Model"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void refreshStatus(Task task, Model model) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteTaskFromMainList(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        task.freshStatus();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.addTaskToMainList(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof RefreshCommand); // state check"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 67,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/ExitTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.EXIT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ExitTaskCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a ExitTaskInteractivePrompt, which allows user to quit from each interactive stage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from exit command.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String CONFIRM_MSG \u003d \"Are you sure you want to quit?\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"Please press enter yes if you would like to exit the application, and no if you would like to go back.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_NO_EXIT_MSG \u003d \"Thank you for staying!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Exit successfully!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d EXIT_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (\"quit\".equals(userInput)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d CONFIRM_MSG;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ExitTaskCommandException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setQuit(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else if (userInput.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_NO_EXIT_MSG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d (new ExitTaskCommandException(\"invalidInputError\")).getErrorMessage()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\\n\" + CONFIRM_MSG;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 69,
      "wyt-sonia": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/InteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an InteractivePrompt."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public abstract class InteractivePrompt {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isQuit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isEndOfCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected InteractivePromptType interactivePromptType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected String reply;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    protected InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractivePrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isQuit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isEndOfCommand \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public abstract String interact(String userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Ends the interaction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param reply message to be displayed to the user upon end of interaction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setEndOfCommand(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks if the {@code userInput} is quit."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the userInput is quit, false otherwise"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isQuit(String userInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"quit\".equalsIgnoreCase(userInput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isQuit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isQuit;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the quit commands."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput   the input given by the user. This should be checked to be either quit or back."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param quitMessage the message that is displayed upon quitting"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return the reply to user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String handleQuit(String userInput, String quitMessage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(quitMessage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setQuit(boolean isQuitCommand) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isQuit \u003d isQuitCommand;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setLogic(Logic logic) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEndOfCommand() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEndOfCommand;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEndOfCommand(boolean isEnd) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isEndOfCommand \u003d isEnd;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractivePromptType getInteractivePromptType() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return interactivePromptType;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "aegis-bot": 5,
      "wyt-sonia": 70
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/InteractivePromptTerms.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Terms used in Interactive Prompt to indicate the stage in the sequence of interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public enum InteractivePromptTerms {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    INIT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    OPTION_TYPE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_NAME,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TASK_INDEX,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_TYPE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DATETIME,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DESCRIPTION,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_MODULE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_WEIGHT,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_ESTIMATED_TIME_COST,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_NAME,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_CODE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SORT_KEYWORD,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    READY_TO_EXECUTE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ADD_DUPLICATE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for find"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    FIND_KEYWORD,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for edit"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NUMBER,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_FIELD,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    NEW_VALUE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CHOICE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    STATUS_TYPE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TASKS_TYPE,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //for edit mod"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    PICK,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CHANGE_MOD_NAME,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CHANGE_MOD_CODE,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    DELETE_MOD,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for setting goals"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    GOAL,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    //for calendar view"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    DATE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 6,
      "aegis-bot": 8,
      "wyt-sonia": 14,
      "gx-huang": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/InteractivePromptType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the InteractivePromptType."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum InteractivePromptType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ADD_TASK,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    EDIT_TASK,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    EXIT_TASK,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    DELETE_TASK,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    FILTER_TASK,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ARCHIVE_TASK,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    UNARCHIVE_TASK,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    VIEW_DUPLICATE_TASK,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    COMPLETE_TASK,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DUE_SOON_TASK,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CREATE_MODULE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    SORT_TASK,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    INVALID_MSG,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    FIND_TASK,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    LIST_TASK,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CLEAR_TASK,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    SET_GOAL,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    EDIT_MODULE,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    CALENDAR_VIEW;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 5,
      "aegis-bot": 3,
      "wyt-sonia": 11,
      "gx-huang": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/InvalidInputInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.INVALID_MSG;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a InvalidInputInteractivePrompt which is designed to handle invalid input from user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Help message will be provided when invalid message caught."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InvalidInputInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    static final String HELP_MSG \u003d \"Here is the list of available commands:\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"1. add\\n2. archive\\n3. bye\\n4. clear\\n5. create mods\\n6. delete\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"7. view renamed\\n8. done\\n9. edit\\n10. filter\\n11. find\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"12. help\\n13. list\\n14. sort\\n15. refresh\\n16. calendar\\n17. goal\\n\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InvalidInputInteractivePrompt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d INVALID_MSG;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(HELP_MSG);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 2,
      "wyt-sonia": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/add/AddTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.ADD_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.AddDuplicateTaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.AddTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TaskParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddDuplicateTaskCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An interactive prompt for adding a new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_MSG \u003d \"Please choose a module for this task or press enter to skip. \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"\\nIndex number and module code are both acceptable.\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from add task command.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task added successfully!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_DUPLICATE_COMMAND_MSG \u003d \"Task added successfully! \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"We have changed the name slightly for your convenience.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_DUPLICATE_MSG \u003d \"Task will not be added! Key in your next command :)\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_NAME_MSG \u003d \"Please enter the task name.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_TYPE_MSG \u003d \"Please choose the task type:\\n\" + TaskType.getTypeString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_DATE_TIME_MSG \u003d \"Please enter the deadline/duration with format: \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_DESCRIPTION_MSG \u003d \"Please enter task description \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_WEIGHT_MSG \u003d \"Please enter the weight of the task \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_ESTIMATED_TIME_COST_MSG \u003d \"Please enter the estimated \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"number of hours cost or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String TASK_INFO_HEADER \u003d \"The task is ready to be added, press enter \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"again to add the task:\\n\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK INFO \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String CONFIRM_MSG \u003d \"This is a duplicate task. Are you sure you would like to proceed?\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"Please enter yes to continue or no to go back.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"AddTaskInteractivePrompt\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(AddTaskInteractivePrompt.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String moduleListString \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of an add task action.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d ADD_TASK;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.task \u003d new Task();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.modules \u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.info(LOG_TAG + \": User quite from add task action.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            initTermHandler();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskModuleTermHandler(userInput);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskNameTerm(userInput);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskTypeTerm(userInput);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskDateTimeTerm(userInput);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskDescriptionTerm(userInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskWeightTerm(userInput);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskEstimatedTimeCostTerm(userInput);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskReadyToExecuteTerm();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case ADD_DUPLICATE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            handleTaskAddDuplicateTerm(userInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert !this.reply.isBlank()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The reply of add task\u0027s \" + currentTerm.name() + \" is blank, please check.\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the INIT term of add task interaction."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets default value for the new task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the module request message for user."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void initTermHandler() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start tof init term.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Set default value for the new task."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        task.setStatus(\"Pending\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        task.setTaskDescription(\"No Description\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        task.setWeight(0.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        task.setEstimatedTimeCost(0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Init the module request message for user."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d REQUIRED_MODULE_MSG;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleListString \u003d \"The Modules available are: \\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.modules \u003d logic.getStudyBuddy().getModuleList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        constructModuleList(modules);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply +\u003d moduleListString;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTerm \u003d InteractivePromptTerms.TASK_MODULE;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of init term.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_MODULE term of add task interaction."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the module from {@code userInput}."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the task name request message for user."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void taskModuleTermHandler(String userInput) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task module term.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Module module;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                module \u003d new EmptyModule();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                module \u003d TaskParser.parseModule(userInput, modules);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setModule(module);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.reply \u003d checkAndModifyReply(module) + \"\\n\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_NAME;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getErrorMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_MSG + \"\\n\\n\" + moduleListString;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task module term.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_NAME term of add task interaction."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the task name from {@code userInput}."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the task type request message for user."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskNameTerm(String userInput) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task name term.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            userInput \u003d TaskParser.parseName(userInput);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setTaskName(userInput);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"The name of task is set to: \" + userInput + \".\\n\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_TYPE;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (InteractiveCommandException ex) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getErrorMessage());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d ex.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task name term.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_TYPE term of add task interaction."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the task type from {@code userInput}."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the task date time request message for user."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskTypeTerm(String userInput) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task type term.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskType taskType \u003d TaskParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setTaskType(taskType);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"The type of task has been set to: \" + taskType.toString() + \".\\n\\n\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_DATE_TIME_MSG + getDateTimeFormat(taskType);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task type term.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_DATETIME term of add task interaction."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the task date time from {@code userInput}."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the task description request message for user."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskDateTimeTerm(String userInput) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task date time term.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime[] dateTimes \u003d TaskParser.parseDateTime(userInput, task.getTaskType());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            task.setDateTimes(dateTimes);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                userInput \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                userInput \u003d TimeParser.getDateTimeString(dateTimes[0])"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"The date and time is set to: \" + userInput + \"\\n\\n\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_DESCRIPTION;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d ex.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_DATE_TIME_MSG + getDateTimeFormat(task.getTaskType());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task date time term.\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_DESCRIPTION term of add task interaction."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the task description from {@code userInput}."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the task weight request message for user."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskDescriptionTerm(String userInput) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task description time term.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setTaskDescription(TaskParser.parseDescription(userInput));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The task description has been set as \" + userInput + \"\\n\\n\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply +\u003d REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_WEIGHT;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task description term.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_WEIGHT term of interaction."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the task weight from {@code userInput}."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the task estimated time cost request message for user."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskWeightTerm(String userInput) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task weight term.\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                double weight \u003d TaskParser.parseWeight(userInput);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                // Calculates the sum of the weights of unarchived tasks under targetModule."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                double moduleWeightSumForUnarchived \u003d logic.getStudyBuddy().getTaskList()"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filter(t -\u003e (t.getModule().equals(task.getModule())))"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                // Calculates the sum of the weights of archived tasks under targetModule."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                double moduleWeightSumForArchivedTasks \u003d logic.getStudyBuddy().getArchivedList()"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filter(t -\u003e t.getModule().equals(task.getModule()))"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (moduleWeightSumForUnarchived + moduleWeightSumForArchivedTasks + weight \u003e 100) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"moduleWeightOverloadError\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setWeight(weight);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The weight of the task has been set as \" + userInput + \"\\n\\n\";"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply +\u003d REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_ESTIMATED_TIME_COST;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task weight term.\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the TASK_ESTIMATED_TIME_COST term of add task interaction."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the estimated time cost of the new task from {@code userInput}."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Prepares the insertion confirmation request message for user."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskEstimatedTimeCostTerm(String userInput) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of task estimated time cost term.\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.setEstimatedTimeCost(TaskParser.parseTimeCost(userInput));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d \"The estimated number of hours the task might take has been set as \""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + userInput + \"\\n\\n\";"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply +\u003d TASK_INFO_HEADER + task.toString();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of task estimated time cost term.\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the READY_TO_EXECUTE term of add task interaction."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks the duplication of the new task and forwards the interaction accordingly."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with any exception caused."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskReadyToExecuteTerm() {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of ready to execute term.\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        task.setCreationDateTime(LocalDateTime.now());"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (logic.getStudyBuddy().getTaskList().contains(task)) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d CONFIRM_MSG;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.ADD_DUPLICATE;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                AddTaskCommand addTaskCommand \u003d new AddTaskCommand(task);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(addTaskCommand);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.info(LOG_TAG + \": User added a unique new task.\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d new InteractiveCommandException(\"unKnownException\").getErrorMessage();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of ready to execute term.\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the ADD_DUPLICATE term of add task interaction."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses user option for adding duplicate task and response accordingly."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays error message with any exception caused."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleTaskAddDuplicateTerm(String userInput) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of  add duplicated task term.\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (\"yes\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                AddDuplicateTaskCommand addDuplicateTaskCommand \u003d new AddDuplicateTaskCommand(task);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(addDuplicateTaskCommand);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.info(LOG_TAG + \": User added a duplicated task.\");"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_DUPLICATE_COMMAND_MSG);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else if (\"no\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_DUPLICATE_MSG);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new AddDuplicateTaskCommandException(\"invalidInputError\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d new InteractiveCommandException(\"unKnownException\").getErrorMessage();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\" + CONFIRM_MSG;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of add duplicated task term.\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of add task action.\");"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Hides empty module from the moduleList."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void constructModuleList(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.forEach(m -\u003e {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (!m.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                counter.getAndAdd(1);"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                moduleListString +\u003d counter + \".\" + m.getModuleCode() + \" \" + m.getModuleName() + \"\\n\";"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Modifies reply if module is empty."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String checkAndModifyReply(Module module) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return \"The module has been set as: \" + module.getModuleCode() + \" \""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                + module.getModuleName();"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return \"This task is not assigned to any modules.\";"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets the date and time format string base on the type of the task."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String getDateTimeFormat(TaskType taskType) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String format \u003d \"\";"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            format \u003d \"HH:mm dd/MM/yyyy e.g. 12:00 01/05/2020\";"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            format \u003d \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy e.g. 12:00 01/05/2020-12:00 10/05/2020\";"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 23,
      "aegis-bot": 29,
      "wyt-sonia": 459
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/add/CreateModuleInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.CreateModCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * An interactive prompt for creating modules."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModuleInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MODULE_CODE_FORMAT \u003d \"Please key in your module code to include a 2-3 letter prefix,\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \" a 4-digit number,\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"then a postfix (Optional).\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"E.g. BA1001\\n       CS2030J     \\n       LSM2040C\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from create mod command.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String SUCCESS_COMMAND_MSG \u003d \"Module created!\\n\\nKey in your next command :)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_NAME_MSG \u003d \"Please key in the name of \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"the module that you want to create\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_CODE_MSG \u003d \"Please key in the module code of the module \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"that you want to create\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModuleInteractivePrompt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CREATE_MODULE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d new Module();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.MODULE_NAME;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_NAME:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    if (!logic.getFilteredModuleList()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .filtered(x -\u003e x.getModuleName().equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        throw new ModuleException(\"duplicateModuleNameError\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        this.reply \u003d \"The name of new module is set to: \" + userInput + \".\\n\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + REQUIRED_MODULE_CODE_MSG;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        module.setModuleName(userInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        currentTerm \u003d InteractivePromptTerms.MODULE_CODE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_CODE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    if (!logic.getFilteredModuleList().filtered(x -\u003e x.toString()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        throw new ModuleException(\"duplicateModuleCodeError\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        module.setModuleCode(userInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        this.reply \u003d \"The module code of new module is set to: \" + module.toString() + \"\\n\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + \"Please press enter to confirm your changes\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_CODE_MSG;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CreateModCommand createModCommand \u003d new CreateModCommand(module);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(createModCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d SUCCESS_COMMAND_MSG;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                endInteract(reply);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (CommandException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getLocalizedMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 1,
      "aegis-bot": 65,
      "wyt-sonia": 40
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/delete/ClearTasksInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ClearTasksCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ClearTasksCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a ClearTasksInteractivePrompt which interact with user to clear all tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from clear command.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Tasks cleared successfully!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String ENTER_NO_MSG \u003d \"Tasks will not be cleared! Key in your next command :)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String CONFIRM_MSG \u003d \"Are you sure you want to clear all your tasks?\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"Please enter yes to continue and no to go back.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ClearTasksInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CLEAR_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d CONFIRM_MSG;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    ClearTasksCommand clearTaskCommand \u003d new ClearTasksCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    logic.executeCommand(clearTaskCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else if (userInput.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(ENTER_NO_MSG);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d (new ClearTasksCommandException(\"invalidInputError\")).getErrorMessage()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\\n\" + CONFIRM_MSG;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 62,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/delete/DeleteTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.DELETE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.DeleteTaskCommandParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DeleteTaskInteractivePrompt, which interacts with user to delete task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from delete task command.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task deleted successfully!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number of task you wish to delete.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DELETE_TASK;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                index \u003d DeleteTaskCommandParser.parseIndex(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName() + \" will be deleted.\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DeleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(deleteTaskCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 68,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/edit/ArchiveTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.ARCHIVE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ArchiveTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an ArchiveTaskInteractivePrompt, which interacts with user to archive a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from archive command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task archived successfully!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number of task you wish to archive.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d ARCHIVE_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ArchiveTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ArchiveTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName() + \" will be archived. \\n\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    + \"Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new ArchiveTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ArchiveTaskCommandException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                ArchiveTaskCommand archiveTaskCommand \u003d new ArchiveTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(archiveTaskCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 32,
      "gx-huang": 47
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/edit/CompleteTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.COMPLETE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.CompleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.CompleteTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A interactive prompt for completing task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from complete task command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task marked as completed successfully!\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            + \"If you want to archive this completed task, key in \u0027archive\u0027.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"of task you wish to mark as Finished.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d COMPLETE_TASK;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new CompleteTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new CompleteTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (logic.getFilteredTaskList().get(index - 1).getTaskStatus().equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new CompleteTaskCommandException(\"taskCompletedError\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \" will be marked as Finished. \\n\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please click enter again to make the desired action.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new CompleteTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CompleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(completeTaskCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "aegis-bot": 47,
      "wyt-sonia": 34
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/edit/EditModuleInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.EDIT_MODULE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.EditModCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Edit module."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class EditModuleInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final int CHANGE_NAME \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final int CHANGE_CODE \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final int DELETE_MODULE \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String END_OF_COMMAND_MSG \u003d \"Module edited successfully!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from editing module.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_MSG \u003d \"Please key in a module code from the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_NAME_MSG \u003d \"Please key in the new name of your module\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_CODE_MSG \u003d \"Please key in the new code of your module\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_CONFIRMATION \u003d \"Are you sure you want to delete this module?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"All tasks in this module will be \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"relocated to \u0027No Module Allocated\u0027 tab. \\n\\nPress enter to proceed\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String CHOICES \u003d \"What would you like to do? Key in the index of the action\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"that you wish to perform.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"1. Change Name\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"2. Change Module code\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"3. Delete Module\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Module oldModule;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Module newModule;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public EditModuleInteractivePrompt() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d EDIT_MODULE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_MODULE_MSG;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.CHOICE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case CHOICE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (ModuleCode.isModuleCode(userInput)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    oldModule \u003d new Module(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    newModule \u003d new Module(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    boolean hasModule \u003d logic.getFilteredModuleList().contains(oldModule);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    if (!hasModule || oldModule.equals(new EmptyModule())) { //Ensure emptyMod is never touched"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        throw new ModuleException(\"noSuchModuleError\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        oldModule \u003d logic.getFilteredModuleList().get(logic.getFilteredModuleList().indexOf(oldModule));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        newModule.setModuleName(oldModule.getModuleName());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        reply \u003d \"Module retrieved: \" + newModule.getModuleName()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + \" \" + newModule.getModuleCode() + \"\\n\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + CHOICES;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        currentTerm \u003d InteractivePromptTerms.PICK;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_MSG;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PICK:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (index) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case CHANGE_NAME:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.CHANGE_MOD_NAME;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case CHANGE_CODE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.CHANGE_MOD_CODE;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d REQUIRED_MODULE_CODE_MSG;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case DELETE_MODULE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.DELETE_MOD;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d REQUIRED_CONFIRMATION;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d CHOICES;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d CHOICES;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case CHANGE_MOD_NAME:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (userInput.equalsIgnoreCase(oldModule.getModuleName())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"noChangeFromOriginalModuleNameError\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (!logic.getFilteredModuleList()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filtered(x -\u003e x.getModuleName().equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"duplicateModuleNameError\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    newModule.setModuleName(userInput);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    logic.executeCommand(new EditModCommand(oldModule, newModule,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        InteractivePromptTerms.CHANGE_MOD_NAME));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d \"Your module \" + oldModule.getModuleCode().toString() + \" is now renamed \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + newModule.getModuleName();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG + \"\\n\\n\" + reply);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case CHANGE_MOD_CODE:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (userInput.equalsIgnoreCase(oldModule.getModuleCode().toString())) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"noChangeFromOriginalModuleCodeError\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (!logic.getFilteredModuleList().filtered(x -\u003e x.toString()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"duplicateModuleCodeError\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    newModule.setModuleCode(userInput);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    logic.executeCommand(new EditModCommand(oldModule, newModule,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        InteractivePromptTerms.CHANGE_MOD_CODE));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d \"Your module \" + oldModule.getModuleCode().toString() + \" is now coded \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + newModule.getModuleCode().toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG + \"\\n\\n\" + reply);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DELETE_MOD:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(new EditModCommand(oldModule, newModule, InteractivePromptTerms.DELETE_MOD));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"Module deleted successfully!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(reply);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 166
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/edit/EditTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.EDIT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.model.task.Task.getCurrentTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.EditTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TaskParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Interactive prompt for editing tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from the edit task command\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskParser\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(EditTaskInteractivePrompt.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_FIELD_MSG \u003d \"Please choose the field that you wish to edit for task: \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_MODULE_MSG \u003d \"Please choose a Module for this task or press enter to skip. \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"\\nIndex number and module code are both acceptable.\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_NAME_MSG \u003d \"Please enter the task name.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_TYPE_MSG \u003d \"Please choose the task type:\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_DATE_TIME_MSG \u003d \"Please enter the deadline/duration with format: \" + \"\\n\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"Assignment: HH:mm dd/MM/yyyy  e.g. 12:00 01/05/2020\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"\\nRest: HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy  e.g. 12:00 01/05/2020-14:00 01/05/2020\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_DESCRIPTION_MSG \u003d \"Please enter task \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"description or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_WEIGHT_MSG \u003d \"Please enter the weight of the task \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TASK_ESTIMATED_TIME_COST_MSG \u003d \"Please enter the \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"estimated number of hours cost or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String SUCCESS_EDIT_MSG \u003d \"Task edited successfully\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TaskField taskField;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String moduleListString \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public EditTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.modules \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d EDIT_TASK;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of an edit task action.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isQuit(userInput)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleQuit(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleEdit(userInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the sequence of commands for task editing."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleEdit(String userInput) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d \"Please enter the index of the task that you wish to edit.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.modules \u003d logic.getFilteredModuleList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_NUMBER;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NUMBER:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.taskNumber \u003d parseTaskNumber(userInput);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_FIELD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.taskField \u003d parseTaskFieldNumber(userInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case NEW_VALUE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleNewValue(userInput);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates and executes an edit command, with the new values provided by {@code userInput}."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleNewValue(String userInput) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Index taskIndex \u003d Index.fromZeroBased(taskNumber - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task taskToEdit \u003d logic.getStudyBuddy().getTaskList().get(taskNumber - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(taskIndex, taskField);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task clone \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            clone \u003d (Task) taskToEdit.clone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (CloneNotSupportedException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskNameSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskTypeSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskDateTimeSuccess(editTaskCommand, clone, userInput, taskIndex);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskModuleSuccess(editTaskCommand, clone, userInput, taskIndex);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskEstimatedTimeCostSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskWeightSuccess(editTaskCommand, clone, userInput, taskIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskDescriptionSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isParseSuccess) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(editTaskCommand);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.info(LOG_TAG + \": End of an edit task action.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.reply \u003d SUCCESS_EDIT_MSG;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(this.reply);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (java.text.ParseException | CommandException | DuplicateTaskException ex) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert !this.reply.isBlank()"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The reply of edit task\u0027s \" + currentTerm.name() + \" is blank, please check.\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task name."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new task name."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskNameSuccess(EditTaskCommand editTaskCommand, Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String newName \u003d TaskParser.parseName(userInput);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskToEdit.setTaskName(newName);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            editTaskCommand.provideNewTaskName(newName);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getErrorMessage());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getErrorMessage());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task type."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new task type."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskTypeSuccess(EditTaskCommand editTaskCommand, Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskType newTaskType \u003d TaskParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (taskToEdit.getTaskType().equals(TaskType.Assignment) \u0026\u0026 !newTaskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"changeAssignmentToOtherTaskTypeError\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!taskToEdit.getTaskType().equals(TaskType.Assignment) \u0026\u0026 newTaskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"changeOtherTaskTypeToAssignmentError\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskToEdit.setTaskType(newTaskType);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            editTaskCommand.provideNewTaskType(newTaskType);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"The type of task is successfully changed to: \" + newTaskType + \".\\n\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG + \"\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG + \"\\n\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task date time."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new task date time."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskDateTimeSuccess(EditTaskCommand editTaskCommand, Task taskToEdit, String userInput,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                                   Index taskIndex) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // Parses date time"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskType taskType \u003d logic.getFilteredTaskList().get(taskIndex.getZeroBased()).getTaskType();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime[] newDateTimes \u003d TaskParser.parseDateTime(userInput, taskType);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskToEdit.setDateTimes(newDateTimes);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            editTaskCommand.provideNewDateTime(newDateTimes);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_DATE_TIME_MSG;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_DATE_TIME_MSG;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task module."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new module."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskModuleSuccess(EditTaskCommand editTaskCommand,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                                 Task taskToEdit, String userInput, Index taskIndex) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Module newModule;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                newModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                newModule \u003d TaskParser.parseModule(userInput, modules);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // checks the weight of the target module."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            double taskWeight \u003d logic.getFilteredTaskList().get(taskIndex.getZeroBased()).getWeight();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            boolean isWeightSizeValid \u003d isWeightSizeValid(taskWeight, newModule,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.getStudyBuddy().getTaskList().get(taskNumber - 1));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!isWeightSizeValid) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"moduleWeightOverloadError\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskToEdit.setModule(newModule);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            editTaskCommand.provideNewModule(newModule);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_MSG + \"\\n\" + moduleListString;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + REQUIRED_MODULE_MSG + \"\\n\" + moduleListString;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task estimated time cost."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new estimated time cost."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskEstimatedTimeCostSuccess(EditTaskCommand editTaskCommand,"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                                            Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                double newTimeCost \u003d TaskParser.parseTimeCost(userInput);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                editTaskCommand.provideNewTaskTimeCost(newTimeCost);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                editTaskCommand.provideNewTaskTimeCost(0);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d new AddOrEditTaskCommandException(\"wrongEstimatedTimeFormatError\").getErrorMessage()"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task weight."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new weight."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskWeightSuccess(EditTaskCommand editTaskCommand, Task taskToEdit,"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                                 String userInput, Index taskIndex) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            double newWeight \u003d 0;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            boolean isWeightSizeValid \u003d true;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // Checks if the updating of the weight will lead to weight overflow."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                newWeight \u003d TaskParser.parseWeight(userInput);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (newWeight \u003e 0) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    isWeightSizeValid \u003d isWeightSizeValid(newWeight,"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        logic.getFilteredTaskList().get(taskIndex.getZeroBased()).getModule(),"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        logic.getStudyBuddy().getTaskList().get(taskNumber - 1));"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (!isWeightSizeValid) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"moduleWeightOverloadError\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                taskToEdit.setWeight(newWeight);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            editTaskCommand.provideNewTaskWeight(newWeight);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Handles the new task description."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the {@code userInput} to the new description."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isHandleNewTaskDescriptionSuccess(EditTaskCommand editTaskCommand,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                                      Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String newDescription \u003d TaskParser.parseDescription(userInput);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskToEdit.setTaskDescription(newDescription);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            editTaskCommand.provideNewTaskDescription(newDescription);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks the total weight of tasks under {@code targetModule}."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param toBeAddWeight"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param targetModule"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if the total weight is not larger than 100."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isWeightSizeValid(double toBeAddWeight, Module targetModule, Task task) {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isValid \u003d true;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Calculates the sum of the weights of unarchived tasks under targetModule."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        double moduleWeightSumForUnarchived \u003d logic.getStudyBuddy().getTaskList()"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .filter(t -\u003e (t.getModule().equals(targetModule) \u0026\u0026 !t.equals(task)))"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Calculates the sum of the weights of archived tasks under targetModule."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        double moduleWeightSumForArchived \u003d logic.getStudyBuddy().getArchivedList()"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .filter(t -\u003e t.getModule().equals(targetModule))"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (moduleWeightSumForUnarchived + moduleWeightSumForArchived + toBeAddWeight \u003e 100) {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isValid \u003d false;"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses {@code userInput} to task number."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user input for task number"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return an int of task number"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int parseTaskNumber(String userInput) {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskNum \u003d -1;"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskNum \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (taskNum \u003e logic.getFilteredTaskList().size() || taskNum \u003c 1) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String taskName \u003d logic.getFilteredTaskList().get(taskNum - 1).getTaskName();"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_TASK_FIELD_MSG + taskName + \".\\n\\n\""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + TaskField.getFieldString();"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_FIELD;"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Checks if the task will be duplicate if edited."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param clone"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void checkDuplicate(Task clone, Task taskToEdit) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (getCurrentTasks().contains(clone)) {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (taskToEdit.getDuplicate() !\u003d 0) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            taskToEdit.zeroDuplicate();"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the task field."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput userInput for task number"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a TaskField"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskField parseTaskFieldNumber(String userInput) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String taskName \u003d logic.getFilteredTaskList().get(taskNumber - 1).getTaskName();"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        TaskField taskField \u003d null;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            int taskFieldNumber \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (taskFieldNumber \u003e 7 || taskFieldNumber \u003c 1) {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskField \u003d TaskField.getTaskFieldFromNumber(taskFieldNumber);"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            assert (taskField !\u003d null);"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d getTaskFieldMessage(taskField);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.NEW_VALUE;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage();"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_FIELD_MSG + taskName + \".\\n\\n\""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + TaskField.getFieldString();"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskField;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets task field message according to {@code taskField}."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskField"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String getTaskFieldMessage(TaskField taskField) {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"You are now editing the \" + taskField.getLabel() + \" field\\n\";"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            moduleListString \u003d \"The Modules available are: \\n\";"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            constructModuleList(modules);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_MODULE_MSG + \"\\n\""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + moduleListString;"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_TASK_TYPE_MSG + \"\\n\""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_DATE_TIME_MSG;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result +\u003d REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Hides empty module from the moduleList."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void constructModuleList(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleList.forEach(m -\u003e {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!m.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                counter.getAndAdd(1);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                moduleListString +\u003d counter + \".\" + m.getModuleCode() + \" \" + m.getModuleName() + \"\\n\";"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 123,
      "souwmyaa": 40,
      "aegis-bot": 3,
      "wyt-sonia": 485
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/edit/SetGoalInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.SET_GOAL;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * handles the interaction for goal setting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class SetGoalInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from the set goal command\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Great! Your goal has been set successfully!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public SetGoalInteractivePrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d SET_GOAL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isQuit(userInput)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleQuit(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleSetGoal(userInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getEndOfCommandMsg() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        SetGoalInteractivePrompt.statistics \u003d statistics;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles goal setting for user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user\u0027s input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a reply for the user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleSetGoal(String userInput) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d \"How many tasks do you want to complete today? Please give me a number between 1 to 100\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.GOAL;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case GOAL:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d parseGoalValue(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles the parsing of goal value"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user\u0027s input for goal"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return goal value"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String parseGoalValue(String userInput) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int goal \u003d 5;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            goal \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (goal \u003e 100 || goal \u003c 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return ex.getErrorMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // we reach here if parsing is successful"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics.setGoal(goal);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 78,
      "wyt-sonia": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/edit/UnarchiveTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.UNARCHIVE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.UnarchiveTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.UnarchiveTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * RRepresents an UnarchiveTaskInteractivePrompt, which interacts with user to unarchive a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UnarchiveTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from unarchive command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task retrieved successfully!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number of task you wish to retrieve.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UnarchiveTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d UNARCHIVE_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.reply \u003d \"Please enter the index number of the archived task.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    throw new UnarchiveTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (index \u003e Task.getArchivedTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    throw new UnarchiveTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d \"The task \" + Task.getArchivedTasks().get(index - 1).getTaskName() + \" will be retrieved. \\n\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \"Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d (new UnarchiveTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (UnarchiveTaskCommandException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                UnarchiveTaskCommand archiveTaskCommand \u003d new UnarchiveTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(archiveTaskCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 11,
      "gx-huang": 76
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/sort/SortTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.SORT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.sort.SortTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.SortTaskCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A interactive prompt for sorting task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task sorted successfully!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from sort task command.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String[] sort_option \u003d {\"Deadline / Task Start Date\", \"Task Name\", \"Creation DateTime\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskListPanel\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(SortTaskInteractivePrompt.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int option;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of the sort task action.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d SORT_TASK;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d \"Please choose the sort keyword: \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"1. Deadline / Task Start Date\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"2. Task Name\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"3. Creation Date \u0026 Time\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.SORT_KEYWORD;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case SORT_KEYWORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                option \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (option \u003e 3 || option \u003c\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new SortTaskCommandException(\"invalidOptionRangeError\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task  will be sorted by \" + sort_option[option - 1] + \". \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please click enter again to check the sorted list.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new DeleteTaskCommandException(\"wrongOptionFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (SortTaskCommandException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                SortTaskCommand sortTaskCommand \u003d new SortTaskCommand(sort_option[option - 1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(sortTaskCommand);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert !this.reply.isBlank()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The reply of sort \" + currentTerm.name() + \" is blank, please check.\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of the sort task interaction.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of the sort task action.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 92
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/CalendarViewInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.CalendarViewCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.CalendarViewCommandParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.CalendarViewCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *Represents a CalendarViewInteractivePrompt."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from calendar view command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_DATE_MSG \u003d \"Please input the date which you want to view in this format:\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                                                + \"\\n\\n    dd/MM/yyyy\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Now viewing: \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate selectedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarViewInteractivePrompt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CALENDAR_VIEW;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_DATE_MSG;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.DATE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                selectedDate \u003d CalendarViewCommandParser.parseDate(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d \"The tasks with date \" + selectedDate.toString()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \" will be shown.\\nPress enter to continue.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (CalendarViewCommandException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                CalendarViewCommand cvCommand \u003d new CalendarViewCommand(selectedDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(cvCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG + selectedDate.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d e.getMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 10,
      "gx-huang": 65
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/FilterTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.FILTER_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.FilterTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.FilterTaskCommandParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.FilterTaskCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatusEqualPredicate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskTypeEqualPredicate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Interaction with user for filtering tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from filter task command.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Tasks filtered successfully!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String REQUIRED_OPTION_MSG \u003d \"Please enter your choice of filter:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"1. Status\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"2. Type\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String REQUIRED_TYPE_MSG \u003d \"Please enter the task type you would like to filter by:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"1. Assignment\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"5. Exam\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"6. Others\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String REQUIRED_STATUS_MSG \u003d \"Please enter the status you would like to filter by:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"1. Pending\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"2. Finished\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"3. Due soon\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"4. Overdue\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskStatus status;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public FilterTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d FILTER_TASK;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d REQUIRED_OPTION_MSG;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.OPTION_TYPE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case OPTION_TYPE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                index \u003d FilterTaskCommandParser.parseOptionIndex(userInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    this.reply \u003d REQUIRED_STATUS_MSG;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.STATUS_TYPE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    this.reply \u003d REQUIRED_TYPE_MSG;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.TASKS_TYPE;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (FilterTaskCommandException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\" + REQUIRED_OPTION_MSG;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case TASKS_TYPE:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                type \u003d FilterTaskCommandParser.parseTypeIndex(userInput);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The tasks with type \" + type.toString() + \" will be filtered.\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please click enter again to filter.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (FilterTaskCommandException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\" + REQUIRED_TYPE_MSG;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case STATUS_TYPE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                status \u003d FilterTaskCommandParser.parseStatusIndex(userInput);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The tasks with status \" + status.toString() + \" will be filtered.\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please click enter again to filter.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (FilterTaskCommandException ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\" + REQUIRED_STATUS_MSG;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Predicate\u003cTask\u003e predicate \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    predicate \u003d new TaskStatusEqualPredicate(status);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    predicate \u003d new TaskTypeEqualPredicate(type);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                FilterTaskCommand filterTaskCommand \u003d new FilterTaskCommand(predicate);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(filterTaskCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 128,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/FindTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.FIND_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.FindTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * A interactive prompt for finding tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here are the list of tasks matching the keyword.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from find task command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String KEYWORD_PROMPT \u003d \"Please type in a keyword that you want to search for.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String userKeyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d FIND_TASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleQuit(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleFind(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Handles the sequence of interactive find commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the input entered by the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the reply to the user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleFind(String userInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.FIND_KEYWORD;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case FIND_KEYWORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            userKeyword \u003d userInput;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d getConfirmationPrompt(userKeyword);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String trimmedArgs \u003d userKeyword.trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new ParseException(\"Keyword cannot be empty string\", 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] userKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                TaskNameContainsKeywordsPredicate pred \u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    new TaskNameContainsKeywordsPredicate(Arrays.asList(userKeywords));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                FindTaskCommand findTaskCommand \u003d new FindTaskCommand(pred);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                logic.executeCommand(findTaskCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getConfirmationPrompt(String userKeyword) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"You are searching for the tasks containing \" + userKeyword + \". \\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"Please click enter again to view the searched list.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getKeywordPrompt() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getQuitMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return QUIT_COMMAND_MSG;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 83,
      "souwmyaa": 1,
      "wyt-sonia": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/HelpInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.HELP;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The interactive prompt for the help command. Returns the help message immediately"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class HelpInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \"Here is the list of available commands:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"1. add\\n2. archive\\n3. bye\\n4. clear\\n5. create mods\\n6. delete\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"7. view renamed\\n8. done\\n9. edit\\n10. filter\\n11. find\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"12. help\\n13. list\\n14. sort\\n15. refresh\\n16. calendar\\n17. goal\\n\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"User Guide: https://ay1920s2-cs2103t-w16-3.github.io/main/UserGuide.html\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public HelpInteractivePrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d HELP;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getHelpMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns the help message to the user immediately"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the help keyword"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the help message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 31,
      "souwmyaa": 4,
      "aegis-bot": 2,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/ListTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.ListTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * InteractivePrompt to list the tasks. This is useful after a Find command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here is the complete list of unarchived tasks :)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ListTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.LIST_TASK;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        displayList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * displays the complete list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ListTaskCommand listTaskCommand \u003d new ListTaskCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            logic.executeCommand(listTaskCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // do nothing, this block should not be reached"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 36,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/RefreshTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.DUE_SOON_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.RefreshCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DueSoonRefreshCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a RefreshTaskInteractivePrompt, which interacts with user to refresh the tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class RefreshTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Tasks\u0027 status and Due Soon list is refreshed!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from refresh command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public RefreshTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DUE_SOON_TASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The tasks list will be refreshed.\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DueSoonRefreshCommandException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                RefreshCommand dueSoonRefreshCommand \u003d new RefreshCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(dueSoonRefreshCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 61,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/interactiveprompt/view/ViewRenamedTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptType.VIEW_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ViewRenamedTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ViewRenamedTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskRenamedPredicate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a ViewRenamedTaskInteractivePrompt, which interacts with user to View duplicate tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ViewRenamedTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from view renamed command.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Filtered renamed tasks successfully!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ViewRenamedTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d VIEW_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The renamed tasks will be filtered\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ViewRenamedTaskCommandException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Predicate\u003cTask\u003e predicate \u003d new TaskRenamedPredicate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                ViewRenamedTaskCommand viewRenamedTaskCommand \u003d new ViewRenamedTaskCommand(predicate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(viewRenamedTaskCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 67,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/StudyBuddyParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a StudyBuddyParser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class StudyBuddyParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Command parseCommand(String option) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 1,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/TaskParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a TaskParser, which can parse all fields for tasks during interactive communication."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Especially for interactions of add task and edit task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskParser\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(TaskParser.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for task name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseName(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseName.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Empty task name error.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.length() \u003e 20) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": task name length error.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"taskNameLengthError\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"[^a-z0-9 ]\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(userInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isSpecialCharInside \u003d matcher.find();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isSpecialCharInside) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task name contains special char error.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"specialCharInputError\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        result \u003d userInput.trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert !result.isBlank()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The result of parseName from TaskParser is blank, please check.\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseName with task name \" + result);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for task description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String parseDescription(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseDescription.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.length() \u003e 300) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task description length error.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"taskDescriptionLengthError\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        result \u003d userInput.trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseDescription with task description \" + result);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} to assignment\u0027s date and time."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static LocalDateTime[] parseDateTimeForAssignment(String userInput)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseDateTimeForAssignment.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] result \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Check date time format"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result[0] \u003d TimeParser.parseDateTime(userInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Checks passed time"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (result[0].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is passed time.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseDateTimeForAssignment with data time \""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + TimeParser.getDateTimeString(result[0]));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} to other task type\u0027s (except assignment) date and time."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static LocalDateTime[] parseDateTimeForOtherTaskType(String userInput)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseDateTimeForOtherTaskType.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] result \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Check date time format"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!userInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is passed time.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempInputDateTimes \u003d userInput.trim().split(\"-\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time format error.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result[0] \u003d TimeParser.parseDateTime(tempInputDateTimes[0]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result[1] \u003d TimeParser.parseDateTime(tempInputDateTimes[1]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Check passed time and start-end order"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (result[0].isBefore(LocalDateTime.now()) || result[1].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is passed time.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!result[1].isAfter(result[0])) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is end before start.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"eventEndBeforeStartError\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert result.length \u003d\u003d 2"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"Missing start or end date time, please check.\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseDateTimeForOtherTaskType with date time as \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + TimeParser.getDateTimeString(result[0]) + \"-\" + TimeParser.getDateTimeString(result[1]));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} to task date and time."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDateTime[] parseDateTime(String userInput, TaskType taskType)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] result;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseDateTime.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d parseDateTimeForAssignment(userInput);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d parseDateTimeForOtherTaskType(userInput);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The result of parseDateTime from TaskParser is null, please check.\\n\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseDateTime.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for the module of the task."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Module parseModule(String userInput, ObservableList\u003cModule\u003e modules)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseModule.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module result;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (ModuleCode.isModuleCode(userInput)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                List\u003cModule\u003e tempModules \u003d modules.stream()"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filter(m -\u003e m.getModuleCode().toString().equals(userInput.toUpperCase()))"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (tempModules.isEmpty()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    logger.log(Level.WARNING, LOG_TAG + \": No such module error.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"noSuchModuleError\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d tempModules.get(0);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                int index \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003c 0 || index \u003e\u003d modules.size()) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    logger.log(Level.WARNING, LOG_TAG + \": Invalid index range error.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d modules.get(index);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The result of parseModule from TaskParser is null, please check.\\n\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseModule with value \" + result.toString());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for the type of the task."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param size"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType parseType(String userInput, int size)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        throws AddOrEditTaskCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseType.\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Empty input error.\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e size) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Invalid index range error.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The result of parseType from TaskParser is null, please check.\\n\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseType with value \" + result.toString());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for weight of the task."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static double parseWeight(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        double result;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseWeight\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Double.parseDouble(userInput);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result \u003c 0.0 || result \u003e 100.0) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": Wrong weight range error.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"wrongWeightRangeError\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"wrongWeightFormatError\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseWeight with value \" + result);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse the {@code userInput} for the estimated time needed to complete the task."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static double parseTimeCost(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start of parseTimeCost \");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        double result;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Double.parseDouble(userInput);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (result \u003c 0.0) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": Wrong estimated time range error.\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"wrongEstimatedTimeRangeError\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"wrongEstimatedTimeFormatError\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parseTimeCost with value \" + result);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 327
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/TimeParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a TimeParser, which can parse String to dateTime or parse dateTime to String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @@author wyt-sonia"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TimeParser\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(TimeParser.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses {@code userInput} to LocalDateTime variable."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return LocalDateTime when {@code userInput} format is valid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException when {@code userInput} format is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDateTime parseDateTime(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to parse date time.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime inputTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            inputTime \u003d LocalDateTime.parse(userInput.trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new InteractiveCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert inputTime !\u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The result of time parsing is null, please check.\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parsing date time.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return inputTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses {@code userInput} to LocalDate variable."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return LocalDate when {@code userInput} format is valid."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException when {@code userInput} format is invalid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static LocalDate parseDate(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to parse date.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDate inputDate \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            inputDate \u003d LocalDate.parse(userInput.trim(), DATE_FORMAT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new InteractiveCommandException(\"dataFormatError\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert inputDate !\u003d null"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The result of time parsing is null, please check.\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of parsing date.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return inputDate;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts LocalDateTime variable {@code dateTime} to a String as HH:mm dd/MM/yyyy format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return String as HH:mm dd/MM/yyyy format"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateTimeString(LocalDateTime dateTime) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to get date time string.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(dateTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String min \u003d dateTime.getMinute() \u003c 10 ? \"0\" + dateTime.getMinute()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getMinute();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hour \u003d dateTime.getHour() \u003c 10 ? \"0\" + dateTime.getHour()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getHour();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String day \u003d dateTime.getDayOfMonth() \u003c 10 ? \"0\" + dateTime.getDayOfMonth()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String month \u003d dateTime.getMonthValue() \u003c 10 ? \"0\" + dateTime.getMonthValue()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + dateTime.getMonthValue();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert !(min.isBlank() || hour.isBlank() || day.isBlank() || month.isBlank())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"There is blank value in min, hour, day and/or month when get DateTimeString, please check.\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of getting date time string.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return hour + \":\" + min"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \" \" + day + \"/\" + month + \"/\" + dateTime.getYear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts LocalDateTime variable {@code date} to a String as dd/MM/yyyy format."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return String as dd/MM/yyyy format"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateString(LocalDate date) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to get date string.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String day \u003d date.getDayOfMonth() \u003c 10 ? \"0\" + date.getDayOfMonth()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + date.getDayOfMonth();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String month \u003d date.getMonthValue() \u003c 10 ? \"0\" + date.getMonthValue()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\" + date.getMonthValue();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert !(day.isBlank() || month.isBlank())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"There is blank value in day and/or month when get DateTimeString, please check.\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of getting date string.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return day + \"/\" + month + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 2,
      "wyt-sonia": 125
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/exceptions/ParseException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a parse error encountered by a parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParseException extends IllegalValueException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/CalendarViewCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.CalendarViewCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Parses the date for calendar view command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewCommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the user input date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param userInput input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @throws InteractiveCommandException too long away/ incorrect format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static LocalDate parseDate(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate selectedDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            selectedDate \u003d TimeParser.parseDate(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CalendarViewCommandException(\"dateFormatError\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (Math.abs(selectedDate.getYear() - LocalDate.now().getYear()) \u003e 50) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CalendarViewCommandException(\"tooLongAway\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return selectedDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "gx-huang": 31
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/DeleteTaskCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parses the index for a delete command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static int parseIndex(String userInput) throws DeleteTaskCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int result;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DeleteTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new DeleteTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DeleteTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 36,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/FilterTaskCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.FilterTaskCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parses the index for a filter command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommandParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static TaskStatus parseStatusIndex(String userInput) throws FilterTaskCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskStatus result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e TaskStatus.getTaskStatusList().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new FilterTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d TaskStatus.getTaskStatusList().get(index - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static int parseOptionIndex(String userInput) throws FilterTaskCommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e 2 || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new FilterTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d index;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static TaskType parseTypeIndex(String userInput) throws FilterTaskCommandException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e TaskType.getTaskTypes().length || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new FilterTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 85,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/AddDuplicateTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a AddDuplicateTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class AddDuplicateTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an AddDuplicateTaskCommandException with {@code errorType}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType type of error"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public AddDuplicateTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 18
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/AddOrEditTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an AddOrEditTaskCommandException which handles exceptions for"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * add and edit task commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddOrEditTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an AddOrEditTaskCommandException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddOrEditTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 17
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ArchiveTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an ArchiveTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 1,
      "gx-huang": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/CalendarViewCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Exception class for calendar view command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarViewCommandException(String errorType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ClearTasksCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a ClearTasksCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an ClearTasksCommandException with {@code errorType}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ClearTasksCommandException(String errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 18
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/CompleteTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a CompleteTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a CompleteTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 9,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DeleteTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DeleteTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates a DeleteTaskCommandException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 16,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DueSoonRefreshCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DueSoonRefreshCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonRefreshCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates a DueSoonRefreshCommandException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonRefreshCommandException(String errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 16,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ExitTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an ExitTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an ExitTaskCommandException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 16,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/FilterTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a FilterTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates a FilterTaskCommandException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public FilterTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 17,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/InteractiveCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an InteractiveCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InteractiveCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractiveCommandException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"unKnownException\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Unknown problem happened, please quit this command or relaunch me.\\n\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"If you still face this error, you may have to contact my developer at: \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/ContactUs.adoc\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"emptyInputError\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The input is empty, please check again.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"moduleWeightOverloadError\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The maximum sum of task\u0027s weights under the same module is 100.0, please check again.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskCompletedError\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The task you chose is completed already\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"specialCharInputError\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The task name contains special character, please check again.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskNameLengthError\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The maximum length of task name is 20 characters, please check again.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"changeAssignmentToOtherTaskTypeError\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Due to the deadline/Duration format is different from assignment and the rest task types, \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"we currently don\u0027t support \\\"Assignment -\u003e Another Task Type\\\" editing.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"changeOtherTaskTypeToAssignmentError\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Due to the deadline/Duration format is different from assignment and the rest task types, \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"we currently don\u0027t support \\\"Another Task Type -\u003e Assignment\\\" editing.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskDescriptionLengthError\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The maximum length of task description is 300 characters, please check again.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongWeightFormatError\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter decimal number for task task weight.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongWeightRangeError\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The weight should be from 0.0 to 100.0.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"invalidInputError\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            errorMessage \u003d \"This is not a valid input.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongEstimatedTimeFormatError\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter decimal number for the number of hours the task might take.\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongEstimatedTimeRangeError\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter a positive number for the number of hours the task might take.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noSuchModuleError\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Could not find the module based on the module code entered, please check again.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"duplicateModuleNameError\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Detected duplicate module name. Please key in another module name.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"duplicateModuleCodeError\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Detected duplicate module code. Please key in another module code.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongModuleCodeFormatError\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid module code. Please key in module in the correct format. \\n\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" Module code format:\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" include a 2-3 letter prefix,\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" a 4-digit number,\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" then a postfix (Optional).\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" E.g. BA1001, CS2030J, LSM2040C\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noChangeFromOriginalModuleNameError\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter a different module name.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noChangeFromOriginalModuleCodeError\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter a different module code.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidIndexRangeError\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidOptionRangeError\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The option index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongIndexFormatError\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongOptionFormatError\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of option index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"dataTimeFormatError\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time format, please check again.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"pastDateTime\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, please enter a time in the future.\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"eventEndBeforeStartError\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, the end date you entered is \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"not after the start date, please check again.\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case \"dateFormatError\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            errorMessage \u003d \"Invalid date format, please follow the format below:\\n\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case \"tooLongAway\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            errorMessage \u003d \"Date too far apart from current date, please input a more realistic date\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorType() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 7,
      "wyt-sonia": 135,
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/SortTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommandException that will be throw when there is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * index format and range error."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a SortTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/UnarchiveTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an UnarchiveTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UnarchiveTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UnarchiveTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "gx-huang": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ViewRenamedTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents an ViewRenamedTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ViewRenamedTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ViewRenamedTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code Predicate} that always evaluate to true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void clearDueSoonList(ReadOnlyStudyBuddy studyBuddy);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void forceAddDueSoonTask(Task task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a duplicate task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param originalTask original task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addDuplicateTask(Task task, Task originalTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Unarchives a duplicate task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void unarchiveDuplicateTask(Task task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setStudyBuddyFilePath(Path studyBuddyFilePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the StudyBuddy"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ReadOnlyStudyBuddy getStudyBuddy();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces study buddy data with the data in {@code studyBuddy}."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setStudyBuddy(ReadOnlyStudyBuddy studyBuddy);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    boolean hasTask(Task task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * completes the given task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The task must exist in the study buddy."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void completeTask(Task target);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task name."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskName(Task target, String newTaskName);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task description."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskDescription the new description of the task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskDescription(Task target, String newTaskDescription);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task weight."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskWeight the new weight of the task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskWeight(Task target, double newTaskWeight);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task estimated time cost."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskTimeCost the new time cost of the task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskTimeCost(Task target, double newTaskTimeCost);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task type."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskType(Task target, TaskType newTaskType);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task date time."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskDateTime(Task target, LocalDateTime[] newDateTimes);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskMod(Task target, Module mod) throws ModuleException;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the given task."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void deleteTask(Task task);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Archives the given task."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    void archiveTask(Task task);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Moves an archived task back to main taskList."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    void unarchiveTask(Task task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the given task to the due soon list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addDueSoonTask(Task task);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the given task to the main list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addTaskToMainList(Task task);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the given task from the main list."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void deleteTaskFromMainList(Task task);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds the given task."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code task} must not already exist in the task list."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void addTask(Task task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void sortDueSoonTasks();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTask(Task target, Task editedTask);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    boolean hasMod(Module mod);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void addMod(Module mod);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void changeModName(Module oldMod, Module newMod) throws ModuleException;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void changeModCode(Module oldMod, Module newMod) throws ModuleException;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void deleteMod(Module mod) throws ModuleException;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered task list"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a List of modules"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ObservableList\u003cModule\u003e getFilteredModuleList();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the filter of the filtered task list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void sortTasks(String keyword);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 35,
      "souwmyaa": 57,
      "aegis-bot": 11,
      "wyt-sonia": 81,
      "-": 41,
      "gx-huang": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ModelManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the in-memory model of the study buddy data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddy studyBuddy;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredTasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final FilteredList\u003cModule\u003e filteredModules;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredArchiveTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredDueSoonTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Initializes a ModelManager with the given studyBuddy and userPrefs."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ModelManager(ReadOnlyStudyBuddy studyBuddy, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(studyBuddy.getTaskList(), userPrefs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(\"Initializing with study buddy: \" + studyBuddy + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy \u003d new StudyBuddy(studyBuddy);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getTaskList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredModules \u003d new FilteredList\u003c\u003e(this.studyBuddy.getModuleList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredArchiveTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getArchivedList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredDueSoonTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getDueSoonList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this(new StudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return userPrefs.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddyFilePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(studyBuddyFilePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudyBuddy \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddy(ReadOnlyStudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy.resetData(studyBuddy);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void clearDueSoonList(ReadOnlyStudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy.clearDueSoon(studyBuddy);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.hasTask(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.completeTask(target);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String taskName) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskName(target, taskName);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskWeight(Task target, double taskWeight) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        studyBuddy.setTaskWeight(target, taskWeight);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskTimeCost(Task target, double taskTiemCost) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        studyBuddy.setTaskTimeCost(target, taskTiemCost);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskDescription(Task target, String taskDescription) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        studyBuddy.setTaskDescription(target, taskDescription);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newTaskDateTime) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskDateTime(target, newTaskDateTime);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskMod(Task target, Module mod) throws ModuleException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.setModuleInTask(target, mod);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.removeTask(target);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.updateDeleteDueSoon(target);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.sortTasks(keyword);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.sortDueSoonTasks();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        studyBuddy.archiveTask(task);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void unarchiveTask(Task task) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        studyBuddy.unarchiveTask(task);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void unarchiveDuplicateTask(Task task) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.unarchiveDuplicateTask(task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.updateAddDueSoon(task);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void forceAddDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addDueSoonTask(task);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.hasModule(mod);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDuplicateTask(Task task, Task originalTask) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //ArrayList\u003cTask\u003e currentTasks \u003d Task.getCurrentTasks();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //int index \u003d currentTasks.indexOf(task);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //Task originalTask \u003d currentTasks.get(index);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addDuplicateTask(task, originalTask);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * STILL NEEDS MORE REFINEMENT DUE TO ABSENCE OF UpdateModuleList."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param mod"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addMod(Module mod) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addModule(mod);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the task to the main list only."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addTaskToMainList(Task task) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTaskToMainList(task);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the task only from main list."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTaskFromMainList(Task task) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.deleteTaskFromMainList(task);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModName(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.changeModuleName(oldMod, newMod);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModCode(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.changeModuleCode(oldMod, newMod);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void deleteMod(Module mod) throws ModuleException {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.deleteMod(mod);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTasks(target, editedTask);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code versionedStudyBuddy}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return filteredArchiveTasks;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return filteredModules;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return filteredDueSoonTasks;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        filteredTasks.setPredicate(predicate);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.equals(other.studyBuddy)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredTasks.equals(other.filteredTasks)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 filteredDueSoonTasks.equals(other.filteredDueSoonTasks)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredArchiveTasks.equals(other.filteredArchiveTasks);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 31,
      "souwmyaa": 102,
      "aegis-bot": 36,
      "wyt-sonia": 53,
      "-": 86,
      "gx-huang": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ReadOnlyStudyBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Unmodifiable view of an study buddy"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the tasks list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This list will not contain any duplicate tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getArchivedList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getDueSoonList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ObservableList\u003cModule\u003e getModuleList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This list will not contain any duplicate tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getTaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Statistics"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    List\u003cInteger\u003e getCompleteCountList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    List\u003cInteger\u003e getOverdueCountList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ScoreStats getScoreStats();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    GeneralStats getGeneralStats();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 20,
      "souwmyaa": 5,
      "aegis-bot": 1,
      "wyt-sonia": 7,
      "-": 9,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ReadOnlyUserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/StudyBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.SetGoalInteractivePrompt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.CompletionStats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.OverdueStats;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.panel.ProductivityPanel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Wraps all data at the study buddy"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Duplicates are allowed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddy implements ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final UniqueTaskList archivedTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList dueSoonTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final UniqueTaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ModuleList moduleList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final CompletionStats completionStats;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final OverdueStats overdueStats;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final GeneralStats generalStats;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Statistics statistics;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final ScoreStats scoreStats;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completionStats \u003d new CompletionStats();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        overdueStats \u003d new OverdueStats();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats \u003d new GeneralStats();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats \u003d new ScoreStats();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // the singleton instance of statistics is created here"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics \u003d new Statistics(generalStats, completionStats, overdueStats, scoreStats);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        UniqueTaskList.setStatistics(statistics);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task.setStatistics(statistics);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ProductivityPanel.setStatistics(statistics);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        SetGoalInteractivePrompt.setStatistics(statistics);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an StudyBuddy using the Tasks in the {@code toBeCopied}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy(ReadOnlyStudyBuddy toBeCopied) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Statistics"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Statistics getStatistics() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return statistics;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getCompleteCountList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completionStats.getCompleteCountList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getOverdueCountList() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return overdueStats.getOverdueCountList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public GeneralStats getGeneralStats() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return generalStats;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ScoreStats getScoreStats() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of the task list with {@code tasks}."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks.setTasks(tasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the given task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(editedTask);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.setTask(target, editedTask);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.sortTasks(keyword);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.sortTasks(\"deadline / task start date\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return tasks.isContains(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code StudyBuddy}."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void removeTask(Task key) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.remove(key);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateDeleteDueSoon(key);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks if task belongs in Due Soon list and deletes it"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void updateDeleteDueSoon(Task p) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (this.getDueSoonList().contains(p)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.remove(p);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code StudyBuddy}."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setArchivedTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.archivedTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setDueSoonTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.dueSoonTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setCompleteList(List\u003cInteger\u003e completeList) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.completionStats.setCompleteCountList(completeList);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setOverdueList(List\u003cInteger\u003e overdueList) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.overdueStats.setOverdueCountList(overdueList);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Resets the existing data of this {@code StudyBuddy} with {@code newData}."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        setArchivedTasks(newData.getArchivedList());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setDueSoonTasks(newData.getDueSoonList());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTasks(newData.getTaskList());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setModuleList(newData.getModuleList());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setCompleteList(newData.getCompleteCountList());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setOverdueList(newData.getOverdueCountList());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.copy(newData.getGeneralStats());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats.copy(newData.getScoreStats());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void clearDueSoon(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setDueSoonTasks(newData.getDueSoonList());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.add(task);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //// task-level operations"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds an archived task to the study buddy."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param p must not already exist in the study buddy."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void archiveTask(Task p) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.remove(p);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateDeleteDueSoon(p);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(p);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Adds to archive task list. (For Json files)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void addArchiveTask(Task p) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(p);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Moves an archived task back to main task list."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param p must not already exist in study buddy."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void unarchiveTask(Task p) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.remove(p);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateAddDueSoon(p);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.add(p);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a duplicate task to the main list."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param originalTask"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDuplicateTask(Task task, Task originalTask) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String originalTaskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        while (tasks.isContains(task)) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            originalTask.incrementDuplicate();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int number \u003d originalTask.getDuplicate();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            String newTaskName \u003d originalTaskName + \"(\" + number + \")\";"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            task.setTaskName(newTaskName);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateAddDueSoon(task);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the task only to the main list."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p task"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addTaskToMainList(Task p) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.add(p);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the task only from main list."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p task"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTaskFromMainList(Task p) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.remove(p);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Unarchives a duplicated task."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p task"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void unarchiveDuplicateTask(Task p) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        archivedTasks.remove(p);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateAddDueSoon(p);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a module to the ModuleList."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            moduleList.add(module);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            System.out.println(\"AddModule Failed, from studyBuddy.addModule()\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Change Module Name."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleName(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshAllModuleTaskList(oldModule, newModule);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.changeModuleName(oldModule, newModule);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Change Module Code."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleCode(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshAllModuleTaskList(oldModule, newModule);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.changeModuleCode(oldModule, newModule);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Delete a existing mod. Transfers all task with the existing mod to emptyMod."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void deleteMod(Module module) throws ModuleException {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshAllModuleTaskList(module, new EmptyModule());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.remove(module);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void refreshAllModuleTaskList(Module oldModule, Module newModule) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshModuleCodeTaskList(tasks, oldModule, newModule);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshModuleCodeTaskList(archivedTasks, oldModule, newModule);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshModuleCodeTaskList(dueSoonTasks, oldModule, newModule);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * performs setModule(newMod) for all task with oldMod within the taskList."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void refreshModuleCodeTaskList(UniqueTaskList taskList, Module oldModule, Module newModule) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskList.forEach(x -\u003e {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (x.getModule().equals(oldModule)) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                x.setModule(newModule);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the task list."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (t.isDueSoon()) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.add(t);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.completeTask(target);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskName(target, newTaskName);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskDescription(Task target, String newTaskDescription) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.setTaskDescription(target, newTaskDescription);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskTimeCost(Task target, double newTaskTimeCost) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.setTaskTimeCost(target, newTaskTimeCost);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskWeight(Task target, double newTaskWeight) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.setTaskWeight(target, newTaskWeight);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskDateTime(target, newDateTimes);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds task to Due Soon list if it is Due Soon."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param target"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void updateAddDueSoon(Task target) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!dueSoonTasks.isContains(target) \u0026\u0026 target.isDueSoon()) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.add(target);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setModuleInTask(Task target, Module module) throws ModuleException {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (moduleList.isContains(module) || module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tasks.setTaskMod(target, module);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Module does not exist in studyBuddy!\");"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return tasks.asUnmodifiableObservableList().size() + \" tasks\";"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archivedTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return tasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleList.getInternalList();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.moduleList.setModuleList(modules);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasModule(Module module) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return moduleList.isContains(module);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return tasks.hashCode();"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof StudyBuddy // instanceof handles nulls"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 tasks.equals(((StudyBuddy) other).tasks));"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 86,
      "souwmyaa": 117,
      "aegis-bot": 159,
      "wyt-sonia": 39,
      "-": 5,
      "gx-huang": 51
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/UserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Path studyBuddyFilePath \u003d Paths.get(\"data\", \"taskList.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public UserPrefs() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setStudyBuddyFilePath(newUserPrefs.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyFilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddyFilePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddyFilePath \u003d studyBuddyFilePath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Objects.hash(guiSettings, studyBuddyFilePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 studyBuddyFilePath.equals(o.studyBuddyFilePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + studyBuddyFilePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 10,
      "wyt-sonia": 4,
      "-": 72
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/EmptyModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Placeholder module for task with no modules allocated"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EmptyModule extends Module {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public EmptyModule() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(\"No Module Allocated\", \"OO0000O\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 8,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * packages task into various modules that the student have. Each module has list of task, taken from the main TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Identified by ModuleCode instead of ModuleName to minimise errors."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cTask\u003e internalTaskList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String moduleName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleCode moduleCode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Constructs a Module. Will check for any duplicates in the moduleList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module(String moduleName, String fullModuleCode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Same as previous constructor, but a module without a name."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Module(String fullModuleCode) throws ModuleException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(\"OO0000O\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"from Module(). ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * returns whether a Task is inside the internalList of this module."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toCheck"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContains(Task toCheck) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toAdd"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws DuplicateTaskException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isContains(toAdd)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalTaskList.add(toAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Designed to add task from another taskList to this."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toAdd"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws DuplicateTaskException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addAll(ObservableList\u003cTask\u003e toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!toAdd.filtered(x -\u003e isContains(x)).isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalTaskList.addAll(toAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes a task from the module list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toRemove"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws TaskNotFoundException"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isContains(toRemove)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalTaskList.remove(toRemove);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Compares moduleCode instead of moduleName."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param other object, possibly a module"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other instanceof Module) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ModuleCode otherModuleCode \u003d ((Module) other).moduleCode;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.moduleCode.equals(otherModuleCode);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getModuleName() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleName;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleName(String moduleName) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ModuleCode getModuleCode() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setModuleCode(String moduleCode) throws ModuleException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d new ModuleCode(moduleCode);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getInternalTaskList() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setInternalTaskList(ObservableList\u003cTask\u003e internalTaskList) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.internalTaskList \u003d internalTaskList;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Takes in an ObservableList of Task, filters it, then setInternalTaskList()."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param externalTaskList"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void filterAndSetInternalTaskList(ObservableList\u003cTask\u003e externalTaskList) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e collectedTasks \u003d externalTaskList.filtered(x -\u003e x.getModule().equals(this));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setInternalTaskList(collectedTasks);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return getModuleCode().toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 15,
      "souwmyaa": 2,
      "aegis-bot": 135,
      "wyt-sonia": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/ModuleCode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * ModuleCode. Ensures that the module code keyed in matches the proper format. XX0000."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCode {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String prefix;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String postfix;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ModuleCode(String fullModuleCode) throws ModuleException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (fullModuleCode.length() \u003e 8) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.prefix \u003d parsePrefix(fullModuleCode);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.number \u003d parseNumber(fullModuleCode);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.postfix \u003d parsePostfix(fullModuleCode);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the {@code userInput} is module code."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if {@code userInput} is a valid module code."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static boolean isModuleCode(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isValideModuleCode \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parsePrefix(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parseNumber(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parsePostfix(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isValideModuleCode \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isValideModuleCode;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses prefix from the input. Also, Ensure at least the first 2 digits are alphabetical."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static String parsePrefix(String input) throws ModuleException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        IntStream.range(0, input.toCharArray().length)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .mapToObj(i -\u003e input.toCharArray()[i]).takeWhile(x -\u003e Character.isAlphabetic(x))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .forEach(x -\u003e builder.append(x));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (builder.toString().length() \u003c 2 || builder.toString().length() \u003e 3) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return builder.toString().toUpperCase();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Parse the number part of the module code and make sure the number part is at most 4 digits."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static int parseNumber(String input) throws ModuleException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        IntStream.range(0, input.toCharArray().length)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .mapToObj(i -\u003e input.toCharArray()[i]).filter(x -\u003e Character.isDigit(x))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .forEach(x -\u003e builder.append(x));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (builder.toString().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return Integer.parseInt(builder.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses postfix from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static String parsePostfix(String input) throws ModuleException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        IntStream.range(0, input.toCharArray().length)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .mapToObj(i -\u003e input.toCharArray()[i]).dropWhile(x -\u003e Character.isAlphabetic(x))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .dropWhile(x -\u003e Character.isDigit(x)).forEach(x -\u003e builder.append(x));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (builder.toString().length() \u003c 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return builder.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPrefix() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int getNumber() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPostfix() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return postfix;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (object instanceof ModuleCode) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (this.getPrefix().equals(((ModuleCode) object).prefix)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u0026\u0026 (this.getNumber() \u003d\u003d ((ModuleCode) object).number)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u0026\u0026 this.getPostfix().equals(((ModuleCode) object).postfix)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (object instanceof String) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (this.toString().equals(((String) object).toUpperCase())) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix + String.format(\"%04d\", number) + postfix;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "aegis-bot": 99,
      "wyt-sonia": 34
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/ModuleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * List of Modules. Checks for duplicates. Will be stored in Json."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * To be executed every time whenever a module is added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return if there is a duplicate"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContains(Module module) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        final Module moduleForPredicate \u003d module;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.contains(moduleForPredicate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * To be executed every time whenever a module is added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param string moduleName"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return if there is a duplicate name."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContainsDuplicateName(String string) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FilteredList\u003cModule\u003e filteredList \u003d internalList.filtered((x) -\u003e x.getModuleName()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .toLowerCase().equals(string.toLowerCase()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return !filteredList.isEmpty();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getInternalList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * checks for duplicate modules/names first, then add into the moduleList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Moves Empty module to the back of the internalList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module to be added to the ModuleList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void add(Module module) throws ModuleException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(module)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Duplicate modules\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (this.isContainsDuplicateName(module.getModuleName())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Duplicate module name\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.add(module);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            shiftEmptyModBack();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * relocates Empty Module to the back of the internalList if it exist."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void shiftEmptyModBack() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.get(internalList.size() - 1).equals(new EmptyModule())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 internalList.contains(new EmptyModule())) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int emptyIndex \u003d internalList.indexOf(new EmptyModule());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            swap(emptyIndex, emptyIndex + 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * swaps 2 elements in the internalList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param j"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void swap(int i, int j) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module firstMod \u003d internalList.get(i);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module secondMod \u003d internalList.get(j);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(i, secondMod);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(j, firstMod);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes module from the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void remove(Module module) throws ModuleException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(module)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.remove(module);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Module does not exist\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Changes moduleName of a certain mod. Checks for existence of origin mod \u0026 duplicity of new name."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleName(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(oldModule) \u0026\u0026 !this.isContainsDuplicateName(newModule.getModuleName())) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int oldIndex \u003d internalList.indexOf(oldModule);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(oldIndex, newModule);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isContains(oldModule)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new ModuleException(\"Module does not exist\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isContainsDuplicateName(newModule.getModuleName())) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new ModuleException(\"A duplicate module name already exist.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Changes moduleCode of a certain mod. Checks for existence of origin mod \u0026 duplicity of new code."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleCode(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(newModule)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"new module code is a duplicate!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (this.isContains(oldModule)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (!newModule.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newModule.setInternalTaskList(oldModule.getInternalTaskList());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newModule.setInternalTaskList(getEmptyModule().getInternalTaskList());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newModule.addAll(oldModule.getInternalTaskList());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d this.indexOf(oldModule);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(index, newModule);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"module does not exist\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Retrieves a module with the original module name inside the moduleList."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleCode"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Module get(String moduleCode) throws ModuleException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module moduleToFind \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(moduleToFind)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d this.internalList.indexOf(moduleToFind);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.internalList.get(index);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Module Not Found\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module get(int index) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return this.internalList.get(index);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module getEmptyModule() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return this.internalList.get(internalList.size() - 1);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e replacement) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int indexOf(Module module) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.indexOf(module);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.size();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "aegis-bot": 148,
      "wyt-sonia": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/exceptions/ModuleException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.model.module.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Exception for module code"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ModuleException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ModuleException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/CompletionStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Stores statistics about number of tasks completed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class CompletionStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * List that contains the count of completed task for each day"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private List\u003cInteger\u003e completeCountList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CompletionStats() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getCompleteCountList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completeCountList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setCompleteCountList(List\u003cInteger\u003e completeCountList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.completeCountList \u003d completeCountList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes an empty completeCount List"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeCountList.add(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the complete count at current day index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the task is completed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void complete(int dayIndex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int currentCount \u003d completeCountList.get(dayIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList.set(dayIndex, currentCount + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns number of task completed on the given day"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return number of tasks completed on the given day"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getDailyCompleteCount(int dayIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completeCountList.get(dayIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a list containing the number of tasks completed daily over the past 7 days"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a list containing the number of tasks completed daily over the past 7 days"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyCompleteCountList(int dayIndex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completeCountList.subList(dayIndex - 6, dayIndex + 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 65
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/GeneralStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * stores general statistics"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class GeneralStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int goal;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int streak;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private List\u003cBoolean\u003e isStreakAddedList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private GoalObserver goalObserver;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public GeneralStats() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goal \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        initStreakList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * sets the observer to be the given GoalObserver"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param goalObserver the given GoalObserver"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setObserver(GoalObserver goalObserver) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goalObserver \u003d goalObserver;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes a streak list with all false values"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initStreakList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        isStreakAddedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isStreakAddedList.add(false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Copies the values of this generalStats object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void copy(GeneralStats generalStats) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goal \u003d generalStats.getGoal();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.streak \u003d generalStats.getStreak();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.isStreakAddedList \u003d generalStats.getIsStreakAddedList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cBoolean\u003e getIsStreakAddedList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return isStreakAddedList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setGoal(int goal) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goal \u003d goal;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (goalObserver !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            goalObserver.update();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getGoal() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return goal;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getStreak() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return streak;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * adds to the streak only if streak has not already been added today"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if streak is added"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean addStreak() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d StatsUtil.getDayIndex();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!isStreakAddedList.get(dayIndex)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isStreakAddedList.set(dayIndex, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            streak +\u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 81
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/GoalObserver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Observes the goal field in generalStats"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public interface GoalObserver {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * updates the observer when goal is changed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void update();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/OverdueStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Stores statistics about number of Overdue tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class OverdueStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * A list containing daily number of Overdue tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private List\u003cInteger\u003e overdueCountList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public OverdueStats() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getOverdueCountList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return overdueCountList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setOverdueCountList(List\u003cInteger\u003e overdueCountList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.overdueCountList \u003d overdueCountList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * initializes an empty OverdueCountList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        overdueCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            overdueCountList.add(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the completeLate count at current day index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the task is completed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addOverdue(int dayIndex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int currentOverdueCount \u003d overdueCountList.get(dayIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        overdueCountList.set(dayIndex, currentOverdueCount + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns number of task completed late on the given day"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return number of tasks completed late on the given day"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getDailyOverdueCount(int dayIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return overdueCountList.get(dayIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyOverdueCountList(int dayIndex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return overdueCountList.subList(dayIndex - 6, dayIndex + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 48,
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/ScoreStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * stores information about the user\u0027s score"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ScoreStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int noviceScore \u003d 50;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int apprenticeScore \u003d 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int dukeScore \u003d 200;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int expertScore \u003d 300;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int masterScore \u003d 400;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int grandmasterScore \u003d 500;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int legendScore \u003d 700;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int sageScore \u003d 1000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int enlightenedScore \u003d 2000;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * List that contains the user\u0027s score for each day"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private List\u003cInteger\u003e scoreList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int currentScore;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ScoreStats() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getScoreList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setScoreList(List\u003cInteger\u003e scoreList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.scoreList \u003d scoreList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes a scoreList with zero score for all days"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            scoreList.add(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * copies the currentScore and scoreList from the scoreStats"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param scoreStats the scoreStats to be copied from"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void copy(ScoreStats scoreStats) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.currentScore \u003d scoreStats.getCurrentScore();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.scoreList \u003d scoreStats.getScoreList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (scoreList.get(StatsUtil.getDayIndex()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            scoreList.set(StatsUtil.getDayIndex(), currentScore);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getCurrentScore() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return currentScore;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the score at current day index"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the score is to be added"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addScore(int dayIndex, int scoreToAdd) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        currentScore +\u003d scoreToAdd;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreList.set(dayIndex, currentScore);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns user\u0027s score on the given day"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s score on the given day"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getDailyScore(int dayIndex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreList.get(dayIndex);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a list containing the user\u0027s daily scores over the past 7 days"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a list containing the user\u0027s daily scores over the past 7 days"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyScores(int dayIndex) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyScores \u003d scoreList.subList(dayIndex - 6, dayIndex + 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int largestSoFar \u003d 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            int currentElement \u003d weeklyScores.get(i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (currentElement \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                weeklyScores.set(i, largestSoFar);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                largestSoFar \u003d currentElement;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return weeklyScores;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getRank() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Beginner\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Novice\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Apprentice\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Duke\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Expert\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Master\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Grandmaster\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Legend\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Sage\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Enlightened\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getNextRank() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (noviceScore - currentScore) + \" PP more to become a Novice\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (apprenticeScore - currentScore) + \" PP more to get to Apprentice\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (dukeScore - currentScore) + \" PP more to become a Duke\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (expertScore - currentScore) + \" PP more to become an Expert\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (masterScore - currentScore) + \" PP more to become a Master\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (grandmasterScore - currentScore) + \" PP more to get to Grandmaster\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (legendScore - currentScore) + \" PP more to get to Legend\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (sageScore - currentScore) + \" PP more to get to Sage\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (enlightenedScore - currentScore) + \" PP more to be Enlightened\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"You have mastered the productivity and achieved enlightenment.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * returns the score required to achieve the next rank"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return score required"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreToNextRank() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (noviceScore - currentScore);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (apprenticeScore - currentScore);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (dukeScore - currentScore);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (expertScore - currentScore);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (masterScore - currentScore);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (grandmasterScore - currentScore);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (legendScore - currentScore);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (sageScore - currentScore);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (enlightenedScore - currentScore);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the total score required for the current rank minus that of the previous rank"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return total score required for current rank"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreDifferenceForRank() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return noviceScore;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return apprenticeScore - noviceScore;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return dukeScore - apprenticeScore;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return expertScore - dukeScore;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return masterScore - expertScore;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return grandmasterScore - masterScore;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return legendScore - grandmasterScore;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return sageScore - legendScore;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return enlightenedScore - sageScore;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 212
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/Statistics.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Usage statistics for the user. These statistics are used on the productivity page."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private GeneralStats generalStats;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private CompletionStats completionStats;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private OverdueStats overdueStats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ScoreStats scoreStats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Statistics(GeneralStats generalStats, CompletionStats completionStats,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "          OverdueStats overdueStats, ScoreStats scoreStats) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.generalStats \u003d generalStats;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.completionStats \u003d completionStats;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.overdueStats \u003d overdueStats;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.scoreStats \u003d scoreStats;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Completion Stats"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Records the completed task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param completedTask the task that has just been completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void recordCompletedTask(Task completedTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d StatsUtil.getDayIndex();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addScore(10);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completionStats.complete(dayIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Records the added task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param addedTask"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void recordAddedTask(Task addedTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addScore(2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get number of tasks completed today"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return returns the number of tasks completed today"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getCompleteCountToday() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completionStats.getDailyCompleteCount(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getCompleteCountThisWeek() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyCompleteCountList \u003d completionStats.getWeeklyCompleteCountList(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return StatsUtil.sumIntegerList(weeklyCompleteCountList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyCompleteCountList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completionStats.getWeeklyCompleteCountList(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getOverdueCountThisWeek() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        List\u003cInteger\u003e weeklyOverdueCountList \u003d overdueStats.getWeeklyOverdueCountList(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return StatsUtil.sumIntegerList(weeklyOverdueCountList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Overdue stats"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Records an Overdue task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param overdueTask task that has gone Overdue"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void recordOverdueTask(Task overdueTask) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d StatsUtil.getDayIndex();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        overdueStats.addOverdue(dayIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addScore(-1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Score stats"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get today\u0027s score"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return today\u0027s score"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreToday() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getDailyScore(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyScores() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getWeeklyScores(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * adds to the current score"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param scoreToAdd score to be added"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addScore(int scoreToAdd) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats.addScore(StatsUtil.getDayIndex(), scoreToAdd);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * return user\u0027s rank"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s rank"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getRank() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getRank();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * return a String of the user\u0027s next rank"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s next rank"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getNextRank() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getNextRank();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * returns the score required to achieve the next rank"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return score required"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreToNextRank() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getScoreToNextRank();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // general stats"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setObserver(GoalObserver goalObserver) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.setObserver(goalObserver);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get user\u0027s goal for number of tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s goal"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getGoal() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return generalStats.getGoal();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * set user\u0027s goal"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param goal user\u0027s goal"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setGoal(int goal) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.setGoal(goal);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get user\u0027s current streak;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s streak"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getStreak() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return generalStats.getStreak();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * if streak has not already been added today, add 1 to the streak"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * and add score equivalent to daily goal"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void completeDailyGoal() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean isStreakAdded \u003d generalStats.addStreak();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isStreakAdded) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            addScore(getGoal());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the total score required for the current rank minus that of the previous rank"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return total score required for current rank"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreDifferenceForRank() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getScoreDifferenceForRank();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 165,
      "wyt-sonia": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/StatsUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.time.temporal.TemporalAdjusters.firstDayOfYear;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Contains utility methods for handling statistics"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class StatsUtil {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * utility method to get the number of days between two LocalDateTime"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param first  the first LocalDateTime"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param second the second LocalDateTime"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the absolute difference in number of days between the two LocalDateTime"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int getDaysBetween(LocalDateTime first, LocalDateTime second) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return (int) Math.abs(ChronoUnit.DAYS.between(first, second));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the current day, which is used as index for complete count list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the number of days from the start of year. 0 if the day is the start of year itself"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int getDayIndex() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime startOfYear \u003d now.with(firstDayOfYear());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return getDaysBetween(now, startOfYear);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * checks if the task is completed late"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dueDate date that the task is due on"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if the task is completed late."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static boolean isLate(LocalDateTime dueDate) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return ChronoUnit.DAYS.between(now, dueDate) \u003c 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Sums a list of integers"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param integerList a list of integers"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the sum of the integers"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int sumIntegerList(List\u003cInteger\u003e integerList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return integerList.stream()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .mapToInt(x -\u003e x)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .sum();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get a list of 7 days backtracking from the current day"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a list of 7 days backtracking from the current day"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static List\u003cString\u003e getDayList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e initialList \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            List.of(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        DayOfWeek dayOfWeek \u003d DayOfWeek.from(LocalDateTime.now());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayOfWeekValue \u003d dayOfWeek.getValue();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return initialList.subList(dayOfWeekValue, dayOfWeekValue + 7);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 70
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e, Cloneable {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The acceptable data and time format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int MINUTES_DIVISOR \u003d (1000 * 60);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int HOURS_DIVISOR \u003d (1000 * 60 * 60);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int DAYS_DIVISOR \u003d (1000 * 60 * 60 * 24);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int MINUTES_IN_WEEK \u003d (7 * 24 * 60);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static ArrayList\u003cTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime finishDateTime;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DateFormat df \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Date dateObj \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int duplicate \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task(Module module, TaskType taskType, String taskName, String taskDescription, double weight,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus taskStatus, LocalDateTime[] dateTimes, double estimatedTimeCost,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription; //not covered yet"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight; //not covered yet"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost; //not covered yet"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task.statistics \u003d statistics;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void updateCurrentTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTask\u003e getCurrentTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return currentTasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void updateArchivedTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static ArrayList\u003cTask\u003e getArchivedTasks() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archivedTasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module getModule() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModule(Module module) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (status) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"Pending\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"Finished\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.FINISHED;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Object clone() throws CloneNotSupportedException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return super.clone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public LocalDateTime getDueDate() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return getDateTimes()[0];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * Calculates the time left for the deadline."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return time left"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getTimeLeft() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String timeLeft \u003d \"Due: \";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateObj \u003d new Date();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        long difference \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int daysBetween \u003d (int) (difference / DAYS_DIVISOR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int hoursBetween \u003d ((int) (difference / HOURS_DIVISOR)) % 24;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int minsBetween \u003d ((int) (difference / MINUTES_DIVISOR)) % 60;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (daysBetween !\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (daysBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + daysBetween + \" day \";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + daysBetween + \" days \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (hoursBetween \u003d\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return timeLeft;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (hoursBetween !\u003d 0) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (hoursBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + hoursBetween + \" hour \";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + hoursBetween + \" hours \";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (minsBetween !\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (minsBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + minsBetween + \" min \";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + minsBetween + \" mins \";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (daysBetween \u003d\u003d 0 \u0026\u0026 hoursBetween \u003d\u003d 0 \u0026\u0026 minsBetween \u003d\u003d 0) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            timeLeft \u003d timeLeft + \" now\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return timeLeft;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the tasks status accordingly."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void freshStatus() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.taskStatus \u003d TaskStatus.DUE_SOON;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    statistics.recordOverdueTask(this);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.OVERDUE;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isAfter(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.PENDING)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the status of the task is expired."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if the status of the task is expired."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isStatusExpired() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isExpired \u003d false;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isAfter(now) \u0026\u0026 this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon() \u0026\u0026 this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isExpired;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getFinishDateTime() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return finishDateTime;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setFinishDateTime(LocalDateTime finishDateTime) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d finishDateTime;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public int getDuplicate() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return duplicate;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void incrementDuplicate() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.duplicate++;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void zeroDuplicate() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.duplicate \u003d 0;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskType(TaskType taskType) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskDescription(String taskDescription) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setWeight(double weight) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskStatus getTaskStatus() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskStatus \u003d\u003d null) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isStatusExpired()) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                freshStatus();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskStatus;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskStatus(TaskStatus taskStatus) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (dateTimes.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]) + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public LocalDateTime[] getDateTimes() {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return dateTimes;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //need to add the outOfRangeExceptionHandler"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setDateTimes(LocalDateTime[] dateTimes) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public double getEstimatedTimeCost() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return estimatedTimeCost;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEstimatedTimeCost(double estimatedTimeCost) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getCreationDateTime() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return creationDateTime;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setCreationDateTime(LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks if the task is Due Soon (next 7 days)."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if it is Due Soon, else false"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean isDueSoon() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (getTaskStatus() !\u003d TaskStatus.FINISHED) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dateObj \u003d new Date();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            long difference \u003d 0;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            float minsBetween \u003d (difference / MINUTES_DIVISOR);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return minsBetween \u003c\u003d MINUTES_IN_WEEK \u0026\u0026 minsBetween \u003e\u003d 0;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return Objects.hash(module, taskType, taskName, taskDescription, weight, taskStatus, dateTimes);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns true if both tasks have the same identity and data fields."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This defines a stronger notion of equality between two tasks."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof Task)) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task otherTask \u003d (Task) other;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription())"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getWeight() \u003d\u003d getWeight()"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getEstimatedTimeCost() \u003d\u003d getEstimatedTimeCost();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskString \u003d \"Task Name :\" + this.taskName + \"\\n\""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Code: \" + this.module.getModuleCode().toString() + \"\\n\""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Type: \" + this.getTaskType().toString() + \"\\n\""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Deadline/Duration: \" + this.getTimeString() + \"\\n\""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Description: \" + this.taskDescription + \"\\n\""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task weight: \" + this.weight + \"\\n\""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Estimated Time Cost: \" + this.estimatedTimeCost + \" hrs\\n\";"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both task of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This defines a weaker notion of equality between two tasks."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean isSameTask(Task otherTask) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (otherTask \u003d\u003d this) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask !\u003d null"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getWeight() \u003d\u003d (getWeight())"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getEstimatedTimeCost() \u003d\u003d (getEstimatedTimeCost())"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription());"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Compare tasks by deadline/ start date."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Comparison by task name is handled in sort command class."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int result \u003d 0;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d -1;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (!this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d 1;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.taskType.equals(t.taskType)) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskName.compareTo(t.taskName);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskType.compareTo(t.taskType);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 14,
      "souwmyaa": 102,
      "aegis-bot": 160,
      "wyt-sonia": 129,
      "-": 4,
      "gx-huang": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskField.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The fields of a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public enum TaskField {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_MODULE(\"Task module\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NAME(\"Task name\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_TYPE(\"Task type\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DATETIME(\"Task due date and time/ duration\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DESCRIPTION(\"Task description\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_WEIGHT(\"Task weight\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_ESTIMATED_TIME_COST(\"Estimated number of hour cost\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final String label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskField(String label) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static TaskField getTaskFieldFromNumber(int number) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (number) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_MODULE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_NAME;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_TYPE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_DATETIME;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_DESCRIPTION;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_WEIGHT;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_ESTIMATED_TIME_COST;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getFieldString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"1. \" + TASK_MODULE.label + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"2. \" + TASK_NAME.label + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"3. \" + TASK_TYPE.label + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"4. \" + TASK_DATETIME.label + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"5. \" + TASK_DESCRIPTION.label + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"6. \" + TASK_WEIGHT.label + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"7. \" + TASK_ESTIMATED_TIME_COST.label + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 32,
      "aegis-bot": 1,
      "wyt-sonia": 22
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskNameContainsKeywordsPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .anyMatch(keyword -\u003e StringUtil.isContainsWordIgnoreCase(task.getTaskName(), keyword));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 29,
      "souwmyaa": 1,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskRenamedPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task} has been renamed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskRenamedPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"[^a-z0-9 ]\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(task.getTaskName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return matcher.find();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof TaskStatusEqualPredicate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskStatus.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the Task status."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @@author wyt-sonia"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum TaskStatus {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    FINISHED,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    DUE_SOON,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    OVERDUE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTaskStatus\u003e getTaskStatusList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTaskStatus\u003e taskStatuses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(PENDING);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(FINISHED);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(DUE_SOON);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskStatuses.add(OVERDUE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskStatuses;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskStatus getStatus(String status) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskStatus result \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"pending\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d PENDING;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"finished\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d FINISHED;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"due soon\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d DUE_SOON;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"overdue\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d OVERDUE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts a TaskStatus enum back into a string, primarily for printing purposes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return string, either \"Pending\" or \"Finished\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String convertToString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"Pending\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"Finished\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"Due Soon\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d \"Overdue\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 2,
      "wyt-sonia": 66
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskStatusEqualPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task}\u0027s {@code Status} matches the status provided."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskStatusEqualPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskStatus status;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskStatusEqualPredicate(TaskStatus status) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return task.getTaskStatus() \u003d\u003d status;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof TaskStatusEqualPredicate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the task types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @@author wyt-sonia"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Assignment,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Quiz,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Presentation,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Meeting,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Exam,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Others;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static TaskType[] taskTypes \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assignment,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Quiz,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Presentation,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Meeting,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Exam,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Others"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType[] getTaskTypes() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskTypes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getTypeString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"1. Assignment\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"5. Exam\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"6. Others\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets related task type according to the {@code status} string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param status"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static TaskType getType(String status) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TaskType result \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"assignment\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Assignment;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Quiz;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"presentation\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Presentation;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"meeting\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Meeting;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"exam\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Exam;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"others\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d Others;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"The input string does not match with any task type, please check.\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 71
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskTypeEqualPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task}\u0027s {@code Type} matches the type provided."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskTypeEqualPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskTypeEqualPredicate(TaskType type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return task.getTaskType() \u003d\u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof TaskTypeEqualPredicate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/UniqueTaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a UniqueTaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class UniqueTaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Sets the statistics for unique task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param statistics completionStats used to record tasks completed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        UniqueTaskList.statistics \u003d statistics;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return internalList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if the list contains an equivalent task as the given argument."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContains(Task toCheck) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics.recordAddedTask(toAdd);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, editedTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes the equivalent task from the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(UniqueTaskList replacement) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of this list with {@code tasks}."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(tasks);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(tasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof UniqueTaskList // instanceof handles nulls"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Completes a task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.contains(target)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            target.setStatus(\"Finished\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String finishDateTimeString \u003d TimeParser.getDateTimeString(LocalDateTime.now());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            target.setFinishDateTime(TimeParser.parseDateTime(finishDateTimeString));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(index, target);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // log statistics"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            statistics.recordCompletedTask(target);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task name."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskName(newTaskName);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (internalList.contains(target)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task estimated time cost."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskTimeCost the new estimated time cost of the task"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskTimeCost(Task target, double newTaskTimeCost) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(newTaskTimeCost);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        target.setEstimatedTimeCost(newTaskTimeCost);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task weight."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskWeight the new weight of the task"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskWeight(Task target, double newTaskWeight) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(newTaskWeight);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        target.setWeight(newTaskWeight);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task description."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskDescription the new name of the task"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskDescription(Task target, String newTaskDescription) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(newTaskDescription);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        target.setTaskDescription(newTaskDescription);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task type"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskType(newTaskType);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task date time"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newDateTimes);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setDateTimes(newDateTimes);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Set module in task. Module will be checked for its existence outside this class"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * before this function is performed."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module a module for the task to be assigned to"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskMod(Task target, Module module) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(module);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        target.setModule(module);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"deadline / task start date\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Task::compareTo);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"task name\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getTaskName));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getCreationDateTime));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 57,
      "souwmyaa": 16,
      "aegis-bot": 126,
      "wyt-sonia": 65
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/DuplicateTaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DuplicateTaskException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DuplicateTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DuplicateTaskException(String errorType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 3,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/TaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents an InteractiveCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    protected String errorType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"duplicateTask\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            errorMessage \u003d \"Duplicate task! Please try again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getErrorType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/TaskNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a TaskNotFoundException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/util/SampleDataUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains utility methods for populating {@code StudyBuddy} with sample data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LONG_DESC_WITH_300_CHAR \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String SHORT_DESC \u003d \"This is a short description.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module emptyModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2101\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2103T\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2105 \u003d new Module(\"Introduction to Computer Networks\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2105\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2106 \u003d new Module(\"Introduction to Operating Systems\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2106\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDuration1 \u003d {LocalDateTime.now().plusDays(3),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(7)};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDuration2 \u003d {LocalDateTime.now().plusDays(5),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(13)};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDuration1 \u003d {LocalDateTime.now().plusDays(10),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(17)};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDuration2 \u003d {LocalDateTime.now().plusDays(8),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(12)};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] overdueDuration1 \u003d {LocalDateTime.now().minusDays(5),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().minusDays(3)};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] overdueDuration2 \u003d {LocalDateTime.now().minusDays(3),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().minusDays(1)};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDateTime1 \u003d {LocalDateTime.now().plusDays(3)};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDateTime2 \u003d {LocalDateTime.now().plusDays(5)};"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDateTime1 \u003d {LocalDateTime.now().plusDays(10)};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDateTime2 \u003d {LocalDateTime.now().plusDays(9)};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime pastDateTime1 \u003d LocalDateTime.now().minusDays(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime pastDateTime2 \u003d LocalDateTime.now().minusDays(6);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(emptyModule, TaskType.Others, \"Homework 1\", SHORT_DESC, 20.0,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, pendingDuration1, 5.0, pastDateTime2),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(emptyModule, TaskType.Presentation, \"Leadership Presentation 1\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 0.0, TaskStatus.FINISHED, dueSoonDuration1,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, pastDateTime1),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Quiz, \"CS2101 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                15.0, TaskStatus.PENDING, pendingDuration1, 2.0, pastDateTime1),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Group Meeting 1\", LONG_DESC_WITH_300_CHAR, 15.0,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, dueSoonDuration1, 5.0, pastDateTime2),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Assignment, \"CS2101 Ass 1\", LONG_DESC_WITH_300_CHAR, 20.0,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, pendingDateTime2, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 20.0, TaskStatus.FINISHED, dueSoonDuration1,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                13.0, pastDateTime2),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"CS2103T Ass 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                20.0, TaskStatus.PENDING, pendingDateTime1, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Meeting, \"Group Meeting\", LONG_DESC_WITH_300_CHAR, 0.0,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.OVERDUE, overdueDuration1, 15.0, pastDateTime2),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Quiz, \"CS2103T Quiz 1\", SHORT_DESC, 2.0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, pendingDuration2, 2.0, pastDateTime1),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Exam, \"CS2103T PT\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 20.0, TaskStatus.DUE_SOON, dueSoonDuration1,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, pastDateTime1),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Quiz, \"CS2105 Quiz 1\", LONG_DESC_WITH_300_CHAR,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, pendingDuration1, 5.0, pastDateTime2),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Others, \"Lab 2\", SHORT_DESC, 20.0,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, overdueDuration2, 15.0, pastDateTime1),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Assignment, \"Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.DUE_SOON, dueSoonDateTime2, 1.0, pastDateTime1),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Meeting, \"Meeting 1\", LONG_DESC_WITH_300_CHAR, 20.0,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, overdueDuration2, 15.0, pastDateTime2),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Assignment, \"Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.DUE_SOON, dueSoonDateTime1, 1.0, pastDateTime1),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Meeting, \"Meeting 1\", LONG_DESC_WITH_300_CHAR, 20.0,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.OVERDUE, overdueDuration2, 15.0, pastDateTime2),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Quiz, \"CS2106 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, pendingDuration1, 4.0, pastDateTime2),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Others, \"Lab 4\", LONG_DESC_WITH_300_CHAR, 8.0,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, overdueDuration1, 25.0, pastDateTime2)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static Module[] getSampleModule() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module emptyModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \"CS2101\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2103T\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2105 \u003d new Module(\"Introduction to Computer Networks\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2105\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2106 \u003d new Module(\"Introduction to Operating Systems\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2106\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Module[]{emptyModule, cs2101, cs2103T, cs2105, cs2106};"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static ReadOnlyStudyBuddy getSampleStudyBuddy() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy sampleSb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sampleSb.addTask(sampleTask);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sampleTasks.add(sampleTask);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (Module mod: getSampleModule()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            sampleSb.addModule(mod);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task.updateCurrentTaskList(sampleTasks);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return sampleSb;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 5,
      "aegis-bot": 13,
      "wyt-sonia": 107,
      "-": 12
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonAdaptedModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Only stores ModuleName \u0026 ModuleCode. Omits internalList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * internalList will only extract from taskList when called for search by module."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * when program terminates, internalList in Module will be wiped to minimise confusion."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class JsonAdaptedModule {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(@JsonProperty(\"moduleName\") String moduleName,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                             @JsonProperty(\"moduleCode\") String moduleCode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(Module module) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d module.getModuleName();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module.getModuleCode().toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module toModelType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new Module(moduleName, moduleCode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 32
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonAdaptedTask.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Jackson-friendly version of {@link Task}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "class JsonAdaptedTask {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskFinishDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double weight;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double estimatedTimeCost;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskCreationDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Constructs a {@code JsonAdaptedTask} with the given task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"taskType\") String taskType,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDateTime\") String taskDateTime,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"finishDateTime\") String taskFinishDateTime,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDescription\") String taskDescription,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"module\") String module, @JsonProperty(\"weight\") Double weight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"estimatedTimeCost\") Double estimatedTimeCost,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"status\") String status,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskCreationDateTime\") String taskCreationDateTime) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskFinishDateTime \u003d taskFinishDateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskCreationDateTime \u003d taskCreationDateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts a given {@code Task} into this class for Jackson use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(Task source) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String descString \u003d source.getTaskDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDescription \u003d descString.isBlank() ? \"\" : descString;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskName \u003d source.getTaskName();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDateTime \u003d source.getTimeString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskFinishDateTime \u003d source.getFinishDateTime() !\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ? TimeParser.getDateTimeString(source.getFinishDateTime())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        estimatedTimeCost \u003d source.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        status \u003d source.getTaskStatus().toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskType \u003d source.getTaskType().toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        weight \u003d source.getWeight();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode \u003d source.getModule().toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskCreationDateTime \u003d TimeParser.getDateTimeString(source.getCreationDateTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // for datetime"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] timeTerms \u003d taskDateTime.split(\"-\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (timeTerms.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[1] \u003d TimeParser.parseDateTime(timeTerms[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime creationDateTime \u003d TimeParser.parseDateTime(taskCreationDateTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task data \u003d new Task(new Module(moduleCode), TaskType.getType(taskType),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskName, taskDescription, weight,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskStatus.getStatus(status), dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskFinishDateTime.isBlank()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime finishDateTime \u003d TimeParser.parseDateTime(taskFinishDateTime);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.setFinishDateTime(finishDateTime);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "aegis-bot": 4,
      "wyt-sonia": 99
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonSerializableStudyBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An Immutable StudyBuddy that is serializable to JSON format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "@JsonRootName(value \u003d \"studyBuddy\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class JsonSerializableStudyBuddy {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_ARCHIVED_TASK \u003d \"Archived contains duplicate task(s).\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MESSAGE_DUPLICATE_MODULES \u003d \"Module List contains duplicate module(s).\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_DUE_SOON_TASK \u003d \"Due soon list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e dueSoonTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cInteger\u003e completeCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cInteger\u003e overdueCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final GeneralStats generalStats \u003d new GeneralStats();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final ScoreStats scoreStats \u003d new ScoreStats();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Constructs a {@code JsonSerializableStudyBuddy} with the given tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public JsonSerializableStudyBuddy(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.tasks.addAll(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Converts a given {@code ReadOnlyStudyBuddy} into this class for Jackson use."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableStudyBuddy}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonSerializableStudyBuddy(ReadOnlyStudyBuddy source) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.addAll(source.getArchivedList().stream()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.addAll(source.getTaskList().stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList.addAll(source.getCompleteCountList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        overdueCountList.addAll(source.getOverdueCountList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.copy(source.getGeneralStats());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats.copy(source.getScoreStats());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this study buddy into the model\u0027s {@code StudyBuddy} object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (task.isStatusExpired()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.freshStatus();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : archivedTasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            studyBuddy.addArchiveTask(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (JsonAdaptedModule jsonAdaptedModule : modules) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Module module \u003d jsonAdaptedModule.toModelType();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (studyBuddy.hasModule(module)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULES);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addModule(module);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.setCompleteList(this.completeCountList);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.setOverdueList(this.overdueCountList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.getGeneralStats().copy(this.generalStats);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.getScoreStats().copy(this.scoreStats);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task.updateCurrentTaskList(new ArrayList\u003c\u003e(studyBuddy.getTaskList()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task.updateArchivedTaskList(new ArrayList\u003c\u003e(studyBuddy.getArchivedList()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 26,
      "souwmyaa": 27,
      "aegis-bot": 9,
      "wyt-sonia": 5,
      "-": 26,
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonStudyBuddyStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A class to access StudyBuddy data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonStudyBuddyStorage implements StudyBuddyStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonStudyBuddyStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonStudyBuddyStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return readStudyBuddy(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Similar to {@link #readStudyBuddy()}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Optional\u003cJsonSerializableStudyBuddy\u003e jsonStudyBuddy \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            filePath, JsonSerializableStudyBuddy.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!jsonStudyBuddy.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return Optional.of(jsonStudyBuddy.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        saveStudyBuddy(studyBuddy, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Similar to {@link #saveStudyBuddy(ReadOnlyStudyBuddy)}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddy);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableStudyBuddy(studyBuddy), filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 19,
      "-": 54
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonUserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 5,
      "-": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface Storage extends StudyBuddyStorage, UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 3,
      "wyt-sonia": 1,
      "-": 23
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Manages storage of StudyBuddy data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StudyBuddyStorage studyBuddyStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StorageManager(StudyBuddyStorage studyBuddyStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddyStorage \u003d studyBuddyStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudyBuddy methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyStorage.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return readStudyBuddy(studyBuddyStorage.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyStorage.readStudyBuddy(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        saveStudyBuddy(studyBuddy, studyBuddyStorage.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddyStorage.saveStudyBuddy(studyBuddy, filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 15,
      "-": 56
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/StudyBuddyStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a storage for {@link StudyBuddy}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface StudyBuddyStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the file path of the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns StudyBuddy data as a {@link ReadOnlyStudyBuddy}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see #getStudyBuddyFilePath()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves the given {@link ReadOnlyStudyBuddy} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param studyBuddy cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see #saveStudyBuddy(ReadOnlyStudyBuddy)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/UserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a storage for {@link UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves the given {@link ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 2,
      "-": 30
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/CommandBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.ExitTaskInteractivePrompt;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InvalidInputInteractivePrompt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.add.AddTaskInteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.add.CreateModuleInteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.delete.ClearTasksInteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.delete.DeleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.ArchiveTaskInteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.CompleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.EditModuleInteractivePrompt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.EditTaskInteractivePrompt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.SetGoalInteractivePrompt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.UnarchiveTaskInteractivePrompt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.sort.SortTaskInteractivePrompt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.CalendarViewInteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.FilterTaskInteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.FindTaskInteractivePrompt;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.HelpInteractivePrompt;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.ListTaskInteractivePrompt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.RefreshTaskInteractivePrompt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.view.ViewRenamedTaskInteractivePrompt;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //private static final String[] interactiveCommandTypes \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //{\"add\", \"edit\", \"delete\", \"archive\", \"done\", \"view renamed\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //\"clear\", \"bye\", \"sort\", \"refresh\", \"help\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //\"filter\", \"create mods\", \"edit mods\", \"find\", \"list\", \"unarchive\", \"goal\", \"calendar\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePrompt currentInteractivePrompt;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void handleCommandEntered() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // allow InteractivePrompt type with different case and space in front or behind"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String userInput \u003d commandTextField.getText().toLowerCase().trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (currentInteractivePrompt \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (userInput) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"add\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"edit\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"archive\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"view renamed\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ViewRenamedTaskInteractivePrompt();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"sort\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new SortTaskInteractivePrompt();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ExitTaskInteractivePrompt();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"refresh\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new ListTaskInteractivePrompt();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"clear\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"unarchive\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"filter\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                //mod related functions will not be shown on UI but available as shortcut"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"create mods\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"edit mods\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new EditModuleInteractivePrompt();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                //mod related functions will not be shown on UI but available as shortcut"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"goal\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new SetGoalInteractivePrompt();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                //change tabs"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"calendar\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new CalendarViewInteractivePrompt();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new InvalidInputInteractivePrompt();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            CommandResult commandResult \u003d commandExecutor"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                .execute(currentInteractivePrompt, commandTextField.getText());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (commandResult !\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException | ParseException | NullPointerException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(e.getMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "         * @see Logic#execute(String)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult execute(InteractivePrompt currentInteractivePrompt, String commandText)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throws CommandException, ParseException;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void run(InteractivePrompt interactivePrompt) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        currentInteractivePrompt \u003d interactivePrompt;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 19,
      "souwmyaa": 20,
      "aegis-bot": 21,
      "wyt-sonia": 52,
      "-": 60,
      "gx-huang": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/FeedbackDisplayBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the header of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class FeedbackDisplayBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"FeedbackDisplayBox.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextArea resultDisplay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public FeedbackDisplayBox() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFeedbackToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 24
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.add.CreateModuleInteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.interactiveprompt.edit.EditModuleInteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.ui.panel.CalendarPanel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.DueSoonListPanel;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.ModuleListPanel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.panel.ProductivityPanel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.TaskListPanel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.TaskSummaryPanel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String ALL_TASK \u003d \"All Tasks\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String TITLE \u003d \"Study Buddy\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String DUE_SOON_TASK \u003d \"Tasks Due Soon\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MODULE \u003d \"Modules\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String ARCHIVED_TASK \u003d \"Archived Task\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String CALENDAR \u003d \"Calendar\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String TASK_SUMMARY \u003d \"Task Summary\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String PRODUCTIVITY_TITLE \u003d \"Your Productivity\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static MainWindow mainWindow;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskListPanel taskListPanel;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskSummaryPanel taskSummaryPanel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DueSoonListPanel dueSoonListPanel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ProductivityPanel productivityPanel;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleListPanel moduleListPanel;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private CalendarPanel calendarPanel;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private FeedbackDisplayBox feedbackDisplayBox;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private CommandBox commandBox;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label menuPointsLabel;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox taskListHolder;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskListPanelPlaceholder;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane timeLeftbarPlaceholder;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskSummaryHolder;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private StackPane modulePaneHolder;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private StackPane productivityPanelHolder;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label taskListPanelTitle;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane taskListPanelTitleHolder;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dueListPanelTitle;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Pane dueListPanelTitleHolder;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label mainTitle;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane mainTitleHolder;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label productivityTitle;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private MenuItem productivityMenuItem;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private MenuItem calendarMenuItem;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private MenuItem allTaskMenuItem;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private MenuItem archiveMenuItem;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private MenuItem statisticsMenuItem;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to set up the Main Window.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        mainWindow \u003d this;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of setting up the Main Window.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setAccelerator(allTaskMenuItem, KeyCombination.valueOf(\"F6\"));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setAccelerator(statisticsMenuItem, KeyCombination.valueOf(\"F3\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setAccelerator(calendarMenuItem, KeyCombination.valueOf(\"F4\"));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setAccelerator(productivityMenuItem, KeyCombination.valueOf(\"F5\"));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to fill up all the placeholders of this window.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPanel \u003d new TaskSummaryPanel(logic.getFilteredTaskList(), logic.getFilteredArchivedTaskList(),"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logic.getFilteredModuleList(), dueSoonListPanelPlaceholder, dueListPanelTitle);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.getChildren().add(taskSummaryPanel.getRoot());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(false);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(false);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        //Productivity page"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanel \u003d new ProductivityPanel(logic.getFilteredTaskList(), menuPointsLabel);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanelHolder.getChildren().add(productivityPanel.getRoot());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanelHolder.setVisible(false);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanelHolder.setManaged(false);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList(), logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.getChildren().add(moduleListPanel.getRoot());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.setVisible(false);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.setManaged(false);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        feedbackDisplayBox \u003d new FeedbackDisplayBox();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(feedbackDisplayBox.getRoot());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of filling up all the placeholders of this window.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows the task summaries."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void handleShowTaskSummary() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to execute show task summary.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskSummaryHolderView(true);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(false, true);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPanel.renderSelectedListPanel();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleDueSoonTaskListPanelTitleView(true);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TASK_SUMMARY);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End od executing show task summary.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles showing the productivity panel"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProductivity() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to execute show productivity.\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProductivityHolderView(true);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleTaskListHolderView(true, false);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setTaskListTitleText(ALL_TASK);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setMainTitleText(PRODUCTIVITY_TITLE);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of executing show productivity.\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * shows the productivity panel and selects the Productivity Points tab"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProductivityPoints() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to show productivity points.\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanel.selectTab(2);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        handleShowProductivity();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of executing show productivity points.\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * shows the productivity panel and selects the Daily tab"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProductivityDaily() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to show productivity daily.\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanel.selectTab(0);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        handleShowProductivity();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of showing productivity daily.\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle exit.\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling exit.\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Shows all task list in taskListHolder."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowAllTasks() {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to show all tasks.\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTaskListTitleText(ALL_TASK);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        handleDueSoonTasks();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of showing all tasks..\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles task to be shown in TaskListHolder."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void handleDueSoonTasks() {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handles task to be shown in TaskListHolder.\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueListPanelTitle.setText(DUE_SOON_TASK);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueListPanelTitle.getStyleClass().clear();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueListPanelTitle.getStyleClass().add(\"sub_header\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling task to be shown in TaskListHolder.\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles archived task to be shown in TaskListHolder."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowArchivedTasks() {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handles archived task to be shown.\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTaskListTitleText(ARCHIVED_TASK);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskListPanel archiveListPanel \u003d new TaskListPanel(logic.getFilteredArchivedTaskList());"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(archiveListPanel.getRoot());"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        handleDueSoonTasks();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling archived task to be shown.\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles modules to be displayed in ModulesTabHolder."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleShowModules() {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle archived task to be shown.\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleModTabView(true);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProductivityHolderView(false);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(MODULE);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling show modules.\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * on clicked: leads to createModuleInteractivePrompt."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleCreateMod() {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle create modules\u0027 button clicking.\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        handleShowModules();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        commandBox.run(new CreateModuleInteractivePrompt());"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        commandBox.handleCommandEntered();"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handle create modules\u0027 button clicking.\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * on clicked: leads to EditModuleInteractivePrompt."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleEditMod() {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handling edit Mod InteractivePrompt.\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        handleShowModules();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        commandBox.run(new EditModuleInteractivePrompt());"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        commandBox.handleCommandEntered();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling edit Mod InteractivePrompt.\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles calendar to be shown in TaskListHolder."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void handleShowCalendar() {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle calendar to be shown.\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListPanelTitleView(false);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(CALENDAR);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        calendarPanel \u003d new CalendarPanel(logic.getFilteredTaskList(), dueSoonListPanelPlaceholder,"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dueListPanelTitle);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(calendarPanel.getRoot());"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling calendar to be shown.\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskListPanel getTaskListPanel() {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskListPanel;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel getDueSoonListPanel() {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonListPanel;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CalendarPanel getCalendarPanel() {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return this.calendarPanel;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see Logic#execute(String)"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private CommandResult executeCommand(InteractivePrompt currentInteractivePrompt, String commandText) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle command execution.\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt.setLogic(logic);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String reply \u003d currentInteractivePrompt.interact(commandText.trim());"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        feedbackDisplayBox.setFeedbackToUser(reply);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isQuit()) {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            handleExit();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isEndOfCommand()) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new CommandResult(\"Set current interactive to null\", false, false);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling command execution.\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Toggles list panels according to values assigned. Can add more if there are more windows required for display."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val1 toggles TaskListHolder"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val2 toggles TaskSummaryHolder"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val3 toggles ModuleTabHolder"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void customToggleHolders(boolean val1, boolean val2, boolean val3, boolean val4) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(val1, val1);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskSummaryHolderView(val2);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleModTabView(val3);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProductivityHolderView(val4);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Toggles title according to values assigned. Can add more if there are more windows required for display."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val1 toggles MainTitle"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val2 toggles TaskList(Left side)"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void customToggleTitle(boolean val1, boolean val2/*, boolean val3*/) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(val1);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListPanelTitleView(val2);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //setDueSoonTaskListPanelTitleView(val3);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleAllTitle(boolean val) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        customToggleTitle(val, val);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleAllHoldersInvisible() {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        customToggleHolders(false, false, false, false);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggles the title of the dueListPanelTitle."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param val"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskSummaryHolderView(boolean val) {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(val);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(val);"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (val) {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dueListPanelTitle.getStyleClass().add(\"summary_sub_header\");"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dueListPanelTitle.setText(\"Click on Chart to View Related Tasks\");"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskSummaryHolder, val);"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggles the visibility of taskListHolder."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param isAllTaskListShow"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param isDueSoonShow"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void toggleTaskListHolderView(boolean isAllTaskListShow, boolean isDueSoonShow) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(taskListPanelPlaceholder, isAllTaskListShow);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(taskListPanelTitleHolder, isAllTaskListShow);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(dueSoonListPanelPlaceholder, isDueSoonShow);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(dueListPanelTitleHolder, isDueSoonShow);"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isAllTaskListShow || isDueSoonShow) {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setManaged(true);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setVisible(true);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setManaged(false);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setVisible(false);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleModTabView(boolean val) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(modulePaneHolder, val);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void toggleProductivityHolderView(boolean val) {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setPaneView(productivityPanelHolder, val);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleMainTitleView(boolean val) {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(mainTitleHolder, val);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskListPanelTitleView(boolean val) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskListPanelTitleHolder, val);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleDueSoonTaskListPanelTitleView(boolean val) {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(dueListPanelTitleHolder, val);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setTaskListTitleText(String text) {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskListPanelTitle.setText(text);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setMainTitleText(String text) {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        mainTitle.setText(text);"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setPaneView(Pane pane, boolean val) {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        pane.setVisible(val);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        pane.setManaged(val);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static MainWindow getInstance() {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return mainWindow;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 83,
      "souwmyaa": 34,
      "aegis-bot": 159,
      "wyt-sonia": 135,
      "-": 121,
      "gx-huang": 30
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/StatusBarFooter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the footer of the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StatusBarFooter extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"StatusBarFooter.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label saveLocationStatus;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public StatusBarFooter(Path saveLocation) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * API of UI component"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Starts the UI (and the App)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    void start(Stage primaryStage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/UiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/study_buddy.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/StudyBuddyTheme.css\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 22,
      "-": 60
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/UiPart.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Resource folder where FXML files are stored."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #UiPart(URL)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL and root object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #UiPart(URL, Object)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the root object of the scene graph of this UiPart."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public T getRoot() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads the object hierarchy from a FXML document."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param location Location of the FXML document."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root     Specifies the root of the object hierarchy."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadFxmlFile(URL location, T root) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(location);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "wyt-sonia": 17,
      "-": 74
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/card/DetailedTaskCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An UI component that displays the detail information of a {@code Task}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @@author wyt-sonia"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DetailedTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"DetailedTaskCard\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(DetailedTaskCard.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"DetailedTaskCard.fxml\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label module;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label status;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label weight;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label estimatedTimeCost;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox tags;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public DetailedTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTaskCard(task, displayedIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders task\u0027s text information and badges."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render task card.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTaskTextFields(task, displayedIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTaskBadges(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering task card.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders task\u0027s text information."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param displayedIndex"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTaskTextFields(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render task text fields.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        description.setText(\"Task Description: \" + task.getTaskDescription());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        weight.setText(\"Task Weight: \" + task.getWeight() + \"%\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        estimatedTimeCost.setText(\"Estimated Time Needed: \" + task.getEstimatedTimeCost() + \" hr/hrs\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        status.setText(task.getTaskStatus().convertToString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dateTime.setText(\"Deadline/Duration: \" + task.getTimeString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime.setText(\"Created at: \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering task text fields.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders task\u0027s badges."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTaskBadges(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render task badges.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTaskModuleBadges(task.getModule());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTaskStatusBadges(task.getTaskStatus());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderTaskTypeBadges(task.getTaskType());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering task badges.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders the task module badges according to {@code taskModule}."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskModule"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTaskModuleBadges(Module taskModule) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render task module badges.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Omit module Badges if the task is not related to any module."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskModule.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            module.setVisible(false);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            module.setManaged(false);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            module.setText(taskModule.toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            module.getStyleClass().add(\"module_lbl\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering task module badges.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders the task status badges according to {@code taskStatus}."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskStatus"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTaskStatusBadges(TaskStatus taskStatus) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render task status badges.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (taskStatus) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"pending_status\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"done_status\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"due_soon_status\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            status.getStyleClass().add(\"Overdue_status\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering task status badges.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders the task type badges according to {@code taskType}."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderTaskTypeBadges(TaskType taskType) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render task type badges.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering task type badges.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!(other instanceof DetailedTaskCard)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DetailedTaskCard detailedTaskCard \u003d (DetailedTaskCard) other;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return id.getText().equals(detailedTaskCard.id.getText())"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 task.equals(detailedTaskCard.task);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 3,
      "aegis-bot": 6,
      "wyt-sonia": 201
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/card/DueSoonTaskCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An UI component that displays information of a Due Soon Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonTaskCard.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label timeLeft;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label weightAndModule;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private HBox tags;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        timeLeft.setText(task.getTimeLeft());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        renderTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateTime.setText(\"Deadline/Start at: \" + task.getTimeString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        creationDateTime.setText(\"Created at: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (task.getModule().equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            weightAndModule.setVisible(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            weightAndModule.setManaged(false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            weightAndModule.setText(task.getWeight() + \"% \" + task.getModule().toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Applies different css calss to different task type and status."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void renderTask(Task task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (task.getTaskType()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!(other instanceof DueSoonTaskCard)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DueSoonTaskCard card \u003d (DueSoonTaskCard) other;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 task.equals(card.task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 112,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/card/ModCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * module for display"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"ModCard.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public final Module module;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label moduleCode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label moduleName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModCard(Module module, int displayIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode.setText(module.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleName.setText(module.getModuleName());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof ModCard)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModCard card \u003d (ModCard) other;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleCode.getText().equals(card.moduleCode.getText())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 module.equals(card.module);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 3,
      "aegis-bot": 45,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/CalendarPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Calendar. Still under construction."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Will cleanup code."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class CalendarPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"CalendarPanel.fxml\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CalendarPanel.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private ObservableList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int calendarYear;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Month calendarMonth;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dueSoonPanelTitle;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label month;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label year;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private GridPane monthBox;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button prev;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button next;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CalendarPanel(ObservableList\u003cTask\u003e taskList,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                         StackPane dueSoonListPanelPlaceholder, Label dueSoonPanelTitle) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.dueSoonListPanelPlaceholder \u003d dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.dueSoonPanelTitle \u003d dueSoonPanelTitle;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueSoonPanelTitle.getStyleClass().add(\"calender_sub_header\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //reset data in panels for calendar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonPanelTitle.setText(\"Click on a date to see tasks\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.setBackground("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //generatecalendar"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        generateCalendar(localDate.getYear(), localDate.getMonth());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                generateCalendar(calendarYear, calendarMonth);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Generates a calendarPanel with give year and month"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param calYear  calendar year"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param calMonth calendar month"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void generateCalendar(int calYear, Month calMonth) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        monthBox.getChildren().clear();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        month.setText(calMonth.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        year.setText(String.valueOf(calYear));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarMonth \u003d calMonth;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarYear \u003d calYear;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate newDate \u003d LocalDate.of(calYear, calMonth, 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        logger.info(\"Calendar: Generating calendar for \" + calMonth.toString() + calYear);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //day of week of first day"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        int dayOfWeek \u003d newDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (int i \u003d 1, j \u003d 0; i \u003c\u003d newDate.lengthOfMonth(); i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (dayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate tempDate \u003d LocalDate.of(newDate.getYear(), newDate.getMonth(), i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            VBox temp \u003d new VBox();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Pane p \u003d new Pane();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            p.setBackground(new Background(new BackgroundFill(Color.WHEAT, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(p, dayOfWeek, j);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Label tempLbl \u003d new Label(i + \"\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tempLbl.setPadding(new Insets(2, 2, 2, 4));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            temp.getChildren().add(tempLbl);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (taskDueDate.equals(tempDate)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (count \u003e 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                p.setBackground(new Background("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.rgb(255, 157, 94), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Label dayTasksLabel \u003d new Label();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dayTasksLabel.setText(count + \" Task\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dayTasksLabel.setText(count + \" Tasks\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayTasksLabel.setPadding(new Insets(0, 0, 0, 10));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                temp.getChildren().add(dayTasksLabel);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (tempDate.equals(localDate)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                p.setBackground(new Background("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.rgb(118, 156, 206), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(temp, dayOfWeek, j);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dayOfWeek++;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates calendar from previous month."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickPrevious() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (calendarMonth.getValue() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear - 1, Month.DECEMBER);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear, this.calendarMonth.minus(1));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates calendar for next month."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickNext() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (calendarMonth.getValue() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear + 1, Month.JANUARY);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear, this.calendarMonth.plus(1));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Home button. Generates calendar for current month."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickHome() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        generateCalendar(localDate.getYear(), localDate.getMonth());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates task list when clicked on cell."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param event mouse click event"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickDate(javafx.scene.input.MouseEvent event) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Node clickedNode \u003d event.getPickResult().getIntersectedNode();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (clickedNode !\u003d monthBox) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Node parent \u003d clickedNode.getParent();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            while (parent !\u003d monthBox) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                clickedNode \u003d parent;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                parent \u003d clickedNode.getParent();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Integer colIndex \u003d GridPane.getColumnIndex(clickedNode);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Integer rowIndex \u003d GridPane.getRowIndex(clickedNode);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int firstDayOfWeek \u003d LocalDate.of(calendarYear, calendarMonth, 1)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                .getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (firstDayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                firstDayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                rowIndex--;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int date \u003d rowIndex * 7 + colIndex - firstDayOfWeek + 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate clickedDate \u003d LocalDate.of(calendarYear, calendarMonth, date);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            viewTaskByDate(clickedDate);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * view task of a selected date"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param selectedDate selected date"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void viewTaskByDate(LocalDate selectedDate) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ObservableList\u003cTask\u003e taskByDay \u003d generateTaskList(selectedDate);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskListPanel taskByDayPanel \u003d new TaskListPanel(taskByDay);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonPanelTitle.setText(\"Task for \" + selectedDate.toString() + \" :\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(taskByDayPanel.getRoot());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param date date"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return list of task on the date"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e generateTaskList(LocalDate date) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UniqueTaskList taskByDay \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (taskDueDate.equals(date)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                taskByDay.add(task);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return taskByDay.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 1,
      "wyt-sonia": 21,
      "gx-huang": 216
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/DueSoonListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.card.DueSoonTaskCard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Panel containing the list of tasks Due Soon."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String FXML \u003d \"DueSoonListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ListView\u003cTask\u003e dueSoonListView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setItems(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code DueSoonTaskCard}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        protected void updateItem(Task task, boolean isEmpty) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            super.updateItem(task, isEmpty);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (isEmpty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(new DueSoonTaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 43,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/ModuleListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.card.ModCard;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ContentDisplay;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Tab;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * FXML switched to ModuleListPanel. Can show task under each module."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"ModuleListPanel.fxml\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e moduleObservableList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TabPane tabPane;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Tab overview;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ListView\u003cModule\u003e moduleListView;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList, ObservableList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleObservableList \u003d moduleList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        bindTabs(moduleList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleObservableList.addListener(new ListChangeListener\u003cModule\u003e() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Module\u003e c) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindTabs(moduleList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e c) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindTabs(moduleList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Bind tabs when tab list updated."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void bindTabs(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Tab overviewTab \u003d tabPane.getTabs().get(0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tabPane.getTabs().clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tabPane.getTabs().add(overviewTab);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleObservableList.forEach(x -\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            x.filterAndSetInternalTaskList(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            String tabName;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (x.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                tabName \u003d \"No Module Allocated\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                tabName \u003d x.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Tab newTab \u003d new Tab(tabName);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (!x.getInternalTaskList().isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                ListView\u003cTask\u003e taskListView \u003d new ListView\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                taskListView.setItems(x.getInternalTaskList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                taskListView.setCellFactory(listView -\u003e new TaskListPanel.TaskListViewCell());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                taskListView.setPrefHeight(600);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newTab.setContent(taskListView);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Label emptyLabel \u003d new Label(\"No task in this module\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setWrapText(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setContentDisplay(ContentDisplay.CENTER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setTextFill(Color.GRAY);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setFont(new Font(\"Arial\", 40));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                emptyLabel.setBackground(new Background("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.WHITE,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        new CornerRadii(0, 0, 10, 10, false),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        Insets.EMPTY)));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setPrefHeight(600);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                emptyLabel.prefWidthProperty().bind(tabPane.widthProperty());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newTab.setContent(emptyLabel);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tabPane.getTabs().add(newTab);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleListView.setItems(moduleList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Represents a ModuleListViewCell."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    class ModuleListViewCell extends ListCell\u003cModule\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         * Updates item."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         * @param module"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         * @param isEmpty"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        protected void updateItem(Module module, boolean isEmpty) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            super.updateItem(module, isEmpty);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isEmpty || module \u003d\u003d null || module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                ModCard modcard \u003d new ModCard(module, getIndex() + 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setGraphic(modcard.getRoot());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "aegis-bot": 86,
      "wyt-sonia": 46
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/ProductivityPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GoalObserver;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.StatsUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.control.ProgressIndicator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Productivity panel that displays usage statistics"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ProductivityPanel extends UiPart\u003cRegion\u003e implements GoalObserver {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String FXML \u003d \"ProductivityPanel.fxml\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ProductivityPanel.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ObservableList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label menuPointsLabel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TabPane productivityTabPane;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //daily"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label dailyStatsLabel;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label streakLabel;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ProgressIndicator progressIndicator;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Circle progressCentre;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Image grayStarImage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Image goldStarImage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView grayStarImageView;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView goldStarImageView;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //weekly"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private BarChart\u003cString, Integer\u003e weeklyBarChart;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label weeklyStatsLabel;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //score"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label ppLabel;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label rankLabel;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label nextRankLabel;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankZeroImageView;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankOneImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankTwoImageView;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankThreeImageView;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankFourImageView;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankFiveImageView;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankSixImageView;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private AreaChart\u003cString, Integer\u003e ppAreaChart;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ProgressIndicator rankProgressIndicator;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ProductivityPanel(ObservableList\u003cTask\u003e taskList, Label menuPointsLabel) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.menuPointsLabel \u003d menuPointsLabel;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generateProductivityPanel();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityTabPane.widthProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            productivityTabPane.setTabMinWidth(productivityTabPane.getWidth() / 3 - 40);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            productivityTabPane.setTabMaxWidth(productivityTabPane.getWidth() / 3 - 40);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                generateProductivityPanel();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics.setObserver(this);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ProductivityPanel.statistics \u003d statistics;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * generates the productivity page"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void generateProductivityPanel() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderDailyTab();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderWeeklyTab();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderScoreTab();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void selectTab(int tabNumber) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityTabPane.getSelectionModel().select(tabNumber);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the daily tab"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderDailyTab() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderDailyStats();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderProgressIndicator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderStreak();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the weekly tab"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderWeeklyTab() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderWeeklyStats();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderWeeklyBarChart();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the score tab"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderScoreTab() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderScore();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderRank();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderNextRank();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderRankIcon();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderAreaChart();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // daily"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * updates the daily tab when there are changes to daily goal"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void update() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderDailyTab();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the progress indicator"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderProgressIndicator() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskCompletedCount \u003d statistics.getCompleteCountToday();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int goal \u003d statistics.getGoal();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        double progress \u003d (double) taskCompletedCount / (double) goal;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (taskCompletedCount \u003e\u003d goal) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            goldStarImageView.setVisible(true);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            grayStarImageView.setVisible(false);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            statistics.completeDailyGoal();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        progressIndicator.setProgress(progress);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders daily stats"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderDailyStats() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskCompletedCount \u003d statistics.getCompleteCountToday();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int goal \u003d statistics.getGoal();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String completedString \u003d taskCompletedCount + \" / \" + goal + \" tasks\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        dailyStatsLabel.setText(completedString);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders user\u0027s streak"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderStreak() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int streak \u003d statistics.getStreak();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String streakString \u003d \"You\u0027ve completed your goal \" + streak + \" days in a row\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        streakLabel.setText(streakString);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //weekly"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders weekly stats"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderWeeklyStats() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int weeklyTaskCompleted \u003d statistics.getCompleteCountThisWeek();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int weeklyTaskOverdue \u003d statistics.getOverdueCountThisWeek();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String weeklyStatsString \u003d \"You have completed \" + weeklyTaskCompleted + \" tasks this week\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + weeklyTaskOverdue + \" tasks were Overdue\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyStatsLabel.setText(weeklyStatsString);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the weekly bar chart"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderWeeklyBarChart() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyBarChart.setTitle(\"Task completed in last 7 days\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e dayList \u003d StatsUtil.getDayList();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyCompleteCountList \u003d statistics.getWeeklyCompleteCountList();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!weeklyBarChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            weeklyBarChart.getData().clear();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e series \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e data \u003d new XYChart.Data\u003c\u003e(dayList.get(i), weeklyCompleteCountList.get(i));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            series.getData().add(data);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyBarChart.getData().add(series);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyBarChart.setLegendVisible(false);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // score"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the productivity points area chart"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderAreaChart() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppAreaChart.setTitle(\"Productivity Points Progression\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e dayList \u003d StatsUtil.getDayList();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyScores \u003d statistics.getWeeklyScores();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!ppAreaChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ppAreaChart.getData().clear();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e series \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e data \u003d new XYChart.Data\u003c\u003e(dayList.get(i), weeklyScores.get(i));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            series.getData().add(data);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppAreaChart.getData().add(series);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppAreaChart.setLegendVisible(false);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders score"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderScore() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int score \u003d statistics.getScoreToday();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String scoreString \u003d score + \" PP\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppLabel.setText(scoreString);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // set points on the menu label"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        menuPointsLabel.setText(scoreString);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the user\u0027s rank"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderRank() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankLabel.setText(statistics.getRank());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the rank icon"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderRankIcon() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleRankImageView(getRankNumberFromRank(statistics.getRank()));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int scoreDifference \u003d statistics.getScoreDifferenceForRank();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int scoreToNextRank \u003d statistics.getScoreToNextRank();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        double rankProgress \u003d (double) (scoreDifference - scoreToNextRank) / (double) scoreDifference;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankProgressIndicator.setProgress(rankProgress);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * returns a number corresponding to the rank"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param rank user\u0027s rank"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a number corresponding to the rank"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getRankNumberFromRank(String rank) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (rank) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Beginner\":"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Novice\":"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Apprentice\":"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Duke\":"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Expert\":"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Master\":"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the user\u0027s next rank"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderNextRank() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        nextRankLabel.setText(statistics.getNextRank());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * sets all rank ImageView to invisible except for one corresponding to rankNumber"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param rankNumber the rankNumber that should be set as visible"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void toggleRankImageView(int rankNumber) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        hideAllRankImageView();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (rankNumber) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankZeroImageView.setVisible(true);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankOneImageView.setVisible(true);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankTwoImageView.setVisible(true);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankThreeImageView.setVisible(true);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankFourImageView.setVisible(true);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankFiveImageView.setVisible(true);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankSixImageView.setVisible(true);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * hides all rank ImageViews"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void hideAllRankImageView() {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankZeroImageView.setVisible(false);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankOneImageView.setVisible(false);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankTwoImageView.setVisible(false);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankThreeImageView.setVisible(false);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankFourImageView.setVisible(false);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankFiveImageView.setVisible(false);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankSixImageView.setVisible(false);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 366,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/TaskListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.card.DetailedTaskCard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An UI component which represents the panel containing the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @@author wyt-sonia"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskListPanel.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskListPanel\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ListView\u003cTask\u003e taskListView;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" : Start to set up the Task List Panel.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListView.setItems(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" : End of setting up the Task List Panel.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code DetailedTaskCard}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        protected void updateItem(Task task, boolean isEmpty) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            super.updateItem(task, isEmpty);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isEmpty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                setGraphic(new DetailedTaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                //setGraphic(new DetailedTaskCard(task, getIndex()).getRoot());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "wyt-sonia": 37,
      "-": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/TaskSummaryPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.time.temporal.ChronoUnit.DAYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.PieChart;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.StackedBarChart;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An UI component which represents the panel containing the summary charts of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @@author wyt-sonia"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskSummaryPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"TaskSummaryPanel.fxml\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskSummaryPanel\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskSummaryPanel.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e tempTasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ObservableList\u003cTask\u003e selectedTasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane selectedTaskListPanelPlaceholder;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label selectedTaskListPanelTitle;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TabPane chartsTabPane;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private PieChart taskSummaryPieChart;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private AreaChart taskSummaryAreaChart;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackedBarChart taskSummaryStackedBarChart;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskSummaryPanel(ObservableList\u003cTask\u003e observableCurrentTasks,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            ObservableList\u003cTask\u003e observableArchivedTasks, ObservableList\u003cModule\u003e observableModules,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            StackPane selectedTaskListPanelPlaceholder,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            Label selectedTaskListPanelTitle) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // render nodes."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render charts from task summary panel.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.selectedTaskListPanelPlaceholder \u003d selectedTaskListPanelPlaceholder;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.selectedTaskListPanelTitle \u003d selectedTaskListPanelTitle;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        selectedTaskListPanelPlaceholder.setBackground("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderCharts();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        renderSelectedListPanel();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpOnChangeListener(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering charts from task summary panel.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Binds data and set up charts."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param observableCurrentTasks"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param observableArchivedTasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param observableModules"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void bindCharts(ObservableList\u003cTask\u003e observableCurrentTasks,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            ObservableList\u003cTask\u003e observableArchivedTasks, ObservableList\u003cModule\u003e observableModules) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to bind data to charts.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tempTasks !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tempTasks.clear();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        modules \u003d observableModules;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempTasks.addAll(observableCurrentTasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempTasks.addAll(observableArchivedTasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpPieChart();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpAreaChart();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setUpBarChart();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of binding data to charts.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders the selected task list panel accordingly."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void renderSelectedListPanel() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to render selected task list panel.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of rendering selected task list panel.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Renders the charts."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void renderCharts() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Pie chart"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPieChart.setTitle(\"Summary of Tasks\u0027 Status\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Area chart"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryAreaChart.setTitle(\"Summary of Module Related Tasks\u0027 Deadline/Start Date\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryAreaChart.getYAxis().setLabel(\"No of Tasks\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryAreaChart.getYAxis().setAutoRanging(true);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryAreaChart.getXAxis().setLabel(\"Deadline/Start Date\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Bar chart"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryStackedBarChart.setTitle(\"Summary of Module Related Tasks\u0027 Weight\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryStackedBarChart.getYAxis().setLabel(\"Weight %\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryStackedBarChart.getYAxis().setAutoRanging(false);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryStackedBarChart.getXAxis().setLabel(\"Modules\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the pie chart\u0027s pie chart and data."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The pie chart is used to show the summary of numbers of different tasks\u0027 statuses."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpPieChart() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" PieChart: Start to sets up the pie chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cPieChart.Data\u003e datas \u003d bindPieChartData();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPieChartOnClickListener(datas);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" PieChart: End of setting up the pie chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Binds the data for the stacked pie chart."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return an {@code ArrayList} of {@code ieChart.Data}."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ArrayList\u003cPieChart.Data\u003e bindPieChartData() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cPieChart.Data\u003e datas \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryPieChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryPieChart.getData().clear();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" PieChart: Start to bind data.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (TaskStatus ts : TaskStatus.getTaskStatusList()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            long count \u003d tempTasks.stream().filter(t -\u003e t.getTaskStatus().equals(ts)).count();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            PieChart.Data tempData \u003d new PieChart.Data(ts.convertToString(), count);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            datas.add(tempData);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryPieChart.getData().add(tempData);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // Enhance the label information."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPieChart.getData().forEach(data -\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.nameProperty().bind("
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Bindings.concat("
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    data.getName(), \" : \", data.pieValueProperty().longValue()"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                )"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            )"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        );"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" PieChart: End of binding bind data.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return datas;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the onClick listener for the stacked pie chart."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param datas"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setPieChartOnClickListener(ArrayList\u003cPieChart.Data\u003e datas) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" PieChart: Start to set up the pie chart\u0027s onclick action.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        datas.forEach(d -\u003e d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String statusName \u003d d.getName().split(\":\")[0].trim();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTasks \u003d tempTasks.filtered(task -\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.getTaskStatus().equals(TaskStatus.getStatus(statusName)));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelTitle.setText(d.getName().toUpperCase() + \" Tasks\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" PieChart: End of setting up the pie chart\u0027s onclick action.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the area chart\u0027s data and onclick action."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The area chart is used to show summary of the module related dues/start dates."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Restricted to the future half year."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpAreaChart() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" AreaChart: Start to set up the area chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        bindAreaChartData();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" AreaChart: End of setting up the area \""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the area chart\u0027s data."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void bindAreaChartData() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cXYChart.Series\u003cString, Number\u003e\u003e dataSeries \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryAreaChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryAreaChart.getData().clear();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e sortedTasks \u003d tempTasks.sorted(Comparator.comparing(t -\u003e t.getDateTimes()[0]));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!sortedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.info(LOG_TAG + \" AreaChart: Start to bind data.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // to restrict the source of data to the next 2 months"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDate startDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ObservableList\u003cTask\u003e filteredTasks \u003d sortedTasks"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                .filtered(task -\u003e task.getDateTimes()[0].isBefore(startDate.plusDays(2 * 30).atStartOfDay()));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDate endDate \u003d filteredTasks.get(filteredTasks.size() - 1).getDateTimes()[0].toLocalDate();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (DAYS.between(startDate, endDate) \u003e 30 * 2) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endDate \u003d startDate.plusMonths(2);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                taskSummaryAreaChart.getXAxis().setAutoRanging(true);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDate finalEndDate \u003d endDate;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            modules.forEach(m -\u003e {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                XYChart.Series\u003cString, Number\u003e dueDateDataSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                dueDateDataSeries.setName(getModuleTitleString(m));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                for (LocalDate d \u003d startDate; d.isBefore(finalEndDate.plusDays(1)); d \u003d d.plusDays(1)) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    LocalDate finalD \u003d d;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    long numOfTasksDue \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .filter(t -\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            t.getDateTimes()[0].toLocalDate().equals(finalD) \u0026\u0026 t.getModule().equals(m)).count();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    XYChart.Data\u003cString, Number\u003e tempData \u003d"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        new XYChart.Data\u003c\u003e(TimeParser.getDateString(d), numOfTasksDue);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    tempData.setExtraValue(m.getModuleCode());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dueDateDataSeries.getData().add(tempData);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    datas.add(tempData);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                dataSeries.add(dueDateDataSeries);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryAreaChart.getData().addAll(dataSeries);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.info(LOG_TAG + \" AreaChart: End of binding data.\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // set up the on click listener"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            setAreaChartOnClickListenerForDataArea(datas);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            setAreaChartOnClickListenerForDataPoint(dataSeries);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the onClick listener for the area chart\u0027s data area."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param datas"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setAreaChartOnClickListenerForDataArea(ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" AreaChart: Start to set up the on click action for each data area.\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        datas.forEach(d -\u003e d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String moduleCode \u003d d.getExtraValue().toString();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String dateString \u003d d.getXValue();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDate date \u003d TimeParser.parseDate(dateString);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTasks \u003d tempTasks.filtered(task -\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.getModule().getModuleCode().toString().equals(moduleCode)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u0026\u0026 task.getDateTimes()[0].toLocalDate().isEqual(date));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (moduleCode.equals(new EmptyModule().getModuleCode().toString())) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks due/start on \" + dateString);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks of \" + moduleCode + \" due/start on \" + dateString);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" AreaChart: End of setting up the on click action for each data area.\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the onClick listener for the area chart\u0027s data points."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param dataSeries"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setAreaChartOnClickListenerForDataPoint(ArrayList\u003cXYChart.Series\u003cString, Number\u003e\u003e dataSeries) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" AreaChart: Start to set up the on click action for each data point.\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dataSeries.forEach(d -\u003e d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String moduleCode \u003d d.getName().equals(\"Not Module Related\")"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                ? new EmptyModule().getModuleCode().toString() : d.getName();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTasks \u003d tempTasks.filtered(task -\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.getModule().getModuleCode().toString().equals(moduleCode));"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (moduleCode.equals(new EmptyModule().getModuleCode().toString())) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks without related module\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks under \" + moduleCode);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" AreaChart: End of setting up the on click action for each data point.\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the stacked bar chart\u0027s data and onclick action."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The bar chart is used to show the summary of module related weight status of different task types."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpBarChart() {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" BarChart: Start to set up the stacked bar chart\u0027s \""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"data and onclick action.\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas \u003d bindBarChartData();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setBarChartOnClickListener(datas);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" BarChart: End of setting up the stacked bar chart\u0027s\""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \" data and onclick action.\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Binds the data for the stacked bar chart."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return an {@code ArrayList} of {@code XYChart.Series\u003cString, Number\u003e}."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e bindBarChartData() {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskSummaryStackedBarChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskSummaryStackedBarChart.getData().clear();"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cXYChart.Series\u003cString, Number\u003e\u003e dataSeries \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" BarChart: Start to bind data.\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (TaskType taskType : Arrays.asList(TaskType.getTaskTypes())) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            XYChart.Series\u003cString, Number\u003e weightDataSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            weightDataSeries.setName(taskType.toString());"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            modules.forEach(m -\u003e {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                ObservableList\u003cTask\u003e filteredTasks \u003d tempTasks"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filtered(t -\u003e t.getModule().equals(m) \u0026\u0026 t.getTaskType().equals(taskType));"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                XYChart.Data\u003cString, Number\u003e tempData \u003d new XYChart.Data\u003c\u003e(getModuleTitleString(m),"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    filteredTasks.stream().mapToDouble(Task::getWeight).sum());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tempData.setExtraValue(m.getModuleCode().toString() + \"//\" + taskType.toString());"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                weightDataSeries.getData().add(tempData);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                datas.add(tempData);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dataSeries.add(weightDataSeries);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryStackedBarChart.getData().addAll(dataSeries);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" BarChart: End of binding data.\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return datas;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the onClick listener for the stacked bar chart."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param datas"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setBarChartOnClickListener(ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" BarChart: Start to setting up the on click action for each data area\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        datas.forEach(d -\u003e {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String moduleCode \u003d (d.getExtraValue().toString().split(\"//\"))[0];"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String taskType \u003d (d.getExtraValue().toString().split(\"//\"))[1];"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTasks \u003d tempTasks"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filtered(task -\u003e task.getModule().getModuleCode().toString().equals(moduleCode)"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u0026\u0026 task.getTaskType().toString().equals(taskType));"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelTitle.setText(taskType + \" under \" + moduleCode);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            });"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \" BarChart: End of setting up the on click action for each data area\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets up the onClick listeners for {@code observableCurrentTasks}, {@code observableArchivedTasks}"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * and {@code observableModules}."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param observableCurrentTasks"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param observableArchivedTasks"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param observableModules"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void setUpOnChangeListener(ObservableList\u003cTask\u003e observableCurrentTasks,"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       ObservableList\u003cTask\u003e observableArchivedTasks,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                       ObservableList\u003cModule\u003e observableModules) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": Start to set onchange listener for data source.\");"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        observableCurrentTasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                renderCharts();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        observableArchivedTasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e c) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                renderCharts();"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        observableModules.addListener(new ListChangeListener\u003cModule\u003e() {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Module\u003e c) {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                renderCharts();"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(LOG_TAG + \": End of setting onchange listener for data source.\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String getModuleTitleString(Module module) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String moduleTitleString \u003d \"\";"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            moduleTitleString \u003d \"Not Module Related\";"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            moduleTitleString \u003d module.getModuleCode().toString();"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return moduleTitleString;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 2,
      "wyt-sonia": 461
    }
  },
  {
    "path": "src/main/resources/view/CalendarPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003cVBox styleClass\u003d\"calender_panel\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cHBox alignment\u003d\"CENTER\" minHeight\u003d\"40.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003cButton fx:id\u003d\"prev\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickPrevious\" styleClass\u003d\"calender_btn\" text\u003d\"Previous\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003cLabel fx:id\u003d\"month\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"42.0\" styleClass\u003d\"calender_lbl_lg\" text\u003d\"Month\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"year\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"42.0\" styleClass\u003d\"calender_lbl_lg\" text\u003d\"Year\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton fx:id\u003d\"next\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickNext\" styleClass\u003d\"calender_btn\" text\u003d\"Next\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003cButton contentDisplay\u003d\"RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickHome\" styleClass\u003d\"calender_btn\" text\u003d\"Current Month\" GridPane.columnIndex\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"20.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cGridPane prefHeight\u003d\"30.0\" prefWidth\u003d\"790.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"15.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"SUN\" GridPane.columnIndex\u003d\"0\" GridPane.halignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"MON\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"TUE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"WED\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"THU\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"FRI\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"SAT\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    \u003cGridPane fx:id\u003d\"monthBox\" hgap\u003d\"5.0\" onMouseClicked\u003d\"#onClickDate\" prefHeight\u003d\"375\" prefWidth\u003d\"790.0\" vgap\u003d\"5.0\" BorderPane.alignment\u003d\"CENTER\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 12,
      "wyt-sonia": 55,
      "gx-huang": 35
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"40.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "               promptText\u003d\"Please enter your command here...\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TextField\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/DetailedTaskCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox fx:id\u003d\"detailedCardPane\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"module\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Module\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"estimatedTimeCost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$estimatedTimeCost\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"description\" wrapText\u003d\"true\" alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"700\" HBox.hgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 88
    }
  },
  {
    "path": "src/main/resources/view/DueSoonListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"dueSoonListView\"  maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/resources/view/DueSoonTaskCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"100\" HBox.hgrow\u003d\"ALWAYS\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"weightAndModule\" styleClass\u003d\"module_lbl\" text\u003d\"\\$timeLeft\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"timeLeft\" styleClass\u003d\"due_soon_status\" text\u003d\"\\$timeLeft\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 60
    }
  },
  {
    "path": "src/main/resources/view/FeedbackDisplayBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "           xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cPane maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cHBox fx:id\u003d\"resultPane\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  prefWidth\u003d\"${resultPane.parent.width}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                              maxHeight\u003d\"150.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cImageView fitHeight\u003d\"120.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                               HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cimage\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cImage url\u003d\"@../images/SB.png\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/image\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/Pane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13,
      "wyt-sonia": 16,
      "-": 3
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"550\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Study Buddy\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cImage url\u003d\"@/images/study_buddy.png\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cURL value\u003d\"@StudyBuddyTheme.css\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cURL value\u003d\"@ProgressIndicator.css\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cVBox id\u003d\"mainContainer\" maxWidth\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cHBox VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      \u003cMenuBar fx:id\u003d\"menuBar\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"StudyBuddy\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"allTaskMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowAllTasks\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"All Tasks\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"archiveMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowArchivedTasks\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Archived Tasks\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Modules\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowModules\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Show Modules\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"helpMenuItem1\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCreateMod\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Create\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"helpMenuItem11\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEditMod\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Edit\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cgraphic\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                  \u003cLabel fx:id\u003d\"taskSummaryEntry\" onMouseClicked\u003d\"#handleShowTaskSummary\" text\u003d\"Statistics\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/graphic\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"statisticsMenuItem\" visible\u003d\"false\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowTaskSummary\"\u003e \u003c/MenuItem\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cgraphic\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                  \u003cLabel fx:id\u003d\"CalendarLabel\" onMouseClicked\u003d\"#handleShowCalendar\" text\u003d\"Calendar\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/graphic\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"calendarMenuItem\" visible\u003d\"false\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowCalendar\"\u003e \u003c/MenuItem\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cgraphic\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"ProductivityMenuLabel\" onMouseClicked\u003d\"#handleShowProductivityDaily\" text\u003d\"Productivity\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/graphic\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"productivityMenuItem\" visible\u003d\"false\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowProductivityDaily\"\u003e \u003c/MenuItem\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cRegion fx:id\u003d\"menuSpacer\" prefHeight\u003d\"0.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"menu-bar\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cMenuBar fx:id\u003d\"menuBar1\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003cmenus\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cgraphic\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cLabel fx:id\u003d\"menuPointsLabel\" onMouseClicked\u003d\"#handleShowProductivityPoints\" text\u003d\"Productivity: 10 PP\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/graphic\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/Menu\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003c/menus\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cPane fx:id\u003d\"mainTitleHolder\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"530.0\" prefWidth\u003d\"${mainTitleHolder.parent.width}\" style\u003d\"-fx-background-color: rgba(255, 255, 255, 0.9); -fx-background-radius: 10;\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cLabel fx:id\u003d\"mainTitle\" alignment\u003d\"CENTER\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"540.0\" prefWidth\u003d\"${mainTitleHolder.parent.width}\" style\u003d\"-fx-text-fill: rgba(123, 87, 69, 1);\" styleClass\u003d\"app_brand\" text\u003d\"Study Buddy\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Pane\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cHBox fx:id\u003d\"taskListHolder\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cVBox fx:id\u003d\"taskList\" maxHeight\u003d\"560.0\" maxWidth\u003d\"1200\" minWidth\u003d\"340\" prefHeight\u003d\"300.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cPane fx:id\u003d\"taskListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" style\u003d\"-fx-background-color: rgba(256,256,256,1); -fx-background-radius: 10 10 0 0;\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cLabel fx:id\u003d\"taskListPanelTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${taskListPanelTitleHolder.width}\" styleClass\u003d\"sub_header\" text\u003d\"All Tasks\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefWidth\u003d\"700.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"taskSummaryHolder\" prefWidth\u003d\"700.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cVBox fx:id\u003d\"dueSoonList\" maxHeight\u003d\"560.0\" minWidth\u003d\"200\" prefWidth\u003d\"600\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cPane fx:id\u003d\"dueListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${dueListPanelTitleHolder.parent.width}\" style\u003d\"-fx-background-color: rgba(256,256,256,1); -fx-background-radius: 10 10 0 0;\"\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cLabel fx:id\u003d\"dueListPanelTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" ellipsisString\u003d\"\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${dueListPanelTitleHolder.width}\" styleClass\u003d\"sub_header\" text\u003d\"Tasks Due Soon\" textAlignment\u003d\"CENTER\" textOverrun\u003d\"CLIP\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"dueSoonListPanelPlaceholder\" prefWidth\u003d\"${mainTitle.parent.width}\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      \u003cStackPane fx:id\u003d\"productivityPanelHolder\" prefHeight\u003d\"276.0\" prefWidth\u003d\"582.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003c/VBox.margin\u003e\u003c/StackPane\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cStackPane fx:id\u003d\"modulePaneHolder\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cInsets left\u003d\"11.0\" right\u003d\"11.0\" top\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cVBox\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"120.0\" prefHeight\u003d\"200.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"40.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 37,
      "souwmyaa": 4,
      "aegis-bot": 36,
      "wyt-sonia": 48,
      "-": 32,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/resources/view/ModCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"76.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      prefWidth\u003d\"304.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cFlowPane alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel fx:id\u003d\"moduleName\" alignment\u003d\"TOP_LEFT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"31.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                       text\u003d\"\\$moduleName\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cFont size\u003d\"18.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cLabel fx:id\u003d\"moduleCode\" prefHeight\u003d\"37.0\" prefWidth\u003d\"304.0\" text\u003d\"\\\\$moduleCode\" textFill\u003d\"#686868\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" top\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 21,
      "aegis-bot": 4,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/resources/view/ModuleListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox maxHeight\u003d\"490.0\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"1400\" fillWidth\u003d\"true\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cTabPane fx:id\u003d\"tabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003ctabs\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cTab fx:id\u003d\"overview\" text\u003d\"Overview\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cListView fx:id\u003d\"moduleListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/tabs\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 24
    }
  },
  {
    "path": "src/main/resources/view/ProductivityPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.AreaChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.BarChart?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.ProgressIndicator?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cHBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cTabPane fx:id\u003d\"productivityTabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "              \u003ctabs\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cTab text\u003d\"Daily\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003ccontent\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cVBox prefHeight\u003d\"294.0\" prefWidth\u003d\"603.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"365.0\" prefWidth\u003d\"289.0\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"147.0\" prefWidth\u003d\"130.0\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cProgressIndicator fx:id\u003d\"progressIndicator\" layoutY\u003d\"0.20000000298023224\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"147.0\" prefWidth\u003d\"130.0\" progress\u003d\"0.0\" styleClass\u003d\"u-gold-progress\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cCircle fx:id\u003d\"progressCentre\" blendMode\u003d\"SRC_ATOP\" fill\u003d\"WHITE\" layoutX\u003d\"65.0\" layoutY\u003d\"64.3\" radius\u003d\"60.0\" stroke\u003d\"#c9c3b6\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                       \u003cImageView fx:id\u003d\"goldStarImageView\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" layoutX\u003d\"41.599998474121094\" layoutY\u003d\"38.59999389946461\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                           \u003cimage\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                               \u003cImage fx:id\u003d\"goldStarImage\" url\u003d\"@../images/rank/gold_star.png\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                           \u003c/image\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                       \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cImageView fx:id\u003d\"grayStarImageView\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" layoutX\u003d\"40.0\" layoutY\u003d\"38.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                          \u003cimage\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                              \u003cImage fx:id\u003d\"grayStarImage\" url\u003d\"@../images/rank/gray_star.png\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                          \u003c/image\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Pane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/HBox\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"preDailyStatsLabel\" text\u003d\"Daily goal: \"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"dailyStatsLabel\" text\u003d\"0 / 5 tasks \"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cpadding\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cInsets left\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/padding\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/HBox\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cVBox\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"streakLabel1\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Daily Streak\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"streakLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"You have completed your goal 0 days in a row.\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets bottom\u003d\"10.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/HBox\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003c/content\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cTab text\u003d\"Weekly\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003ccontent\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cHBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"150.0\" prefWidth\u003d\"500.0\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"51.0\" prefWidth\u003d\"242.0\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"weeklyStatsLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"46.0\" prefWidth\u003d\"242.0\" text\u003d\"You have completed 12 tasks this week\"\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets /\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cRegion VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"260.0\"\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cBarChart fx:id\u003d\"weeklyBarChart\" maxHeight\u003d\"225.0\"\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003cxAxis\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                              \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003cyAxis\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                              \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cpadding\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/padding\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/BarChart\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets /\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets /\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/VBox\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003c/content\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003c/Tab\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cTab text\u003d\"Productivity Points\"\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cHBox\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"preRankLabel\" text\u003d\"You are a\"\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"rankLabel\" text\u003d\"Beginner\"\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cpadding\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cInsets left\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/padding\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"prePointsLabel\" text\u003d\"You have\"\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"ppLabel\" text\u003d\"0 PP\"\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cpadding\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cInsets left\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/padding\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"nextRankLabel\" text\u003d\"20 PP more to become a Novice\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cpadding\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/padding\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cProgressIndicator fx:id\u003d\"rankProgressIndicator\" layoutY\u003d\"2.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"100.0\" progress\u003d\"0.0\" styleClass\u003d\"u-red-progress\" /\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cCircle fx:id\u003d\"progressCentre1\" fill\u003d\"#ffffff00\" layoutX\u003d\"50.20000076293945\" layoutY\u003d\"43.0\" radius\u003d\"43.0\" stroke\u003d\"#9c3d01\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankZeroImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankZeroImage\" url\u003d\"@../images/rank/rank0.png\" /\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankOneImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankOneImage\" url\u003d\"@../images/rank/rank1.png\" /\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankTwoImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankTwoImage\" url\u003d\"@../images/rank/rank2.png\" /\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankThreeImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cimage\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cImage fx:id\u003d\"rankThreeImage\" url\u003d\"@../images/rank/rank3.png\" /\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/image\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankFourImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankFourImage\" url\u003d\"@../images/rank/rank4.png\" /\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankFiveImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankFiveImage\" url\u003d\"@../images/rank/rank5.png\" /\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankSixImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankSixImage\" url\u003d\"@../images/rank/rank6.png\" /\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/Pane\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cpadding\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets bottom\u003d\"35.0\" top\u003d\"35.0\" /\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/padding\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cInsets /\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/HBox\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cRegion VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"260.0\"\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cAreaChart fx:id\u003d\"ppAreaChart\" maxHeight\u003d\"225.0\" prefWidth\u003d\"500.0\"\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003cxAxis\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                        \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003cyAxis\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                        \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cpadding\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/padding\u003e"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cInsets /\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/HBox\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "teikjun"
        },
        "content": "              \u003c/tabs\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 308
    }
  },
  {
    "path": "src/main/resources/view/StatusBarFooter.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/resources/view/TaskCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"module\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Module\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 48
    }
  },
  {
    "path": "src/main/resources/view/TaskListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/TaskSummaryPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.AreaChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.PieChart?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.StackedBarChart?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox maxHeight\u003d\"490.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTabPane fx:id\u003d\"chartsTabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003ctabs\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Task Status\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cPieChart fx:id\u003d\"taskSummaryPieChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                     \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003c/padding\u003e\u003c/PieChart\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Module Related Tasks\u0027 Deadline/Start Date \"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cAreaChart fx:id\u003d\"taskSummaryAreaChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                     \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Module Related Task Weight\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackedBarChart fx:id\u003d\"taskSummaryStackedBarChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                     \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackedBarChart\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/tabs\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 55
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/AppParametersTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParametersTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ParametersStub parametersStub \u003d new ParametersStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AppParameters expected \u003d new AppParameters();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void parseValidConfigPathSuccess() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", \"config.json\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        expected.setConfigPath(Paths.get(\"config.json\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void parseNullConfigPathSuccess() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void parseInvalidConfigPathSuccess() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", \"a\\0\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        expected.setConfigPath(null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class ParametersStub extends Application.Parameters {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cString\u003e getRaw() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"should not be called\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cString\u003e getUnnamed() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"should not be called\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public Map\u003cString, String\u003e getNamed() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return Collections.unmodifiableMap(namedParameters);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 3,
      "-": 54
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/ConfigTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void toStringDefaultObjectStringReturned() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String defaultConfigAsString \u003d \"Current log level : INFO\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Preference file Location : preferences.json\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(defaultConfigAsString, new Config().toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equalsMethod() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Config defaultConfig \u003d new Config();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(defaultConfig);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(defaultConfig.equals(defaultConfig));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 1,
      "-": 25
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/VersionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class VersionTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionParsingAcceptableVersionString_parsedVersionCorrectly() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionParsingWrongVersionString_throwIllegalArgumentException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionConstructorCorrectParameterValueAsExpected() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(19, 10, 20, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(19, version.getMajor());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(10, version.getMinor());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(20, version.getPatch());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(true, version.isEarlyAccess());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionToStringValidVersionCorrectStringRepresentation() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // boundary at 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V0.0.0ea\", version.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        // normal values"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(4, 10, 5, false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V4.10.5\", version.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // big numbers"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(100, 100, 100, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V100.100.100ea\", version.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionComparableValidVersionCompareToIsCorrect() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Version one;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Version another;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests equality"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003d\u003d 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(11, 12, 13, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(11, 12, 13, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003d\u003d 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different patch"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 5, false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different minor"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 5, 0, false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different major"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(10, 0, 0, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests high major vs low minor"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(10, 0, 0, true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 1, 0, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests high patch vs low minor"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 10, false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 1, 0, false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests same major minor different patch"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, false);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access vs not early access on same version number"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access lower version vs not early access higher version compare by version number first"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, false);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access higher version vs not early access lower version compare by version number first"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionComparableValidVersionHashCodeIsCorrect() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(100, 100, 100, true);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(100100100, version.hashCode());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(10, 10, 10, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1010010010, version.hashCode());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void versionComparableValidVersionEqualIsCorrect() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Version one;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Version another;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.equals(another));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(100, 191, 275, true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(100, 191, 275, true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.equals(another));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private void verifyVersionParsedCorrectly(String versionString,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                                              int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 7,
      "-": 126
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/index/IndexTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class IndexTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createOneBasedIndex() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid index"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        // check equality using the same base"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Index.fromOneBased(1).getOneBased());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, Index.fromOneBased(5).getOneBased());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // convert from one-based index to zero-based index"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Index.fromOneBased(1).getZeroBased());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(4, Index.fromOneBased(5).getZeroBased());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createZeroBasedIndex() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid index"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // check equality using the same base"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Index.fromZeroBased(0).getZeroBased());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, Index.fromZeroBased(5).getZeroBased());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        // convert from zero-based index to one-based index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Index.fromZeroBased(0).getOneBased());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(6, Index.fromZeroBased(5).getOneBased());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        final Index fifthTaskIndex \u003d Index.fromOneBased(5);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(fifthTaskIndex, Index.fromOneBased(5));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(fifthTaskIndex, Index.fromZeroBased(4));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(fifthTaskIndex, fifthTaskIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(fifthTaskIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(fifthTaskIndex.equals(5.0f));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(fifthTaskIndex, Index.fromOneBased(1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 9,
      "-": 50
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/AppUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtilTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void getImageExitingImage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(AppUtil.getImage(\"/images/study_buddy.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void getImageNullGivenThrowsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void checkArgumentTrueNothingHappens() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void checkArgumentFalseWithoutErrorMessageThrowsIllegalArgumentException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void checkArgumentFalseWithErrorMessageThrowsIllegalArgumentException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String errorMessage \u003d \"error message\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "aegis-bot": 5,
      "-": 28
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/CollectionUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtilTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void requireAllNonNullVarargs() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // no arguments"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // any non-empty argument list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(new Object(), new Object());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(\"test\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with just one null at the beginning"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Object) null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(null, \"\", new Object());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(null, new Object(), new Object());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with nulls in the middle"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(\"\", null, new Object());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with one null as the last argument"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(\"\", new Object(), null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(new Object(), new Object(), null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // null reference"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Object[]) null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside lists in the argument list are not considered"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(containingNull, new Object());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void requireAllNonNullCollection() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls in the front"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList((Object) null));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls in the middle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls at the end"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // null reference"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Collections.emptyList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // list with all non-null elements"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside nested lists are not considered"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isAnyNonNull() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull((Object) null));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CollectionUtil.isAnyNonNull(new Object()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code objects} or any element of {@code objects} is null."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionThrown(Object... objects) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code collection} or any element of {@code collection} is null."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionNotThrown(Object... objects) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(objects);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(collection);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "-": 101
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/ConfigUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigUtilTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path tempDir;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readNullThrowsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e read(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readMissingFileEmptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(read(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readNotJsonFormatExceptionThrown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readFileInOrderSuccessfullyRead() throws DataConversionException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Config expected \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"TypicalConfig.json\").get();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readValuesMissingFromFileDefaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"EmptyConfig.json\").get();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new Config(), actual);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readExtraValuesInFileExtraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Config expected \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"ExtraValuesConfig.json\").get();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private Config getTypicalConfig() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Config config \u003d new Config();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setLogLevel(Level.INFO);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return config;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return ConfigUtil.readConfig(configFilePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void saveNullConfigThrowsNullPointerException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void saveNullFileThrowsNullPointerException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void saveConfigAllInOrderSuccess() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Config original \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(original, configFilePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setLogLevel(Level.FINE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(original, configFilePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d ConfigUtil.readConfig(configFilePath).get();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void save(Config config, String configFileInTestDataFolder) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(config, configFilePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return configFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "aegis-bot": 9,
      "-": 103
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/FileUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtilTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isValidPath() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        // valid path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid path"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(FileUtil.isValidPath(\"a\\0\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // null path -\u003e throws NullPointerException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 21
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/JsonUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.SerializableTestClass;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TestUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Tests JSON Read and Write"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtilTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void serializeObjectToJsonFileNoExceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        serializableTestClass.setTestValues();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void deserializeObjectFromJsonFileNoExceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        SerializableTestClass serializableTestClass \u003d JsonUtil"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "aegis-bot": 2,
      "-": 40
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/StringUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtilTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isNonZeroUnsignedInteger() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: empty strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: not a number"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: zero"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: zero as prefix"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: signed numbers"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: numbers with white space"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: number larger than Integer.MAX_VALUE"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: valid numbers, should return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for containsWordIgnoreCase --------------------------------------"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Invalid equivalence partitions for word: null, empty, multiple words"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Invalid equivalence partitions for sentence: null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * The four test cases below test one invalid input at a time."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsWordIgnoreCaseNullWordThrowsNullPointerException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.isContainsWordIgnoreCase(\"typical sentence\", null));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsWordIgnoreCaseEmptyWordThrowsIllegalArgumentException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            -\u003e StringUtil.isContainsWordIgnoreCase(\"typical sentence\", \"  \"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsWordIgnoreCaseMultipleWordsThrowsIllegalArgumentException() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            -\u003e StringUtil.isContainsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsWordIgnoreCaseNullSentenceThrowsNullPointerException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.isContainsWordIgnoreCase(null, \"abc\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Valid equivalence partitions for word:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - any word"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - word containing symbols/numbers"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - word with leading/trailing spaces"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Valid equivalence partitions for sentence:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - empty string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - one word"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - multiple words"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - sentence with extra spaces"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Possible scenarios returning true:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - matches first word in sentence"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - last word in sentence"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - middle word in sentence"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - matches multiple words"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Possible scenarios returning false:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - query word matches part of a sentence word"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - sentence word matches part of the query word"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * The test method below tries to verify all above with a reasonably low number of test cases."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsWordIgnoreCaseValidInputsCorrectResult() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // Empty sentence"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(StringUtil.isContainsWordIgnoreCase(\"\", \"abc\")); // Boundary case"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(StringUtil.isContainsWordIgnoreCase(\"    \", \"123\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches a partial word only"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(StringUtil.isContainsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches word in the sentence, different upper/lower case letters"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches multiple words in sentence"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for getDetails --------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Equivalence Partitions: null, valid throwable object"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void getDetailsExceptionGiven() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            .contains(\"java.io.FileNotFoundException: file not found\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void getDetailsNullGivenThrowsNullPointerException() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 7,
      "wyt-sonia": 14,
      "-": 120
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/CommandResultTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResultTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(commandResult, new CommandResult(\"feedback\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(commandResult, new CommandResult(\"feedback\", false, false));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(commandResult, commandResult);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(commandResult);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(0.5f));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(commandResult, new CommandResult(\"different\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(commandResult, new CommandResult(\"feedback\", true, false));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(commandResult, new CommandResult(\"feedback\", false, true));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hashcode() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns same hashcode"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 8,
      "-": 45
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/CommandTestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_NAME_ONE \u003d \"Project meeting\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_NAME_TWO \u003d \"Job application\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_TYPE_THREE \u003d \"Assignment\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_TYPE_FOUR \u003d \"Quiz\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DESCRIPTION_ONE \u003d \"Project\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DESCRIPTION_TWO \u003d \"Final draft of Project\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_MODULE_ONE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_MODULE_TWO \u003d \"CS2101\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DATE_ONE \u003d \"17:00 28/04/2060\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DATE_TWO \u003d \"00:00 29/06/2040- 13:00 30/06/2040\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String INVALID_DATE_ONE \u003d \"12/12/12\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (CommandException | ParseException ce) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the study buddy, filtered task list and selected task in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy expectedStudyBuddy \u003d new StudyBuddy(actualModel.getStudyBuddy());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedStudyBuddy, actualModel.getStudyBuddy());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 71
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/add/AddTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void execute_taskAcceptedByModelAddSuccessful() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task validTask \u003d new TaskBuilder().build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task1 \u003d new TaskBuilder().withName(\"ass1\").build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task2 \u003d new TaskBuilder().withName(\"ass2\").build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1command \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add2command \u003d new AddTaskCommand(task2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same object -\u003e returns true"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(add1command.equals(add1command));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same values -\u003e returns true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1copycommand \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(add1command.equals(add1copycommand));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //different types -\u003e reutrns false"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(add1command.equals(1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //null -\u003e returns false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(add1command \u003d\u003d null);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //diff task -\u003e returns false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(add1command.equals(add2command));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTaskDescription(Task target, String newTaskDescription) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTaskWeight(Task target, double newTaskWeight) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTaskTimeCost(Task target, double newTaskTimeCost) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void setStudyBuddy(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void clearDueSoonList(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void unarchiveTask(Task task) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void unarchiveDuplicateTask(Task target) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addTaskToMainList(Task target) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deleteTaskFromMainList(Task target) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void forceAddDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void addDuplicateTask(Task task, Task originalTask) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void sortDueSoonTasks(){}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addMod(Module mod) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void changeModName(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void changeModCode(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void deleteMod(Module mod) throws ModuleException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void completeTask(Task task) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void setTaskMod(Task target, Module mod) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void deleteDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * A Model stub that contains a single task."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        private final Task task;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModelStubWithTask(Task task) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.task.isSameTask(task);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * A Model stub that always accept the task being added."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private class ModelStubAcceptingTaskAdded extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            tasksAdded.add(task);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new StudyBuddy();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return tasksAdded.stream().anyMatch(task::isSameTask);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 35,
      "souwmyaa": 45,
      "aegis-bot": 63,
      "wyt-sonia": 19,
      "-": 10,
      "gx-huang": 155
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/add/CreateModCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module moduleA \u003d new Module(\"A\", \"CS1111\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module moduleB \u003d new Module(\"B\", \"CS2222\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addDuplicateModuleThrowsCommandException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Assertions.assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addDuplicateModuleCorrectExceptionMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String expectedMessage \u003d CreateModCommand.MESSAGE_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            assertEquals(expectedMessage, ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addModuleSuccess() throws CommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String expectedMessage \u003d String.format(CreateModCommand.MESSAGE_SUCCESS, moduleB);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(moduleB);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(createModCommand.execute(model).getFeedbackToUser(), expectedMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void equalCreateModCommand() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand1 \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand2 \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand3 \u003d new CreateModCommand(moduleB);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(createModCommand1.equals(createModCommand2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(createModCommand1.equals(createModCommand3));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 62
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/delete/ClearTasksCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for ClearTasksCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void executeEmptyStudyBuddySuccess() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, Messages.MESSAGE_CLEAR_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void executeNonEmptyStudyBuddySuccess() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.setStudyBuddy(new StudyBuddy());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, Messages.MESSAGE_CLEAR_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 32
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/delete/DeleteTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DeleteTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeValidUnfilteredListSuccess() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand atCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeInvalidIndexUnfilteredListThrowsCommandException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeValidIndexFilteredListSuccess() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(deleteFirstCommand \u003d\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 11,
      "aegis-bot": 11,
      "gx-huang": 46
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/ArchiveTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class ArchiveTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeValidIndexUnfilteredListSuccess() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeInvalidIndexUnfilteredListThrowsCommandException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveCommand \u003d new ArchiveTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeValidIndexFilteredListSuccess() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveSecondCommand \u003d new ArchiveTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommandCopy \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommandCopy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(archiveFirstCommand \u003d\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(archiveSecondCommand));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 9,
      "aegis-bot": 11,
      "gx-huang": 49
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/EditModCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms.CHANGE_MOD_CODE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms.CHANGE_MOD_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms.DELETE_MOD;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.logic.interactiveprompt.InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.CreateModCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EditModCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createCommandWithEmptyFirstModThrowNullPointerException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ) -\u003e new EditModCommand(null, new EmptyModule(), CHANGE_MOD_NAME));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createCommandWithEmptySecondModThrowNullPointerException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ) -\u003e new EditModCommand(new EmptyModule(), null, CHANGE_MOD_NAME));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeNonExistentModReturnReply() throws CommandException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS2111\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name\", \"CS1111\"), null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(\"Module does not exist in Study Buddy!\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                editModCommand.execute(model).getFeedbackToUser());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeInvalidTermReturnReply() throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"\", \"CS1231\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"\", \"CS1231\"),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"new name\", \"CS1231\"), INIT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Did nothing! from EditModCommand.\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                editModCommand.execute(model));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executionChangeModuleNameSuccess() throws CommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"name\", \"CS1231\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS1231\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"new name\", \"CS1231\"), CHANGE_MOD_NAME);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Module name Change successful!\"), editModCommand.execute(model));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(1, model.getFilteredModuleList()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModuleName().equals(\"new name\")).size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executionChangeModuleCodeSuccess() throws CommandException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"name\", \"CS1231\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS1231\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name\", \"CS0000\"), CHANGE_MOD_CODE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Module code change successful!\"), editModCommand.execute(model));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(1, model.getFilteredModuleList()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModuleCode().equals(\"CS0000\")).size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executionDeleteModSuccess() throws CommandException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"name\", \"CS1231\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS1231\"),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name\", \"CS1231\"), DELETE_MOD);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Module deleted!\"),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    editModCommand.execute(model));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(0, model.getFilteredModuleList()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModuleCode().equals(\"CS1231\")).size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeDuplicateModThrowCommandException() throws CommandException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand1 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name1\", \"CS1231\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand2 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name2\", \"CS2040\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand1.execute(model);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand2.execute(model);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name1\", \"CS1231\"),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name2\", \"CS1231\"), CHANGE_MOD_NAME);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e editModCommand.execute(model));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeDuplicateCodeThrowCommandException() throws CommandException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand1 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name1\", \"CS1231\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand2 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name2\", \"CS2040\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand1.execute(model);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand2.execute(model);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name1\", \"CS1231\"),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name1\", \"CS2040\"), CHANGE_MOD_CODE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e editModCommand.execute(model));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 120,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/UnarchiveTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class UnarchiveTaskCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeValidIndexUnfilteredListSuccess() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredArchivedTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand atCommand \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(UnarchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.unarchiveTask(taskToArchive);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeInvalidIndexUnfilteredListThrowsCommandException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveCommand \u003d new UnarchiveTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeValidIndexFilteredListSuccess() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredArchivedTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand atCommand \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(UnarchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.unarchiveTask(taskToArchive);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveFirstCommand \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveSecondCommand \u003d new UnarchiveTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(archiveFirstCommand, archiveFirstCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveFirstCommandCopy \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(archiveFirstCommand, archiveFirstCommandCopy);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(1, archiveFirstCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(archiveFirstCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different task -\u003e returns false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(archiveFirstCommand, archiveSecondCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 9,
      "aegis-bot": 3,
      "gx-huang": 70
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/parser/interactivecommandparser/DeleteTaskCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.interactivecommandparser.DeleteTaskCommandParser.parseIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for DeleteTaskCommandParser."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void parseInvalidIndexCheck() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(DeleteTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseIndex(\"-1\"); });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(DeleteTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseIndex(\"\"); });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(DeleteTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseIndex(\"WrongInput\"); });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/parser/interactivecommandparser/FilterTaskCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.interactivecommandparser.FilterTaskCommandParser.parseOptionIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.interactivecommandparser.FilterTaskCommandParser.parseStatusIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.interactivecommandparser.FilterTaskCommandParser.parseTypeIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.FilterTaskCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for filter task parser."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommandParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void filterTaskCommandParserTestParseStatusIndexCheck() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseStatusIndex(\"10\"); });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseStatusIndex(\"\"); });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskStatus status \u003d TaskStatus.getTaskStatusList().get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(status, parseStatusIndex(\"1\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void filterTaskCommandParserTestParseOptionIndex() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseOptionIndex(\"10\"); });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseOptionIndex(\"\"); });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(1, parseOptionIndex(\"1\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void filterTaskCommandParserTestParseTypeIndex() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseTypeIndex(\"10\"); });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseTypeIndex(\"\"); });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskType type \u003d TaskType.getTaskTypes()[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(type, parseTypeIndex(\"1\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 52
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/parser/interactivecommandparser/TaskParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.TaskParser.parseDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.TaskParser.parseDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.TaskParser.parseName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.TaskParser.parseType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.logic.parser.TaskParser.parseWeight;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for Task Parser"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskParserTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseNameCheck() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseName(\"Thistasknameismorethan20characterslong\"); });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseName(\"\"); });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"ValidName\", parseName(\"ValidName\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseDescriptionCheck() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDescription(\"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\"); });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"ValidDescription\", parseDescription(\"ValidDescription\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseDateCheck() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(\"Thisisnotavaliddate\", TaskType.Assignment); });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(\"\", TaskType.Assignment); });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:0023/03/2000\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //past date time"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Assignment); });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseAssignmentInvalidDateCheck() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:0023/03/2080\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Assignment); });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseQuizInvalidDateCheck() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Quiz); });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseExamInvalidDateCheck() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Exam); });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseMeetingInvalidDateCheck() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Meeting); });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParsePresentationInvalidDateCheck() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Presentation); });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseOthersInvalidDateCheck() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseDateTime(userInput, TaskType.Others); });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseInvalidTypeCheck() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"10\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseType(userInput, TaskType.getTaskTypes().length); });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseType(\"\", TaskType.getTaskTypes().length); });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseValidTypeCheck() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"1\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(TaskType.Assignment,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseType(userInput, TaskType.getTaskTypes().length));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseWeightCheck() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"1000.0\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseWeight(userInput); });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseWeight(\"\"); });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void taskParserTestTestParseEstimatedTimeCheck() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"-6.0\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseWeight(userInput); });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parseWeight(\"\"); });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 133,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/CalendarViewCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class CalendarViewCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate selectedDate1 \u003d LocalDate.of(2020, Month.APRIL, 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate selectedDate2 \u003d LocalDate.of(2020, Month.APRIL, 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarViewCommand cvFirstCommand \u003d new CalendarViewCommand(selectedDate1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarViewCommand cvSecondCommand \u003d new CalendarViewCommand(selectedDate2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(cvFirstCommand, cvFirstCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarViewCommand calendarViewCommandCopy \u003d new CalendarViewCommand(selectedDate1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(cvFirstCommand, calendarViewCommandCopy);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(1, cvFirstCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(cvFirstCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different task -\u003e returns false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(cvFirstCommand, cvSecondCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 9,
      "gx-huang": 31
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/FindTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for FindTaskCommand class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FindTaskCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate firstPredicate \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate secondPredicate \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(findFirstCommand, findFirstCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(findFirstCommand, findFirstCommandCopy);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(1, findFirstCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(findFirstCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different task -\u003e returns false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(findFirstCommand, findSecondCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void executeZeroKeywordsNoTaskFound() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand command \u003d new FindTaskCommand(predicate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Collections.emptyList(), model.getFilteredTaskList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void executeMultipleKeywordsMultipleTasksFound() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Quiz\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand command \u003d new FindTaskCommand(predicate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Arrays.asList(getSampleTasks()[2], getSampleTasks()[4]),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.getFilteredTaskList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 75
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/ListTasksCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test for ListTasksCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ListTasksCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void executeListIsNotFilteredShowsSameList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void executeListIsFilteredShowsEverything() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 32
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/add/AddTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TestModules.getSampleModule;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime endDateTime \u003d LocalDateTime.now().plusDays(20);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime startDateTime \u003d LocalDateTime.now().plusDays(10);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StorageManager storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LogicManager logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Module m : getSampleModule()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logicStub.getStudyBuddy().getModuleList().add(m);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\").contains(prompt.REQUIRED_MODULE_MSG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(AddTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractMultipleModuleIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractMultipleModuleIndexWrongFormatFollowByValidIndexReturnMessage() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"1\").contains(\"The module has been set as: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + modelStub.getStudyBuddy().getModuleList().get(0).toString()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleCodeReturnMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module module \u003d modelStub.getStudyBuddy().getModuleList().get(0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(module.getModuleCode().toString())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"The module has been set as: \" + module.toString()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractInvalidModuleCodeReturnMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"CSCSCS\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleIndexOutOfRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"0\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleIndexOutOfRangeSizePluOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d modelStub.getStudyBuddy().getModuleList().size();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + 1 + \"\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidModuleCodeReturnMessage() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String code \u003d modelStub.getStudyBuddy().getModuleList().get(0).getModuleCode().toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(code)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(code));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractPastDateTimeReturnErrorMessage() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime pastDateTime \u003d LocalDateTime.now().minusDays(1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(TimeParser.getDateTimeString(pastDateTime))"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"pastDateTime\").getErrorMessage()));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEndBeforeStartDateTimeReturnErrorMessage() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(TimeParser.getDateTimeString(endDateTime)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(startDateTime))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"eventEndBeforeStartError\").getErrorMessage()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidDateTimeReturnMessage() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime))"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(TimeParser.getDateTimeString(startDateTime) + \"-\" + TimeParser.getDateTimeString(endDateTime)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyTaskIndexReturnErrorMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"emptyInputError\").getErrorMessage()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyTaskNameReturnErrorMessage() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"emptyInputError\").getErrorMessage()));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractTooLongTaskNameReturnErrorMessage() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String longTaskName \u003d \"This Task Name is Longer Than 20 Char\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(longTaskName)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"taskNameLengthError\").getErrorMessage()));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidTaskNameReturnMessage() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"taskName\")"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"The name of task is set to: taskName.\"));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTaskTypeIndexFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTaskTypeIndexRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"0\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"0\")"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTaskTypeIndexRangeSizePlusOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d TaskType.getTaskTypes().length;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + 1 + \"\")"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidTaskTypeIndexReturnMessage() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d TaskType.getTaskTypes().length;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + \"\")"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(TaskType.getTaskTypes()[size - 1].toString()));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractTooLongTaskDescIndexReturnErrorMessage() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String longTaskDescription \u003d \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(longTaskDescription)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"taskDescriptionLengthError\").getErrorMessage()));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyTaskDescIndexReturnMessage() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"Please enter the weight of the task or press enter to skip.\"));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongWeightFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongWeightFormat\")"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongWeightValueOver100ReturnErrorMessage() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"101\")"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongWeightValueNegativeReturnErrorMessage() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"-1\")"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyWeightReturnMessage() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"Please enter the estimated number of hours cost or press enter to skip.\"));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidWeightValueReturnMessage() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"10\")"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"Please enter the estimated number of hours cost or press enter to skip.\"));"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTimeCostFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongTimeCostFormat\")"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongEstimatedTimeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTimeCostValueNegativeReturnErrorMessage() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"-1\")"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongEstimatedTimeRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidTimeCostValueReturnMessage() {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"10\")"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"The estimated number of hours the task might take has been set as 10\"));"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 345,
      "gx-huang": 30
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/add/CreateModuleInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TestModules.getSampleModule;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class CreateModuleInteractivePromptTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StorageManager storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LogicManager logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Module m : getSampleModule()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logicStub.getStudyBuddy().getModuleList().add(m);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please key in the name of the module that you want to create\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(CreateModuleInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"Software engineering\").contains(\"Software engineering\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactThirdInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"CS1101S\").contains(\"CS1101S\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactFourthInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"CS1101S\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(CreateModuleInteractivePrompt.SUCCESS_COMMAND_MSG, prompt.interact(\"\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactNoModuleNameReturnCorrectReply() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\").contains(new ModuleException(\"emptyInputError\").getErrorMessage()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactInvalidModuleCodeReturnErrorMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"Csdsdsa\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new ModuleException(\"wrongModuleCodeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"C111\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new ModuleException(\"wrongModuleCodeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"C1110\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new ModuleException(\"wrongModuleCodeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract_test() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.endInteract(\"a\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 20,
      "wyt-sonia": 50,
      "gx-huang": 32
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/delete/ClearTasksInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class ClearTasksInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ClearTasksInteractivePrompt prompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(ClearTasksInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ClearTasksInteractivePrompt prompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Are you sure you want to clear all your tasks?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please enter yes to continue and no to go back.\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/delete/DeleteTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class DeleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(DeleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to delete.\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The task \" + model.getStudyBuddy().getTaskList().get(0).getTaskName()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" will be deleted. \\n \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, reply);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "aegis-bot": 3,
      "wyt-sonia": 2,
      "gx-huang": 30
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/edit/ArchiveTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for archive tasks interactive prompt."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class ArchiveTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e(Arrays.asList(getSampleTasks()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task.updateCurrentTaskList(temp);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(ArchiveTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to archive.\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The task \" + Task.getCurrentTasks().get(0).getTaskName() + \" will be archived. \\n\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please press enter again to make the desired changes.\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInputReturnPrompt() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 49,
      "wyt-sonia": 1,
      "gx-huang": 8
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/edit/CompleteTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for complete tasks interactive prompt."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class CompleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CompleteTaskInteractivePrompt prompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(CompleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CompleteTaskInteractivePrompt prompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to mark as Finished.\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 26,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/edit/EditTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "class EditTaskInteractivePromptTestTest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StorageManager storageStub;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LogicManager logicStub;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private EditTaskInteractivePrompt prompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        EditTaskInteractivePrompt prompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(EditTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index of the task that you wish to edit.\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            prompt.interact(\"\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexLowerBoundaryReturnMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e tasksStub \u003d modelStub.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String lowerBoundary \u003d \"1\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String expectedLowerResponse \u003d \"Please choose the field that you wish to edit for task: \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + tasksStub.get(0).getTaskName() + \".\\n\\n\" + TaskField.getFieldString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String actualLowerResponse \u003d prompt.interact(lowerBoundary);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(expectedLowerResponse, actualLowerResponse);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexHigherBoundaryReturnMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e tasksStub \u003d modelStub.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int taskListSize \u003d tasksStub.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String higherBoundary \u003d \"\" + taskListSize;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String expectedHigherResponse \u003d \"Please choose the field that you wish to edit for task: \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + tasksStub.get(taskListSize - 1).getTaskName() + \".\\n\\n\" + TaskField.getFieldString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String actualHigherResponse \u003d prompt.interact(higherBoundary);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(expectedHigherResponse, actualHigherResponse);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexOutOfRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String zero \u003d \"0\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prompt.interact(zero));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexOutOfRangeSizePlusOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e tasksStub \u003d modelStub.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int taskListSizePlusOne \u003d tasksStub.size() + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prompt.interact(taskListSizePlusOne + \"\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage(),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prompt.interact(\"wrongIndexFormat\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskFieldIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"wrongIndexFormat\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskFieldIndexOutOfRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"0\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskFieldIndexOutOfRangeSizePlusOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d TaskField.values().length;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + 1 + \"\")"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskEmptyNameErrorReturnErrorMessage() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String expectedResponse \u003d new AddOrEditTaskCommandException(\"emptyInputError\").getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Please enter the task name.\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(expectedResponse, prompt.interact(\"\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskWeightErrorReturnErrorMessage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"6\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"101\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskWeightErrorNegativeReturnErrorMessage() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"6\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"-1\")"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskTypeFromOtherToAssignmentReturnErrorMessage() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"3\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"1\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"changeOtherTaskTypeToAssignmentError\").getErrorMessage()));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskTypeFromAssignmentToOtherReturnErrorMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"3\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"3\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"4\")"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"changeAssignmentToOtherTaskTypeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskNameReturnMessage() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String newName \u003d \"new task name\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(newName);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(newName, modelStub.getStudyBuddy().getTaskList().get(1).getTaskName());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditModuleReturnMessage() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new EmptyModule(), modelStub.getStudyBuddy().getTaskList().get(1).getModule());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskWeightReturnMessage() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"6\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"0.0\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(0.0, modelStub.getStudyBuddy().getTaskList().get(1).getWeight());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskDescriptionReturnMessage() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String taskDescription \u003d \"taskDescription\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"5\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(taskDescription);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(taskDescription, modelStub.getStudyBuddy().getTaskList().get(1).getTaskDescription());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskTimeCostReturnMessage() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        double timeCost \u003d 10.0;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"7\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(timeCost + \"\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(timeCost, modelStub.getStudyBuddy().getTaskList().get(1).getEstimatedTimeCost());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskDateReturnMessage() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task t : modelStub.getStudyBuddy().getTaskList()) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (t.getTaskType().equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                index \u003d modelStub.getStudyBuddy().getTaskList().indexOf(t);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String dateTime \u003d TimeParser.getDateTimeString(LocalDateTime.now().plusDays(10));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(index + 1 + \"\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"4\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(dateTime);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(dateTime,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.getDateTimeString(modelStub.getStudyBuddy().getTaskList().get(index).getDateTimes()[0]));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 19,
      "wyt-sonia": 230,
      "gx-huang": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/edit/SetGoalInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.CompletionStats;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.OverdueStats;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class SetGoalInteractivePromptTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private StorageManager storageStub;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private LogicManager logicStub;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private SetGoalInteractivePrompt prompt \u003d new SetGoalInteractivePrompt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Statistics statistics \u003d new Statistics(new GeneralStats(), new CompletionStats(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        new OverdueStats(), new ScoreStats());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        SetGoalInteractivePrompt.setStatistics(statistics);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void handleSetGoal() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.parseGoalValue(\"14\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(14, statistics.getGoal());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void interact() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"goal\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getEndOfCommandMsg(), prompt.interact(\"15\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void interactValidInputCorrectStatistics() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"goal\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"16\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(statistics.getGoal(), 16);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void interactInvalidInputGetException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"goal\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"102\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String errorMessage \u003d (new AddOrEditTaskCommandException(\"invalidIndexRangeError\")).getErrorMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(errorMessage, prompt.interact(\"102\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 75,
      "wyt-sonia": 3
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/edit/UnarchiveTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleArchivedTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class UnarchiveTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e(Arrays.asList(getSampleArchivedTasks()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task.updateArchivedTaskList(temp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(UnarchiveTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the index number of the archived task.\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"The task \" + Task.getArchivedTasks().get(0).getTaskName() + \" will be retrieved. \\n\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \"Please press enter again to make the desired changes.\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactThirdInputReturnPrompt() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "gx-huang": 51
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/view/CalendarViewInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class CalendarViewInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    //test date"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate selectedDate \u003d LocalDate.of(2020, Month.APRIL, 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarViewInteractivePrompt prompt \u003d new CalendarViewInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(CalendarViewInteractivePrompt.REQUIRED_DATE_MSG, prompt.interact(\"calendar\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarViewInteractivePrompt prompt \u003d new CalendarViewInteractivePrompt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The tasks with date \" + selectedDate.toString()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" will be shown.\\nPress enter to continue.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, prompt.interact(\"01/04/2020\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactQuitCommandReturnQuitMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CalendarViewInteractivePrompt prompt \u003d new CalendarViewInteractivePrompt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(CalendarViewInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 36
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/view/FilterTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for FilterTaskInteractivePrompt."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Successfully quited from filter task command.\", prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter your choice of filter:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"1. Status\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"2. Type\\n\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"filter\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactSecondInput1ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the status you would like to filter by:\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"1. Pending\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"2. Finished\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"3. Due soon\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"4. Overdue\", prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput1ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with status PENDING will be filtered.\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput2ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with status FINISHED will be filtered.\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"2\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput3ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with status DUE_SOON will be filtered.\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"3\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput4ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with status OVERDUE will be filtered.\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"4\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactSecondInput2ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the task type you would like to filter by:\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"1. Assignment\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"5. Exam\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"6. Others\", prompt.interact(\"2\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput5ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with type Assignment will be filtered.\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput6ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with type Quiz will be filtered.\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"2\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput7ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with type Presentation will be filtered.\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"3\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput8ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with type Meeting will be filtered.\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"4\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput9ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with type Exam will be filtered.\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"5\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactThirdInput10ReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FilterTaskInteractivePrompt prompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"filter\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"The tasks with type Others will be filtered.\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"Please click enter again to filter.\", prompt.interact(\"6\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 141
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/view/FindTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class FindTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getKeywordPrompt(), prompt.interact(\"find\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"find\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getConfirmationPrompt(\"randomKeyword\"), prompt.interact(\"randomKeyword\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void interactQuitCommandReturnQuitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getQuitMessage(), prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 22,
      "aegis-bot": 4,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/view/HelpInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class HelpInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private HelpInteractivePrompt hip \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(hip.interact(\"help\"), HelpInteractivePrompt.getHelpMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "aegis-bot": 1,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/interactiveprompt/view/RefreshTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for RefreshTaskInteractivePrompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class RefreshTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        RefreshTaskInteractivePrompt prompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String reply \u003d \"The tasks list will be refreshed.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(reply, prompt.interact(\"refresh\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interactQuitCommandReturnQuitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        RefreshTaskInteractivePrompt prompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String reply \u003d \"Successfully quited from refresh command.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(reply, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/ModelManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.StudyBuddyBuilder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for ModelManager."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void construct() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(new StudyBuddy(), new StudyBuddy(modelManager.getStudyBuddy()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUserPrefsNullUserPrefsThrowsNullPointerException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUserPrefsValidUserPrefsCopiesUserPrefs() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"studyBuddy/file/path\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.setUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(userPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // Modifying userPrefs should not modify modelManager\u0027s userPrefs"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"new/studyBuddy/file/path\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(oldUserPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setGuiSettingsNullGuiSettingsThrowsNullPointerException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setGuiSettingsValidGuiSettingsSetsGuiSettings() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePathNullPathThrowsNullPointerException() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setStudyBuddyFilePath(null));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePathValidPathSetsStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Path path \u003d Paths.get(\"studyBuddy/file/path\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.setStudyBuddyFilePath(path);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(path, modelManager.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTaskNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTaskTaskNotInStudyBuddyReturnsFalse() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(modelManager.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTaskTaskInStudyBuddyReturnsTrue() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.addTask(TypicalTasks.getSampleTasks()[0]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(modelManager.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getFilteredTaskListModifyListThrowsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy studyBuddy \u003d new StudyBuddyBuilder().withTask(TypicalTasks.getSampleTasks()[0])"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .withTask(TypicalTasks.getSampleTasks()[1]).build();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager \u003d new ModelManager(studyBuddy, userPrefs);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager modelManagerCopy \u003d new ModelManager(studyBuddy, userPrefs);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(modelManager, modelManagerCopy);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(modelManager, modelManager);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(modelManager);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(5, modelManager);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different userPrefs -\u003e returns false"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        differentUserPrefs.setStudyBuddyFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(modelManager, new ModelManager(studyBuddy, differentUserPrefs));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 111,
      "-": 11
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/StudyBuddyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for Study Buddy"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddyTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddy studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Collections.emptyList(), studyBuddy.getTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetDataNullThrowsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e studyBuddy.resetData(null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetDataWithValidReadOnlyStudyBuddyReplacesData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy newData \u003d TypicalTasks.getTypicalTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.resetData(newData);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(newData, studyBuddy);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTaskNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e studyBuddy.hasTask(null));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTaskTaskNotInStudyBuddyReturnsFalse() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(studyBuddy.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTaskInStudyBuddyReturnsTrue() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(TypicalTasks.getSampleTasks()[0]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(studyBuddy.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getTaskListModifyListThrowsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e studyBuddy.getTaskList().remove(0));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 61
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/UserPrefsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setGuiSettingsNullGuiSettingsThrowsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPref \u003d new UserPrefs();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setStudyBuddyFilePathNullPathThrowsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudyBuddyFilePath(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 3,
      "aegis-bot": 2,
      "-": 14
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/module/ModuleCodeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCodeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample1 \u003d \"CS1000\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample1Clone \u003d \"CS1000\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample1SmallCase \u003d \"cs1000\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String noPrefix \u003d \"2222\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String longPrefix \u003d \"FFFF11\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String longNumbers \u003d \"CS1111111111\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String noNumbers \u003d \"CS\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample2 \u003d \"LSM1303A\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String postfix \u003d \"CS0000X\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String noPostfix \u003d \"CS0000\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String longPostfix \u003d \"CS0000XX\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void testSampleWith3LetterPrefix() throws ModuleException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        new ModuleCode(sample2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void postFixOptional() throws ModuleException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        new ModuleCode(postfix);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        new ModuleCode(noPostfix);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void testEqualsFunctionOnString() throws ModuleException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1, new ModuleCode(sample1).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodePostfixTooLongThrowModuleCodeException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, () -\u003e new ModuleCode(longPostfix));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void isSameModuleCode() throws ModuleException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new ModuleCode(sample1), new ModuleCode(sample1Clone));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void isSameModuleCodeSmallCase() throws ModuleException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new ModuleCode(sample1), new ModuleCode(sample1SmallCase));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeNoPrefixThrowModuleCodeException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(noPrefix));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeLongPrefixThrowModuleCodeException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(longPrefix));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeLongCodeThrowModuleCodeException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(longNumbers));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeNoNumThrowModuleCodeException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(noNumbers));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 63,
      "wyt-sonia": 10
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/module/ModuleListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.TestModules;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a ModuleListTest."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleListTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void modListDuplicateModsThrowModuleCodeException() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            for (Module sampleMod: TestModules.getSampleModule()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                moduleList.add(sampleMod);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void lastModOnListIsEmptyModule() throws ModuleException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new EmptyModule());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"A\", \"CS2000\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"B\", \"CS2001\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new EmptyModule(), moduleList.get(moduleList.getSize() - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.setModuleList(List.of());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"B\", \"CS2001\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"A\", \"CS2000\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new EmptyModule());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new EmptyModule(), moduleList.get(moduleList.getSize() - 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsModInListReturnTrue() throws ModuleException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module sample1 \u003d TestModules.getSampleModule()[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(sample1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(moduleList.isContains(sample1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsModNotInListReturnFalse() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module sample1 \u003d TestModules.getSampleModule()[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(moduleList.isContains(sample1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void filterTaskListWorks() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module testModule \u003d TestModules.getSampleModule()[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e tasksToBeFiltered \u003d FXCollections.observableArrayList(TestModules.getSampleTask());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e expectedTasks \u003d TestModules.getSampleTask()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModule().equals(testModule));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        testModule.filterAndSetInternalTaskList(tasksToBeFiltered);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(expectedTasks, testModule.getInternalTaskList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        testModule.getInternalTaskList().forEach(x -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            assertTrue(x.getModule().equals(testModule));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 68,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/module/ModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.TestModules;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module sample1 \u003d TestModules.getSampleModule()[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module sample2 \u003d TestModules.getSampleModule()[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module sample3 \u003d TestModules.getSampleModule()[2];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //different name but same code -\u003e true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1, sample2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //same name but different code -\u003e false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertNotEquals(sample1, sample3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void changeModuleNameSucceed() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sample1.setModuleName(\"New Name\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1.getModuleName(), \"New Name\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleCodeSucceed() throws ModuleException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sample1.setModuleCode(\"CC1111\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1.getModuleCode(), new ModuleCode(\"CC1111\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleWithNoPrefixThrowsModuleCodeException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"2312312\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleWithNoNumberThrowsModuleCodeException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"CS\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleExceedPrefixLengthThrowsModuleCodeException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"CSSS1000\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleExceedLengthThrowsModuleCodeException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"CS100000000Z\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void testFilterTaskList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 56,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/task/TaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ONE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_TASK_NAME_ONE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task1 \u003d getSampleTasks()[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task2 \u003d getSampleTasks()[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void isSameTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.isSameTask(task1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(null));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_ONE).build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(editedTask1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different description -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        editedTask1 \u003d new TaskBuilder(task1).withDescription(VALID_DESCRIPTION_ONE).build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(editedTask1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task task1Copy \u003d new TaskBuilder(task1).build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(task1, task1Copy);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(task1, task1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(task1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(5, task1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different task -\u003e returns false"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(task1, task2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_ONE).build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(task1, editedTask1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different description -\u003e returns false"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        editedTask1 \u003d new TaskBuilder(task1).withDescription(VALID_DESCRIPTION_ONE).build();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotEquals(task1, editedTask1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 65
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/task/UniqueTaskListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TWO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_TASK_NAME_TWO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for Unique Task List"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class UniqueTaskListTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task1 \u003d getSampleTasks()[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task2 \u003d getSampleTasks()[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestContainsNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.isContains(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestContainsTaskNotInListReturnsFalse() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(uniqueTaskList.isContains(task1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void contains_taskInList_returnsTrue() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(uniqueTaskList.isContains(task1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestAddNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTaskNullTargetTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, task1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTaskNullEditedTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(task1, null));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTaskTargetTaskNotInListThrowsTaskNotFoundException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(task1, task1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTaskEditedTaskIsSameTaskSuccess() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, task1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTaskEditedTaskHasSameIdentitySuccess() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_TWO).withDescription(VALID_DESCRIPTION_TWO)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, editedTask1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(editedTask1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTaskEditedTaskHasDifferentIdentitySuccess() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, task2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestEemoveNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestRemoveTaskDoesNotExistThrowsTaskNotFoundException() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(task1));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestRemoveExistingTaskRemovesTask() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.remove(task1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTasksNullUniqueTaskListThrowsNullPointerException() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTasksUniqueTaskListReplacesOwnListWithProvidedUniqueTaskList() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTasks(expectedUniqueTaskList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTasksNullListThrowsNullPointerException() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestSetTasksListReplacesOwnListWithProvidedList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e taskList \u003d Collections.singletonList(task2);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTasks(taskList);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void uniqueTaskListTestAsUnmodifiableObservableListModifyListThrowsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, ()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 140
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonSerializableStudyBuddyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonSerializableStudyBuddyTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudyBuddyTest\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksStudyBuddy.json\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskStudyBuddy.json\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void toModelTypeTypicalTasksFileSuccess() throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        JsonSerializableStudyBuddy dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                JsonSerializableStudyBuddy.class).get();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StudyBuddy studyBuddyFromFile \u003d dataFromFile.toModelType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy typicalTasksStudyBuddy \u003d TypicalTasks.getOnlyTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(studyBuddyFromFile, typicalTasksStudyBuddy);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void toModelTypeInvalidTaskFileThrowsIllegalValueException() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        JsonSerializableStudyBuddy dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                JsonSerializableStudyBuddy.class).get();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(InteractiveCommandException.class, dataFromFile::toModelType);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 10,
      "aegis-bot": 2,
      "wyt-sonia": 1,
      "gx-huang": 24
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonStudyBuddyStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Test class for JsonStudyBuddyStorage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonStudyBuddyStorageTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudyBuddyStorageTest\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void readStudyBuddyNullFilePathThrowsNullPointerException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e readStudyBuddy(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private java.util.Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(String filePath) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new JsonStudyBuddyStorage(Paths.get(filePath)).readStudyBuddy(addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return prefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void readMissingFileEmptyResult() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(readStudyBuddy(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void readnotJsonFormatexceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(DataConversionException.class, () -\u003e readStudyBuddy(\"notJsonFormatStudyBuddy.json\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddynullStudyBuddythrowsNullPointerException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudyBuddy(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves {@code studyBuddy} at the specified {@code filePath}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, String filePath) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new JsonStudyBuddyStorage(Paths.get(filePath))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .saveStudyBuddy(studyBuddy, addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddynullFilePaththrowsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudyBuddy(new StudyBuddy(), null));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 56,
      "-": 10
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonUserPrefsStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorageTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readUserPrefsNullFilePathThrowsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readUserPrefsMissingFileEmptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readUserPrefsNotJsonFormatExceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readUserPrefsValuesMissingFromFileDefaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), actual);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void readUserPrefsExtraValuesInFileExtraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs expected \u003d getTypicalUserPrefs();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefs getTypicalUserPrefs() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"studybuddy.json\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void savePrefsNullPrefsThrowsNullPointerException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void saveUserPrefsNullFilePathThrowsNullPointerException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                .saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file\", ioe);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void saveUserPrefsAllInOrderSuccess() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 5,
      "aegis-bot": 8,
      "-": 98
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storageManager \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(storageManager.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 4,
      "-": 46
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/Assert.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.function.Executable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * A set of assertion methods useful for writing tests."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Assert {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code executable} throws the {@code expectedType} Exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * with our custom {@link #assertThrows(Class, String, Executable)} method."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * To standardize API calls in this project, users should use this method instead of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Assertions#assertThrows(Class, Executable)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * If there\u0027s no need for the verification of the exception\u0027s error message, call"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link #assertThrows(Class, Executable)} instead."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertThrows(Class, Executable)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                                    Executable executable) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertEquals(expectedMessage, thrownException.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/SerializableTestClass.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * A class used to test serialization and deserialization"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class SerializableTestClass {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"listOfLocalDateTimes\\\" : \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"\\\"0001-01-01T01:01:00\\\" ],%n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"mapOfIntegerToString\\\" : {%n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"1\\\" : \\\"One\\\",%n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"2\\\" : \\\"Two\\\",%n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"3\\\" : \\\"Three\\\"%n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  }%n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"}\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getNameTestValue() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return NAME_TEST_VALUE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cLocalDateTime\u003e getListTestValues() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.MIN);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.MAX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return listOfLocalDateTimes;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(1, \"One\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(2, \"Two\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(3, \"Three\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return mapOfIntegerToString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTestValues() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d getNameTestValue();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes \u003d getListTestValues();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString \u003d getHashMapTestValues();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return listOfLocalDateTimes;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return mapOfIntegerToString;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 71
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/StudyBuddyBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A utility class to help with building StudyBuddy objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * @@author Souwmyaa Sabarinathann"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddyBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StudyBuddy studyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a new {@code Task} to the {@code StudyBuddy} that we are building."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder withTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy build() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 26,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TaskBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Utility class to help build tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TaskBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_MODULE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Team project\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_TASKDESCRIPTION \u003d \"Team project\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final double DEFAULT_ESTIMATEDTIME \u003d 45.5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskType DEFAULT_TASKTYPE \u003d TaskType.Others;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskStatus DEFAULT_TASKSTATUS \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final double DEFAULT_TASKWEIGHT \u003d 45.0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final LocalDateTime[] DEFAULT_DATETIME \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 10/10/2020\")};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final LocalDateTime DEFAULT_CREATION_DATETIME \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d new Module(DEFAULT_MODULE, DEFAULT_MODULE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d DEFAULT_TASKTYPE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d DEFAULT_NAME;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d DEFAULT_TASKDESCRIPTION;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d DEFAULT_TASKWEIGHT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d DEFAULT_TASKSTATUS;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d DEFAULT_DATETIME;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d DEFAULT_ESTIMATEDTIME;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d DEFAULT_CREATION_DATETIME;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init new Task with parameter TaskToCopy"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder(Task taskToCopy) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d taskToCopy.getModule();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d taskToCopy.getTaskType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d taskToCopy.getTaskName();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d taskToCopy.getTaskDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d taskToCopy.getWeight();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d taskToCopy.getTaskStatus();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d taskToCopy.getDateTimes();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d taskToCopy.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d taskToCopy.getCreationDateTime();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init taskBuilder with name as parameter."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder withName(String name) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * init taskBuilder with description as parameter"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskBuilder withDescription(String desc) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.taskDescription \u003d desc;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * builds task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task(module, taskType, taskName, taskDescription, weight, taskStatus,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 8,
      "wyt-sonia": 7,
      "gx-huang": 68
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TestModules.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A sample class for module testing. Includes modules and tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class TestModules {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/04/2020\"), LocalDateTime.now()};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static Module[] getSampleModule() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2100 \u003d new Module(\"Computer Organisation\", \"CS2100\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2100clone1 \u003d new Module(\"dasadsa\", \"CS2100\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2100clone2 \u003d new Module(\"Computers are stupid\", \"CS1111\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new Module[] {cs2100, cs2100clone1, cs2100clone2, new EmptyModule()};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static ObservableList\u003cTask\u003e getSampleTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module[] modArr \u003d getSampleModule();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e sampleTaskList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[0], TaskType.Assignment, \"Ass 1\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[0], TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                3.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[3], TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[3], TaskType.Meeting, \"Meeting 1\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return sampleTaskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 45
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class for test cases."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestUtil {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Folder used for temp files created during testing. Ignored by Git."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Appends {@code fileName} to the sandbox folder path and returns the resulting path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the sandbox folder if it doesn\u0027t exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static Path getFilePathInSandboxFolder(String fileName) throws RuntimeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(SANDBOX_FOLDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return SANDBOX_FOLDER.resolve(fileName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the task in the {@code model}\u0027s task list at {@code index}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static Task getTask(Model model, Index index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredTaskList().get(index.getZeroBased());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "aegis-bot": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TypicalIndexes.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A utility class containing a list of {@code Index} objects to be used in tests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TypicalIndexes {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 9
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TypicalTasks.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * represents a typical task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TypicalTasks {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String LONG_DESC_WITH_300_CHAR \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String SHORT_DESC \u003d \"This is a short description.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Module emptyModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Module cs2103T \u003d new Module(\"Software Engineering\", \"CS2103T\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \"CS2101\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime pastDateTime1 \u003d TimeParser.parseDateTime(\"20:22 02/04/2020\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 21/04/2020\")};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime creationDateTime \u003d LocalDateTime.now().minusDays(6);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] dueSoonDuration1 \u003d {LocalDateTime.now().plusDays(3),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime.now().plusDays(7)};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] pendingDuration1 \u003d {LocalDateTime.now().plusDays(10),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime.now().plusDays(17)};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(emptyModule, TaskType.Others, \"Homework 1\", SHORT_DESC, 20.0,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.PENDING, pendingDuration1, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(emptyModule, TaskType.Presentation, \"Leadership Presentation 1\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 0.0, TaskStatus.FINISHED, dueSoonDuration1,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                3.0, pastDateTime1),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Assignment, \"CS2101 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                15.0, TaskStatus.PENDING, dateTimesOne, 2.0, pastDateTime1),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Group Meeting 1\", LONG_DESC_WITH_300_CHAR, 15.0,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.FINISHED, dueSoonDuration1, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Quiz, \"CS2101 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                15.0, TaskStatus.PENDING, pendingDuration1, 2.0, pastDateTime1)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static Task[] getSampleArchivedTasks() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Ass 2\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, creationDateTime),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 2\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                3.0, creationDateTime),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 2\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, creationDateTime),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Meeting 2\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, creationDateTime),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 2\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, creationDateTime),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static StudyBuddy getTypicalTaskList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy sampleAb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sampleAb.addTask(sampleTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task sampleTask : getSampleArchivedTasks()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sampleAb.addArchiveTask(sampleTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static StudyBuddy getOnlyTaskList() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        StudyBuddy sampleAb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task testTask1 \u003d new Task(emptyModule, TaskType.Presentation, \"Leadership Presentation 1\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 0.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                3.0, pastDateTime1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task testTask2 \u003d new Task(emptyModule, TaskType.Presentation, \"Leadership Presentation 2\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 0.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                3.0, pastDateTime1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        sampleAb.addTask(testTask1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        sampleAb.addArchiveTask(testTask2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 2,
      "wyt-sonia": 20,
      "gx-huang": 72
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/TestFxmlObject.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.DefaultProperty;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A test object which can be constructed via an FXML file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@DefaultProperty(\"text\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestFxmlObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TestFxmlObject() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public TestFxmlObject(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        setText(text);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setText(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof TestFxmlObject // instanceof handles nulls"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 2,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/UiPartTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiPartTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorNullFileUrlThrowsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorMissingFileUrlThrowsAssertionError() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorInvalidFileUrlThrowsAssertionError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorValidFileUrlLoadsFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorValidFileWithFxRootUrlLoadsFile() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        TestFxmlObject root \u003d new TestFxmlObject();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorNullFileNameThrowsNullPointerException() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorMissingFileNameThrowsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void constructorInvalidFileNameThrowsAssertionError() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    private URL getTestFileUrl(String testFilePath) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        String testFilePathInView \u003d \"/view/\" + testFilePath;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFileUrl;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * UiPart used for testing."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        @FXML"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        private TestFxmlObject validFileRoot; // Check that @FXML annotations work"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileName, root);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileUrl);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(VALID_FILE_ROOT, validFileRoot);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileName);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(VALID_FILE_ROOT, validFileRoot);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 13,
      "aegis-bot": 8,
      "-": 91
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/panel/TaskSummaryPanelTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskSummaryPanelTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 10
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFile.fxml",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import draganddrop.studybuddy.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 3
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import draganddrop.studybuddy.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"TestFxmlObject\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctext\u003eHello World!\u003c/text\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 1,
      "-": 4
    }
  }
]
