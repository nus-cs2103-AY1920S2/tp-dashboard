[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "mainClassName \u003d \u0027draganddrop.studybuddy.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    archiveName \u003d \u0027studybuddy.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            linkcss             : true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            stylesheet          : \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            icons               : \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            experimental        : true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            sectlinks           : true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            idprefix            : \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            idseparator         : \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-root\u0027         : \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-name\u0027         : \u0027StudyBuddy\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0027site-githuburl\u0027    : \u0027https://github.com/AY1920S2-CS2103T-W16-3/main\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0027site-draganddrop\u0027        : true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 1,
      "-": 150,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/AppParameters.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.FileUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the parsed command-line parameters given to the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParameters {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path configPath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the application command-line parameters."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AppParameters parse(Application.Parameters parameters) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d new AppParameters();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String configPathParameter \u003d namedParameters.get(\"config\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            configPathParameter \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return appParameters;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path getConfigPath() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setConfigPath(Path configPath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.configPath \u003d configPath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return configPath.hashCode();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof AppParameters)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters otherAppParameters \u003d (AppParameters) other;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 1,
      "wyt-sonia": 13,
      "-": 48
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/Main.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * This is a workaround for the following error when MainApp is made the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * entry point of the application:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * The reason is that MainApp extends Application. In that case, the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * LauncherHelper will check for the javafx.graphics module to be present"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * to be the entry point of the application, we avoid this issue."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(MainApp.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/MainApp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Version;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.Storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StudyBuddyStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.Ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.UiManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final Version VERSION \u003d new Version(1, 2, 1, true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StudyBuddy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(userPrefs.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storage \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.info(\"Starting StudyBuddy \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Study Buddy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s study buddy and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The data from the sample study buddy will be used instead if {@code storage}\u0027s study buddy is not found,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * or an empty study buddy will be used instead if errors occur when reading {@code storage}\u0027s study buddy."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Optional\u003cReadOnlyStudyBuddy\u003e studyBuddyOptional;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ReadOnlyStudyBuddy initialData;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddyOptional \u003d storage.readStudyBuddy();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (!studyBuddyOptional.isPresent()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample StudyBuddy\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d studyBuddyOptional.orElseGet(SampleDataUtil::getSampleStudyBuddy);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            initialData \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default config properties\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Using default user prefs\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudyBuddy\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 25,
      "souwmyaa": 16,
      "wyt-sonia": 18,
      "-": 125
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Config.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Config values used by the app"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Config {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Config values customizable through config file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Level logLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public Level getLogLevel() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return logLevel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLogLevel(Level logLevel) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logLevel \u003d logLevel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFilePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefsFilePath(Path userPrefsFilePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsFilePath \u003d userPrefsFilePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(logLevel, userPrefsFilePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Config)) { //this handles null as well."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Config o \u003d (Config) other;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.equals(logLevel, o.logLevel)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Current log level : \" + logLevel);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 5,
      "-": 57
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/GuiSettings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 740;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 5,
      "-": 67
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/LogsCenter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String LOG_FILE \u003d \"studybuddy.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes with a custom log level (specified in the {@code config} object)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logging levels for existing loggers will only be updated if the logger with the same name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * is requested again from the LogsCenter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void init(Config config) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 2,
      "-": 109
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_COMPLETE_TASK_SUCCESS \u003d \"Task Completed: \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_DUPLICATE_TASK_SUCCESS \u003d \"Deleted duplicate tasks\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_CLEAR_SUCCESS \u003d \"Study Buddy has been cleared!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUE_SOON_TASK_SUCCESS \u003d \"Tasks\u0027 status and Due Soon list is updated\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_FILTER_TASK_SUCCESS \u003d \"Filtered tasks\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_VIEW_RENAMED_TASK_SUCCESS \u003d \"Filtered renamed tasks\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_ADD_SUCCESS \u003d \"New Duplicate Task added: %1$s\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 9,
      "aegis-bot": 8,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/Version.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a version with major, minor and patch number"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Version implements Comparable\u003cVersion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int major;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int minor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int patch;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean isEarlyAccess;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public Version(int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.major \u003d major;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minor \u003d minor;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.patch \u003d patch;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isEarlyAccess \u003d isEarlyAccess;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a version number string in the format V1.2.3."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param versionString version number string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a Version object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Version fromString(String versionString) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!versionMatcher.find()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Version(Integer.parseInt(versionMatcher.group(1)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(2)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            Integer.parseInt(versionMatcher.group(3)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            versionMatcher.group(4) \u003d\u003d null ? false : true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMajor() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return major;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getMinor() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return minor;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getPatch() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return patch;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isEarlyAccess() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isEarlyAccess;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public int compareTo(Version other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (major !\u003d other.major) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return major - other.major;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if (minor !\u003d other.minor) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            return minor - other.minor;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if (patch !\u003d other.patch) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return patch - other.patch;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isEarlyAccess) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            hash \u003d \"1\" + hash;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Integer.parseInt(hash);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof Version)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        final Version other \u003d (Version) obj;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return compareTo(other) \u003d\u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 27,
      "-": 86
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/core/index/Index.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a zero-based or one-based index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * base the other component is using for its index. However, after receiving the {@code Index}, that component can"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * convert it back to an int if the index will not be passed to a different component again."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Index {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Index can only be created by calling {@link Index#fromZeroBased(int)} or"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Index#fromOneBased(int)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Index(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        if (zeroBasedIndex \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zeroBasedIndex \u003d zeroBasedIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a zero-based index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromZeroBased(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(zeroBasedIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a one-based index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromOneBased(int oneBasedIndex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(oneBasedIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getZeroBased() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getOneBased() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return zeroBasedIndex + 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof Index // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 9,
      "-": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/exceptions/DataConversionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error during conversion of data from one format to another"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DataConversionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public DataConversionException(Exception cause) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/exceptions/IllegalValueException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param cause   of the main exception"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public IllegalValueException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/AppUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * A container for App specific utility functions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(imagePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException if {@code condition} is false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void checkArgument(Boolean isValid) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isValid) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks that {@code condition} is true. Used for validating arguments to methods."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void checkArgument(Boolean isValid, String errorMessage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isValid) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "wyt-sonia": 4,
      "-": 33
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/CollectionUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Utility methods related to Collections"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #requireAllNonNull(Collection)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Object... items) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Stream.of(items).forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Throws NullPointerException if {@code items} or any element of {@code items} is null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void requireAllNonNull(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(items);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        items.forEach(Objects::requireNonNull);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code items} contain any elements that are non-null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isAnyNonNull(Object... items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 33
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/ConfigUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A class for accessing the Config File."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(configFilePath, Config.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void saveConfig(Config config, Path configFilePath) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.saveJsonFile(config, configFilePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "-": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/FileUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Writes and reads files"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String CHARSET \u003d \"UTF-8\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isFileExists(Path file) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(URI)}},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise returns false."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param path A string representing the file path. Cannot be null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPath(String path) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Paths.get(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidPathException ipe) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createIfMissing(Path file) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFileExists(file)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            createFile(file);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a file if it does not exist along with its missing parent directories."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (Files.exists(file)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        createParentDirsOfFile(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createFile(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates parent directories of file if it has a parent directory"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createParentDirsOfFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Path parentDir \u003d file.getParent();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (parentDir !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(parentDir);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Assumes file exists"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String readFromFile(Path file) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String(Files.readAllBytes(file), CHARSET);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes given string to a file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will create the file if it does not exist yet."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void writeToFile(Path file, String content) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.write(file, content.getBytes(CHARSET));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 81
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/JsonUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationContext;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.module.SimpleModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Converts a Java object instance to JSON and vice versa"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        .registerModule(new SimpleModule(\"SimpleModule\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .addSerializer(Level.class, new ToStringSerializer())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * If any values are missing from the file, default values will be used, as long as the file is a valid json file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath                   cannot be null."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Json file \" + filePath + \" not found\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        T jsonFile;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.of(jsonFile);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the Json object to the specified file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param jsonFile cannot be null"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath cannot be null"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was an error during writing to the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(jsonFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        serializeObjectToJsonFile(filePath, jsonFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given string representation of a JSON data to instance of a class"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The instance of T with the specified values in the JSON string"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.readValue(json, instanceClass);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given instance of a class into its JSON data string representation"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instance The T object to be converted into the JSON string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e      The generic type to create an instance of"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return JSON data representation of the given class instance, in string"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Contains methods that retrieve logging level from serialized string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        protected LevelDeserializer(Class\u003c?\u003e vc) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            super(vc);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        protected Level _deserialize(String value, DeserializationContext ctxt) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            return getLoggingLevel(value);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         * Gets the logging level that matches loggingLevelString"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns null if there are no matches"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        private Level getLoggingLevel(String loggingLevelString) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.parse(loggingLevelString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public Class\u003cLevel\u003e handledType() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.class;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "wyt-sonia": 4,
      "-": 139
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/commons/util/StringUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Helper functions for handling strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code sentence} contains the {@code word}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ignores case, but a full word match is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003eexamples:\u003cpre\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *       \u003c/pre\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param sentence cannot be null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param word     cannot be null, cannot be empty, must be a single word"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static boolean isContainsWordIgnoreCase(String sentence, String word) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(sentence);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(word);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String preppedWord \u003d word.trim().toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String preppedSentence \u003d sentence.toLowerCase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(wordsInPreppedSentence)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .anyMatch(x -\u003e x.contains(preppedWord));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed message of the t, including the stack trace."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDetails(Throwable t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        t.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return t.getMessage() + \"\\n\" + sw.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code s} represents a non-zero unsigned integer"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will return false for any other non-null string input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code s} is null."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isNonZeroUnsignedInteger(String s) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 3,
      "-": 60
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/Logic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException   If an error occurs during parsing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the StudyBuddy."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see Model#getStudyBuddy()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ReadOnlyStudyBuddy getStudyBuddy();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of tasks that are Due Soon"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered list of archived tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ObservableList\u003cModule\u003e getFilteredModuleList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 10,
      "wyt-sonia": 10,
      "-": 35,
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/LogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.StudyBuddyParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddyParser studyBuddyParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddyParser \u003d new StudyBuddyParser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult commandResult \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Command command \u003d studyBuddyParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (java.text.ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ex.getLocalizedMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            storage.saveStudyBuddy(model.getStudyBuddy());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult executeCommand(Command command) throws CommandException, java.text.ParseException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            storage.saveStudyBuddy(model.getStudyBuddy());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // keep track of task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task.updateCurrentTaskList(new ArrayList\u003cTask\u003e(getStudyBuddy().getTaskList()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task.updateArchivedTaskList(new ArrayList\u003c\u003e(getStudyBuddy().getArchivedList()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getStudyBuddy();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return model.getFilteredTaskList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return model.getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return model.getFilteredModuleList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 18,
      "souwmyaa": 22,
      "aegis-bot": 2,
      "wyt-sonia": 17,
      "-": 52,
      "gx-huang": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 3,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Help information should be shown to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final boolean isShowHelp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The application should exit.1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isShowHelp \u003d isShowHelp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return Objects.hash(feedbackToUser, isShowHelp, isExit);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 15,
      "-": 50
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/AddDuplicateTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Adds a duplicate task to the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class AddDuplicateTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an AddDuplicateTaskCommand to add the specified {@code Task}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public AddDuplicateTaskCommand(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (Task task : lastShownList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (task.equals(toAdd)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.addDuplicateTask(toAdd, task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_DUPLICATE_ADD_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof AddDuplicateTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                \u0026\u0026 toAdd.equals(((AddDuplicateTaskCommand) other).toAdd));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 53
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/AddTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the command of adding new task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"AddTaskCommand\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(AddTaskCommand.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an AddTaskCommand to add the specified {@code Task}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to execute the add task command.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        model.addTask(toAdd);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of executing the add task command.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof AddTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "wyt-sonia": 11,
      "-": 35
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/add/CreateModCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A command to create modules. Adds into study buddy. module is constructed outside createModCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * and it will throw an exception outside createModCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create mod\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New Mod added: %1$s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This module already exists in the study buddy\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Module mod;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModCommand(Module mod) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.mod \u003d mod;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (model.hasMod(mod)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.addMod(mod);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, mod));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof CreateModCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 mod.equals(((CreateModCommand) other).mod));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "aegis-bot": 40,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/ClearTasksCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Clears all data in study buddy."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.setStudyBuddy(new StudyBuddy());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_CLEAR_SUCCESS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 4,
      "aegis-bot": 1,
      "-": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Deletes a task identified using it\u0027s displayed index from the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof DeleteTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 40
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/delete/ViewRenamedTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Filters all the renamed tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ViewRenamedTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view renamed\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Predicate\u003cTask\u003e predicate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ViewRenamedTaskCommand(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_VIEW_RENAMED_TASK_SUCCESS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof ViewRenamedTaskCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 39
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/ArchiveTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Archives an entry in the study buddy."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"archive\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Archives the selected entry\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_ARCHIVE_TASK_SUCCESS \u003d \"Archived Task: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        model.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            || (other instanceof ArchiveTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 targetIndex.equals(((ArchiveTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 1,
      "wyt-sonia": 1,
      "gx-huang": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/CompleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Completes a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"Complete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \": Complete the task based on the displayed list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task taskToComplete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        model.completeTask(taskToComplete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteDueSoonTask(taskToComplete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(String.format(Messages.MESSAGE_COMPLETE_TASK_SUCCESS,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                taskToComplete.getTaskName()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 3,
      "aegis-bot": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/EditModCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Command for editing mod."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EditModCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String MOD_DOES_NOT_EXIST \u003d \"Module does not exist in Study Buddy!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module oldModule;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module newModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private InteractivePromptTerms term;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public EditModCommand(Module oldModule, Module newModule, InteractivePromptTerms term) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(oldModule);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(newModule);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.oldModule \u003d oldModule;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.newModule \u003d newModule;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.term \u003d term;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!model.hasMod(oldModule)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return new CommandResult(MOD_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                switch (term) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case CHANGE_MOD_NAME:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    model.changeModName(oldModule, newModule);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Module name Change successful!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case CHANGE_MOD_CODE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    model.changeModCode(oldModule, newModule);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Module code change successful!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case DELETE_MOD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    model.deleteMod(oldModule);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Module deleted!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    return new CommandResult(\"Did nothing! from EditModCommand.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new CommandException(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 52,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/EditTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Edits the details of an existing task in the study buddy."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Hong Wen, Wang Yuting"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditTaskCommand extends Command {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EDIT_TASK_SUCCESS \u003d \"Task has been edited successfully\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"EditTaskCommand\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(EditTaskCommand.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private final TaskField taskField;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private String newTaskName \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private String newTaskDescription \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private double newTaskWeight \u003d 0.0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private double newTaskTimeCost \u003d 0.0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskType newTaskType \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private LocalDateTime[] newDateTimes \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private Module newModule \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an edit task command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param targetIndex index of target task to be edited"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskField the task field to be edited"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditTaskCommand(Index targetIndex, TaskField taskField) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(targetIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(taskField);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskField \u003d taskField;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewTaskName(String newTaskName) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newTaskName \u003d newTaskName;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewTaskWeight(double newTaskWeight) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newTaskWeight \u003d newTaskWeight;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewTaskDescription(String newTaskDescription) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newTaskDescription \u003d newTaskDescription;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewTaskTimeCost(double newTaskTimeCost) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newTaskTimeCost \u003d newTaskTimeCost;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewTaskType(TaskType newTaskType) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newTaskType \u003d newTaskType;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewDateTime(LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newDateTimes \u003d newDateTimes;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void provideNewModule(Module newModule) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.newModule \u003d newModule;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws DuplicateTaskException, CommandException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to execute edit task command.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Task taskToEdit \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            model.setTaskName(taskToEdit, newTaskName);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            assert taskToEdit.getTaskName().equals(newTaskName)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                : \"The task name is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newTaskDescription);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            model.setTaskDescription(taskToEdit, newTaskDescription);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            assert taskToEdit.getTaskDescription().equals(newTaskDescription)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                : \"The task description is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newTaskWeight);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            model.setTaskWeight(taskToEdit, newTaskWeight);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            assert taskToEdit.getWeight() \u003d\u003d newTaskWeight"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                : \"The task weight is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newTaskTimeCost);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            model.setTaskTimeCost(taskToEdit, newTaskTimeCost);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            assert taskToEdit.getEstimatedTimeCost() \u003d\u003d newTaskTimeCost"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                : \"The task estimated time needed is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            model.setTaskType(taskToEdit, newTaskType);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            assert taskToEdit.getTaskType().equals(newTaskType)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                : \"The task type is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newDateTimes);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            model.setTaskDateTime(taskToEdit, newDateTimes);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            assert taskToEdit.getDateTimes().equals(newDateTimes)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                : \"The task date time info is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(newModule);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                model.setTaskMod(taskToEdit, newModule);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                assert taskToEdit.getModule().equals(newModule)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    : \"The task module is not updated to the correct new value, please check.\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.INFO, LOG_TAG + \": module code invalid/does not exist!!!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new CommandException(\"module code invalid/does not exist!!!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        updateDueSoon(taskToEdit, model);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of executing edit task command.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(EDIT_TASK_SUCCESS);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates Due Soon list as well."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param model"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateDueSoon(Task taskToEdit, Model model) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        model.deleteDueSoonTask(taskToEdit);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        model.addDueSoonTask(lastShownList.get(targetIndex.getZeroBased()));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 20,
      "souwmyaa": 1,
      "wyt-sonia": 6,
      "-": 132
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/edit/UnarchiveTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Archives an entry in the study buddy."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UnarchiveTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"unarchive\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": retrieves the selected entry from archived\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String MESSAGE_ARCHIVE_TASK_SUCCESS \u003d \"retrieved Task: %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UnarchiveTaskCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownMainList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (lastShownMainList.contains(taskToArchive)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            for (Task task : lastShownList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (task.equals(taskToArchive)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.addDuplicateTask(taskToArchive, task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    model.unarchiveDuplicateTask(taskToArchive);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            model.unarchiveTask(taskToArchive);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                || (other instanceof UnarchiveTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u0026\u0026 targetIndex.equals(((UnarchiveTaskCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 11,
      "gx-huang": 53
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/exceptions/CommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/sort/SortTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommand that can handle the sorting of tasks according to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * user\u0027s choice."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class SortTaskCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Sort Task: %1$s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskListPanel\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SortTaskCommand.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        + \": Sort the tasks by keyword chosen by user. \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Parameters: Sort Keyword (1 (deadline / task start date), 2 (task name) and 3 creation datetime)\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private String sortKeyword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public SortTaskCommand(String sortKeyword) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortKeyword \u003d sortKeyword;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of executing the sort command.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        model.sortTasks(sortKeyword);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of executing the sort command.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS, sortKeyword));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof SortTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 sortKeyword.equals(((SortTaskCommand) other).sortKeyword)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 12,
      "-": 36
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/CalendarViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.MainWindow;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * brings up calendar immediately with task from input date shown."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Might not need to have this class since model is not changed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String CALENDAR_VIEW_SUCCESS \u003d \"Now showing tasks for date:  %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CalendarViewCommand.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate selectedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarViewCommand(LocalDate selectedDate, MainWindow mainwindow) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        mainwindow.handleShowCalendar();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        mainwindow.getCalendarBox().generateCalendar(selectedDate.getYear(), selectedDate.getMonth());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        mainwindow.getCalendarBox().viewTaskByDate(selectedDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.selectedDate \u003d selectedDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new CommandResult(String.format(CALENDAR_VIEW_SUCCESS, selectedDate.toString()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                || (other instanceof CalendarViewCommand); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 49
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/FilterTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Filters the list by status or by tags."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //logging"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(FilterTaskCommand.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Predicate\u003cTask\u003e predicate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an FilterTaskCommand to filter the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public FilterTaskCommand(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"Attempting to filter tasks\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_FILTER_TASK_SUCCESS);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof FilterTaskCommand); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 47
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/FindTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Finds and lists all tasks in the tasks list whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Keyword matching is case-insensitive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final TaskNameContainsKeywordsPredicate predicate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof FindTaskCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 42,
      "souwmyaa": 2
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/ListTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.model.Model.PREDICATE_SHOW_ALL_TASKS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Represent a ListTaskCommand that can List all persons in the task list to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 26
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/commands/view/RefreshCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Refreshes the Due Soon list as well as status tags."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class RefreshCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //logging"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(RefreshCommand.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        logger.info(\"Attempting to refresh due soon list and tags\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //resetting the due soon list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.clearDueSoonList(new StudyBuddy());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (Task task : lastShownList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (task.isDueSoon()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.forceAddDueSoonTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.sortDueSoonTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //refreshing the status tags"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        final int size \u003d lastShownList.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            Task task \u003d lastShownList.get(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            refreshStatus(task, model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.sortTasks(\"deadline / task start date\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new CommandResult(Messages.MESSAGE_DUE_SOON_TASK_SUCCESS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This function refreshes the status tags."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task a task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param model Model"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void refreshStatus(Task task, Model model) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.deleteTaskFromMainList(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        task.freshStatus();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.addTaskToMainList(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            || (other instanceof RefreshCommand); // state check"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 63,
      "wyt-sonia": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/StudyBuddyParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a StudyBuddyParser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class StudyBuddyParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Command parseCommand(String option) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 1,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/TaskParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a TaskParser, which can parse all fields for tasks during interactive communication."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Especially for interactions of add task and edit task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskParser\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(TaskParser.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} for task name."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String parseName(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseName.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Empty task name error.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (userInput.length() \u003e 20) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": task name length error.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"taskNameLengthError\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"[^a-z0-9 ]\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isSpecialCharInside \u003d matcher.find();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isSpecialCharInside) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task name contains special char error.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"specialCharInputError\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d userInput.trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !result.isBlank()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The result of parseName from TaskParser is blank, please check.\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseName with task name \" + result);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} for task description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String parseDescription(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseDescription.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        if (userInput.length() \u003e 300) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task description length error.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"taskDescriptionLengthError\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d userInput.trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseDescription with task description \" + result);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} to assignment\u0027s date and time."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private static LocalDateTime[] parseDateTimeForAssignment(String userInput)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseDateTimeForAssignment.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime[] result \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check date time format"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            result[0] \u003d TimeParser.parseDateTime(userInput);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        // Checks passed time"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        if (result[0].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is passed time.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseDateTimeForAssignment with data time \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            + TimeParser.getDateTimeString(result[0]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} to other task type\u0027s (except assignment) date and time."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private static LocalDateTime[] parseDateTimeForOtherTaskType(String userInput)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseDateTimeForOtherTaskType.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime[] result \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check date time format"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!userInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is passed time.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        tempInputDateTimes \u003d userInput.trim().split(\"-\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time format error.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            result[0] \u003d TimeParser.parseDateTime(tempInputDateTimes[0]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            result[1] \u003d TimeParser.parseDateTime(tempInputDateTimes[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check passed time and start-end order"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        if (result[0].isBefore(LocalDateTime.now()) || result[1].isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is passed time.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"pastDateTime\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!result[1].isAfter(result[0])) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Task date time is end before start.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"eventEndBeforeStartError\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assert result.length \u003d\u003d 2"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"Missing start or end date time, please check.\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseDateTimeForOtherTaskType with date time as \""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            + TimeParser.getDateTimeString(result[0]) + \"-\" + TimeParser.getDateTimeString(result[1]));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} to task date and time."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalDateTime[] parseDateTime(String userInput, TaskType taskType)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime[] result;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseDateTime.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d parseDateTimeForAssignment(userInput);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d parseDateTimeForOtherTaskType(userInput);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The result of parseDateTime from TaskParser is null, please check.\\n\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseDateTime.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} for the module of the task."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Module parseModule(String userInput, ObservableList\u003cModule\u003e modules)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseModule.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        Module result;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ModuleCode.isModuleCode(userInput)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cModule\u003e tempModules \u003d modules.stream()"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(m -\u003e m.getModuleCode().toString().equals(userInput.toUpperCase()))"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                if (tempModules.isEmpty()) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                    logger.log(Level.WARNING, LOG_TAG + \": No such module error.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"noSuchModuleError\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                result \u003d tempModules.get(0);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                int index \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                if (index \u003c 0 || index \u003e\u003d modules.size()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                    logger.log(Level.WARNING, LOG_TAG + \": Invalid index range error.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                result \u003d modules.get(index);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The result of parseModule from TaskParser is null, please check.\\n\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseModule with value \" + result.toString());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} for the type of the task."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param size"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public static TaskType parseType(String userInput, int size)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        throws AddOrEditTaskCommandException, NumberFormatException {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseType.\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Empty input error.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e size) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": Invalid index range error.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The result of parseType from TaskParser is null, please check.\\n\";"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseType with value \" + result.toString());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} for weight of the task."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    public static double parseWeight(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        double result;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseWeight\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Double.parseDouble(userInput);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003c 0.0 || result \u003e 100.0) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": Wrong weight range error.\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"wrongWeightRangeError\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"wrongWeightFormatError\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseWeight with value \" + result);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parse the {@code userInput} for the estimated time needed to complete the task."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws AddOrEditTaskCommandException"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    public static double parseTimeCost(String userInput) throws AddOrEditTaskCommandException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of parseTimeCost \");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        double result;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Double.parseDouble(userInput);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003c 0.0) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": Wrong estimated time range error.\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"wrongEstimatedTimeRangeError\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AddOrEditTaskCommandException(\"wrongEstimatedTimeFormatError\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parseTimeCost with value \" + result);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 22,
      "-": 307
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/TimeParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a TimeParser, which can parse String to dateTime or parse dateTime to String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TimeParser\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(TimeParser.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} to LocalDateTime variable."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return LocalDateTime when {@code userInput} format is valid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InteractiveCommandException when {@code userInput} format is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalDateTime parseDateTime(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to parse date time.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime inputTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            inputTime \u003d LocalDateTime.parse(userInput.trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InteractiveCommandException(\"dataTimeFormatError\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assert inputTime !\u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The result of time parsing is null, please check.\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parsing date time.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return inputTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} to LocalDate variable."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return LocalDate when {@code userInput} format is valid."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InteractiveCommandException when {@code userInput} format is invalid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalDate parseDate(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to parse date.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDate inputDate \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            inputDate \u003d LocalDate.parse(userInput.trim(), DATE_FORMAT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InteractiveCommandException(\"dataFormatError\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assert inputDate !\u003d null"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The result of time parsing is null, please check.\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of parsing date.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return inputDate;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts LocalDateTime variable {@code dateTime} to a String as HH:mm dd/MM/yyyy format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String as HH:mm dd/MM/yyyy format"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDateTimeString(LocalDateTime dateTime) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to get date time string.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(dateTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        String min \u003d dateTime.getMinute() \u003c 10 ? \"0\" + dateTime.getMinute()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"\" + dateTime.getMinute();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        String hour \u003d dateTime.getHour() \u003c 10 ? \"0\" + dateTime.getHour()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"\" + dateTime.getHour();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String day \u003d dateTime.getDayOfMonth() \u003c 10 ? \"0\" + dateTime.getDayOfMonth()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"\" + dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        String month \u003d dateTime.getMonthValue() \u003c 10 ? \"0\" + dateTime.getMonthValue()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"\" + dateTime.getMonthValue();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !(min.isBlank() || hour.isBlank() || day.isBlank() || month.isBlank())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"There is blank value in min, hour, day and/or month when get DateTimeString, please check.\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of getting date time string.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return hour + \":\" + min"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            + \" \" + day + \"/\" + month + \"/\" + dateTime.getYear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts LocalDateTime variable {@code date} to a String as dd/MM/yyyy format."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String as dd/MM/yyyy format"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDateString(LocalDate date) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to get date string.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        String day \u003d date.getDayOfMonth() \u003c 10 ? \"0\" + date.getDayOfMonth()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"\" + date.getDayOfMonth();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        String month \u003d date.getMonthValue() \u003c 10 ? \"0\" + date.getMonthValue()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"\" + date.getMonthValue();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !(day.isBlank() || month.isBlank())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"There is blank value in day and/or month when get DateTimeString, please check.\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of getting date string.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return day + \"/\" + month + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 2,
      "wyt-sonia": 13,
      "-": 112
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/exceptions/ParseException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a parse error encountered by a parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParseException extends IllegalValueException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/CalendarViewCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.CalendarViewCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Parses the date for calendar view command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewCommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses the user input date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param userInput input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @throws InteractiveCommandException too long away/ incorrect format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static LocalDate parseDate(String userInput) throws InteractiveCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate selectedDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            selectedDate \u003d TimeParser.parseDate(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (InteractiveCommandException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CalendarViewCommandException(\"dateFormatError\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (Math.abs(selectedDate.getYear() - LocalDate.now().getYear()) \u003e 50) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new CalendarViewCommandException(\"tooLongAway\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return selectedDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "gx-huang": 31
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/DeleteTaskCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parses the index for a delete command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static int parseIndex(String userInput) throws DeleteTaskCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int result;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DeleteTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new DeleteTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DeleteTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 33,
      "wyt-sonia": 2
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/FilterTaskCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.FilterTaskCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Parses the index for a filter command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommandParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static TaskStatus parseStatusIndex(String userInput) throws FilterTaskCommandException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskStatus result;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e TaskStatus.getTaskStatusList().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new FilterTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d TaskStatus.getTaskStatusList().get(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static int parseOptionIndex(String userInput) throws FilterTaskCommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int result;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e 2 || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new FilterTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d index;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parse the {@code userInput} for index value."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @return integer index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws InteractiveCommandException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static TaskType parseTypeIndex(String userInput) throws FilterTaskCommandException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskType result;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (index \u003e TaskType.getTaskTypes().length || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                throw new FilterTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                result \u003d TaskType.getTaskTypes()[index - 1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new FilterTaskCommandException(\"wrongIndexFormatError\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 80,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/AddOrEditTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an AddOrEditTaskCommandException which handles exceptions for"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * add and edit task commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddOrEditTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an AddOrEditTaskCommandException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddOrEditTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 17
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ArchiveTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an ArchiveTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 1,
      "gx-huang": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/CalendarViewCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Exception class for calendar view command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarViewCommandException(String errorType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ClearTasksCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a ClearTasksCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an ClearTasksCommandException with {@code errorType}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ClearTasksCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/CompleteTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a CompleteTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a CompleteTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 9,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DeleteTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DeleteTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a DeleteTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 9,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/DueSoonRefreshCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DueSoonRefreshCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonRefreshCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a DueSoonRefreshCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonRefreshCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 9,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ExitTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an ExitTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an ExitTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 9,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/FilterTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a FilterTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a FilterTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param errorType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public FilterTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 10,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/InteractiveCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an InteractiveCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InteractiveCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InteractiveCommandException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"unKnownException\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Unknown problem happened, please quit this command or relaunch me.\\n\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"If you still face this error, you may have to contact my developer at: \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"https://github.com/AY1920S2-CS2103T-W16-3/main/blob/master/docs/ContactUs.adoc\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"emptyInputError\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The input is empty, please check again.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"moduleWeightOverloadError\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The maximum sum of task\u0027s weights under the same module is 100.0, please check again.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskCompletedError\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The task you chose is completed already\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"specialCharInputError\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The task name contains special character, please check again.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskNameLengthError\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The maximum length of task name is 20 characters, please check again.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"changeAssignmentToOtherTaskTypeError\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Due to the deadline/Duration format is different from assignment and the rest task types, \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"we currently don\u0027t support \\\"Assignment -\u003e Another Task Type\\\" editing.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"changeOtherTaskTypeToAssignmentError\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Due to the deadline/Duration format is different from assignment and the rest task types, \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"we currently don\u0027t support \\\"Another Task Type -\u003e Assignment\\\" editing.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskDescriptionLengthError\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The maximum length of task description is 300 characters, please check again.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongWeightFormatError\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter decimal number for task task weight.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongWeightRangeError\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The weight should be from 0.0 to 100.0.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"invalidInputError\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            errorMessage \u003d \"This is not a valid input.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongEstimatedTimeFormatError\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter decimal number for the number of hours the task might take.\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongEstimatedTimeRangeError\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter a positive number for the number of hours the task might take.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noSuchModuleError\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Could not find the module based on the module code entered, please check again.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"duplicateModuleNameError\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Detected duplicate module name. Please key in another module name.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"duplicateModuleCodeError\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Detected duplicate module code. Please key in another module code.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongModuleCodeFormatError\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid module code. Please key in module in the correct format. \\n\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" Module code format:\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" include a 2-3 letter prefix,\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" a 4-digit number,\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" then a postfix (Optional).\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" E.g. BA1001, CS2030J, LSM2040C\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noChangeFromOriginalModuleNameError\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter a different module name.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"noChangeFromOriginalModuleCodeError\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Please enter a different module code.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidIndexRangeError\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"invalidOptionRangeError\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The option index entered is out of range, please check again.\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongIndexFormatError\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"wrongOptionFormatError\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"The format of option index entered is invalid, please enter an integer.\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"dataTimeFormatError\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time format, please check again.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"pastDateTime\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, please enter a time in the future.\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"eventEndBeforeStartError\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            errorMessage \u003d \"Invalid date time, the end date you entered is \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"not after the start date, please check again.\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case \"dateFormatError\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            errorMessage \u003d \"Invalid date format, please follow the format below:\\n\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case \"tooLongAway\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            errorMessage \u003d \"Date too far apart from current date, please input a more realistic date\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorType() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 3,
      "wyt-sonia": 135,
      "-": 4,
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/SortTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represent a SortTaskCommandException that will be throw when there is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * index format and range error."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a SortTaskCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/UnarchiveTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an UnarchiveTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UnarchiveTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UnarchiveTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "gx-huang": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/logic/parser/interactivecommandparser/exceptions/ViewRenamedTaskCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents an ViewRenamedTaskCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ViewRenamedTaskCommandException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ViewRenamedTaskCommandException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 12
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code Predicate} that always evaluate to true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void clearDueSoonList(ReadOnlyStudyBuddy studyBuddy);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void forceAddDueSoonTask(Task task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a duplicate task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param originalTask original task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addDuplicateTask(Task task, Task originalTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Unarchives a duplicate task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void unarchiveDuplicateTask(Task task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets the user prefs\u0027 study buddy file path."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setStudyBuddyFilePath(Path studyBuddyFilePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the StudyBuddy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ReadOnlyStudyBuddy getStudyBuddy();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Replaces study buddy data with the data in {@code studyBuddy}."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void setStudyBuddy(ReadOnlyStudyBuddy studyBuddy);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    boolean hasTask(Task task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * completes the given task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The task must exist in the study buddy."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void completeTask(Task target);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task name."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskName(Task target, String newTaskName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task description."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskDescription the new description of the task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskDescription(Task target, String newTaskDescription);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task weight."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskWeight the new weight of the task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskWeight(Task target, double newTaskWeight);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task estimated time cost."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskTimeCost the new time cost of the task"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskTimeCost(Task target, double newTaskTimeCost);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task type."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskType(Task target, TaskType newTaskType);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task date time."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTaskDateTime(Task target, LocalDateTime[] newDateTimes);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void setTaskMod(Task target, Module mod) throws ModuleException;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the given task."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void deleteTask(Task task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Archives the given task."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    void archiveTask(Task task);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Moves an archived task back to main taskList."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    void unarchiveTask(Task task);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the given task to the due soon list."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addDueSoonTask(Task task);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the given task to the main list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task must not already exist in the study buddy."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void addTaskToMainList(Task task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the given task from the main list."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void deleteTaskFromMainList(Task task);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds the given task."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code task} must not already exist in the task list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void addTask(Task task);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void sortDueSoonTasks();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void setTask(Task target, Task editedTask);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    boolean hasMod(Module mod);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    void addMod(Module mod);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void changeModName(Module oldMod, Module newMod) throws ModuleException;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void changeModCode(Module oldMod, Module newMod) throws ModuleException;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void deleteMod(Module mod) throws ModuleException;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the filtered task list"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredTaskList();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredArchivedTaskList();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a List of modules"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ObservableList\u003cModule\u003e getFilteredModuleList();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the filtered archived task list."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getFilteredDueSoonTaskList();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the filter of the filtered task list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void sortTasks(String keyword);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 35,
      "souwmyaa": 58,
      "aegis-bot": 11,
      "wyt-sonia": 81,
      "-": 41,
      "gx-huang": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ModelManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the in-memory model of the study buddy data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddy studyBuddy;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final FilteredList\u003cModule\u003e filteredModules;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredArchiveTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final FilteredList\u003cTask\u003e filteredDueSoonTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Initializes a ModelManager with the given studyBuddy and userPrefs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ModelManager(ReadOnlyStudyBuddy studyBuddy, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(studyBuddy.getTaskList(), userPrefs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(\"Initializing with study buddy: \" + studyBuddy + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy \u003d new StudyBuddy(studyBuddy);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getTaskList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredModules \u003d new FilteredList\u003c\u003e(this.studyBuddy.getModuleList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredArchiveTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getArchivedList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        filteredDueSoonTasks \u003d new FilteredList\u003c\u003e(this.studyBuddy.getDueSoonList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this(new StudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return userPrefs.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddyFilePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(studyBuddyFilePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudyBuddy \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddy(ReadOnlyStudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy.resetData(studyBuddy);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void clearDueSoonList(ReadOnlyStudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy.clearDueSoon(studyBuddy);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.hasTask(task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.completeTask(target);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String taskName) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskName(target, taskName);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskWeight(Task target, double taskWeight) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        studyBuddy.setTaskWeight(target, taskWeight);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskTimeCost(Task target, double taskTiemCost) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        studyBuddy.setTaskTimeCost(target, taskTiemCost);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskDescription(Task target, String taskDescription) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        studyBuddy.setTaskDescription(target, taskDescription);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newTaskDateTime) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTaskDateTime(target, newTaskDateTime);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskMod(Task target, Module mod) throws ModuleException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.setModuleInTask(target, mod);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.removeTask(target);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteDueSoonTask(Task target) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.updateDeleteDueSoon(target);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.sortTasks(keyword);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.sortDueSoonTasks();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        studyBuddy.archiveTask(task);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void unarchiveTask(Task task) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        studyBuddy.unarchiveTask(task);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void unarchiveDuplicateTask(Task task) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.unarchiveDuplicateTask(task);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.updateAddDueSoon(task);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void forceAddDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addDueSoonTask(task);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(mod);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.hasModule(mod);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDuplicateTask(Task task, Task originalTask) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //ArrayList\u003cTask\u003e currentTasks \u003d Task.getCurrentTasks();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //int index \u003d currentTasks.indexOf(task);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //Task originalTask \u003d currentTasks.get(index);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addDuplicateTask(task, originalTask);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * STILL NEEDS MORE REFINEMENT DUE TO ABSENCE OF UpdateModuleList."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param mod"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addMod(Module mod) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addModule(mod);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the task to the main list only."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addTaskToMainList(Task task) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTaskToMainList(task);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the task only from main list."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTaskFromMainList(Task task) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.deleteTaskFromMainList(task);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModName(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.changeModuleName(oldMod, newMod);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModCode(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.changeModuleCode(oldMod, newMod);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void deleteMod(Module mod) throws ModuleException {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        studyBuddy.deleteMod(mod);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.setTasks(target, editedTask);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code versionedStudyBuddy}"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return filteredArchiveTasks;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return filteredModules;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return filteredDueSoonTasks;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        filteredTasks.setPredicate(predicate);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy.equals(other.studyBuddy)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredTasks.equals(other.filteredTasks)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 filteredDueSoonTasks.equals(other.filteredDueSoonTasks)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u0026\u0026 filteredArchiveTasks.equals(other.filteredArchiveTasks);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 31,
      "souwmyaa": 103,
      "aegis-bot": 36,
      "wyt-sonia": 53,
      "-": 86,
      "gx-huang": 20
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ReadOnlyStudyBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Unmodifiable view of an study buddy"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the persons list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * This list will not contain any duplicate persons."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    ObservableList\u003cTask\u003e getArchivedList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    ObservableList\u003cTask\u003e getDueSoonList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ObservableList\u003cModule\u003e getModuleList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns an unmodifiable view of the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This list will not contain any duplicate tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ObservableList\u003cTask\u003e getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Statistics"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    List\u003cInteger\u003e getCompleteCountList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    List\u003cInteger\u003e getOverdueCountList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ScoreStats getScoreStats();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    GeneralStats getGeneralStats();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 20,
      "souwmyaa": 3,
      "aegis-bot": 1,
      "wyt-sonia": 7,
      "-": 12,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/ReadOnlyUserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/StudyBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.CompletionStats;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.OverdueStats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.SetGoalInteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.panel.ProductivityPanel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Wraps all data at the study buddy"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Duplicates are allowed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddy implements ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final UniqueTaskList archivedTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList dueSoonTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final UniqueTaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ModuleList moduleList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final CompletionStats completionStats;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final OverdueStats overdueStats;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final GeneralStats generalStats;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Statistics statistics;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final ScoreStats scoreStats;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completionStats \u003d new CompletionStats();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        overdueStats \u003d new OverdueStats();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats \u003d new GeneralStats();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats \u003d new ScoreStats();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // the singleton instance of statistics is created here"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics \u003d new Statistics(generalStats, completionStats, overdueStats, scoreStats);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        UniqueTaskList.setStatistics(statistics);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task.setStatistics(statistics);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ProductivityPanel.setStatistics(statistics);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        SetGoalInteractivePrompt.setStatistics(statistics);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Creates an StudyBuddy using the Tasks in the {@code toBeCopied}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy(ReadOnlyStudyBuddy toBeCopied) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Statistics"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Statistics getStatistics() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return statistics;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getCompleteCountList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completionStats.getCompleteCountList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getOverdueCountList() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return overdueStats.getOverdueCountList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public GeneralStats getGeneralStats() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return generalStats;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ScoreStats getScoreStats() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of the task list with {@code tasks}."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks.setTasks(tasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the given task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(editedTask);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.setTask(target, editedTask);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.sortTasks(keyword);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void sortDueSoonTasks() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.sortTasks(\"deadline / task start date\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Returns true if a task with the same identity as {@code task} exists in the task list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        requireNonNull(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return tasks.isContains(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code StudyBuddy}."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void removeTask(Task key) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.remove(key);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateDeleteDueSoon(key);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks if task belongs in Due Soon list and deletes it"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void updateDeleteDueSoon(Task p) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (this.getDueSoonList().contains(p)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.remove(p);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Removes {@code key} from this {@code StudyBuddy}."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * {@code key} must exist in the task list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setArchivedTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.archivedTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setDueSoonTasks(List\u003cTask\u003e aTasks) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.dueSoonTasks.setTasks(aTasks);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setCompleteList(List\u003cInteger\u003e completeList) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.completionStats.setCompleteCountList(completeList);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setOverdueList(List\u003cInteger\u003e overdueList) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.overdueStats.setOverdueCountList(overdueList);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Resets the existing data of this {@code StudyBuddy} with {@code newData}."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        setArchivedTasks(newData.getArchivedList());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setDueSoonTasks(newData.getDueSoonList());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTasks(newData.getTaskList());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setModuleList(newData.getModuleList());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setCompleteList(newData.getCompleteCountList());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setOverdueList(newData.getOverdueCountList());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.copy(newData.getGeneralStats());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats.copy(newData.getScoreStats());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void clearDueSoon(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setDueSoonTasks(newData.getDueSoonList());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.add(task);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //// task-level operations"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds an archived person to the study buddy."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param p must not already exist in the study buddy."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void archiveTask(Task p) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.remove(p);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateDeleteDueSoon(p);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(p);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Adds to archive task list. (For Json files)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void addArchiveTask(Task p) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(p);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Moves an archived task back to main task list."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param p must not already exist in study buddy."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void unarchiveTask(Task p) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.remove(p);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateAddDueSoon(p);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.add(p);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a duplicate task to the main list."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param originalTask"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addDuplicateTask(Task task, Task originalTask) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String originalTaskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        while (tasks.isContains(task)) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            originalTask.incrementDuplicate();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            int number \u003d originalTask.getDuplicate();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            String newTaskName \u003d originalTaskName + \"(\" + number + \")\";"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            task.setTaskName(newTaskName);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateAddDueSoon(task);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds the task only to the main list."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p task"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void addTaskToMainList(Task p) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.add(p);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Deletes the task only from main list."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p task"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void deleteTaskFromMainList(Task p) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        tasks.remove(p);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Unarchives a duplicated task."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param p task"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void unarchiveDuplicateTask(Task p) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        archivedTasks.remove(p);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        updateAddDueSoon(p);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a module to the ModuleList."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            moduleList.add(module);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            System.out.println(\"AddModule Failed, from studyBuddy.addModule()\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Change Module Name."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleName(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshAllModuleTaskList(oldModule, newModule);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.changeModuleName(oldModule, newModule);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Change Module Code."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleCode(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshAllModuleTaskList(oldModule, newModule);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.changeModuleCode(oldModule, newModule);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Delete a existing mod. Transfers all task with the existing mod to emptyMod."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void deleteMod(Module module) throws ModuleException {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshAllModuleTaskList(module, new EmptyModule());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.remove(module);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void refreshAllModuleTaskList(Module oldModule, Module newModule) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshModuleCodeTaskList(tasks, oldModule, newModule);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshModuleCodeTaskList(archivedTasks, oldModule, newModule);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        refreshModuleCodeTaskList(dueSoonTasks, oldModule, newModule);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * performs setModule(newMod) for all task with oldMod within the taskList."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void refreshModuleCodeTaskList(UniqueTaskList taskList, Module oldModule, Module newModule) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskList.forEach(x -\u003e {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (x.getModule().equals(oldModule)) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                x.setModule(newModule);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the task list."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (t.isDueSoon()) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dueSoonTasks.add(t);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sortDueSoonTasks();"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        tasks.completeTask(target);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskName(target, newTaskName);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskDescription(Task target, String newTaskDescription) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.setTaskDescription(target, newTaskDescription);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskTimeCost(Task target, double newTaskTimeCost) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.setTaskTimeCost(target, newTaskTimeCost);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskWeight(Task target, double newTaskWeight) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.setTaskWeight(target, newTaskWeight);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskType(target, newTaskType);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.setTaskDateTime(target, newDateTimes);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds task to Due Soon list if it is Due Soon."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param target"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void updateAddDueSoon(Task target) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!dueSoonTasks.isContains(target)) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (target.isDueSoon()) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                dueSoonTasks.add(target);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                sortDueSoonTasks();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setModuleInTask(Task target, Module module) throws ModuleException {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (moduleList.isContains(module) || module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tasks.setTaskMod(target, module);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Module does not exist in studyBuddy!\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return tasks.asUnmodifiableObservableList().size() + \" tasks\";"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archivedTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonTasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return tasks.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleList.getInternalList();"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.moduleList.setModuleList(modules);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean hasModule(Module module) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return moduleList.isContains(module);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return tasks.hashCode();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            || (other instanceof StudyBuddy // instanceof handles nulls"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 tasks.equals(((StudyBuddy) other).tasks));"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 88,
      "souwmyaa": 117,
      "aegis-bot": 158,
      "wyt-sonia": 40,
      "-": 5,
      "gx-huang": 51
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/UserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Path studyBuddyFilePath \u003d Paths.get(\"data\", \"taskList.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public UserPrefs() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        setStudyBuddyFilePath(newUserPrefs.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyFilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddyFilePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddyFilePath \u003d studyBuddyFilePath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Objects.hash(guiSettings, studyBuddyFilePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 studyBuddyFilePath.equals(o.studyBuddyFilePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + studyBuddyFilePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 10,
      "wyt-sonia": 4,
      "-": 72
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/EmptyModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Placeholder module for task with no modules allocated"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EmptyModule extends Module {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public EmptyModule() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(\"No Module Allocated\", \"OO0000O\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 8,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * packages task into various modules that the student have. Each module has list of task, taken from the main TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Identified by ModuleCode instead of ModuleName to minimise errors."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cTask\u003e internalTaskList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String moduleName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleCode moduleCode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Constructs a Module. Will check for any duplicates in the moduleList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module(String moduleName, String fullModuleCode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Same as previous constructor, but a module without a name."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param fullModuleCode"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Module(String fullModuleCode) throws ModuleException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d new ModuleCode(fullModuleCode);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.moduleCode \u003d new ModuleCode(\"OO0000O\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            System.out.println(\"from Module(). ModuleCode is invalid!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * returns whether a Task is inside the internalList of this module."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toCheck"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContains(Task toCheck) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toAdd"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws DuplicateTaskException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isContains(toAdd)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalTaskList.add(toAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Designed to add task from another taskList to this."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toAdd"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws DuplicateTaskException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addAll(ObservableList\u003cTask\u003e toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!toAdd.filtered(x -\u003e isContains(x)).isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalTaskList.addAll(toAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes a task from the module list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param toRemove"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @throws TaskNotFoundException"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isContains(toRemove)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalTaskList.remove(toRemove);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Compares moduleCode instead of moduleName."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param other object, possibly a module"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other instanceof Module) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ModuleCode otherModuleCode \u003d ((Module) other).moduleCode;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.moduleCode.equals(otherModuleCode);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getModuleName() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleName;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleName(String moduleName) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ModuleCode getModuleCode() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setModuleCode(String moduleCode) throws ModuleException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d new ModuleCode(moduleCode);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e getInternalTaskList() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalTaskList;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setInternalTaskList(ObservableList\u003cTask\u003e internalTaskList) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.internalTaskList \u003d internalTaskList;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Takes in an ObservableList of Task, filters it, then setInternalTaskList()."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param externalTaskList"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void filterAndSetInternalTaskList(ObservableList\u003cTask\u003e externalTaskList) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e collectedTasks \u003d externalTaskList.filtered(x -\u003e x.getModule().equals(this));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setInternalTaskList(collectedTasks);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return getModuleCode().toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 15,
      "souwmyaa": 2,
      "aegis-bot": 135,
      "wyt-sonia": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/ModuleCode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * ModuleCode. Ensures that the module code keyed in matches the proper format. XX0000."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCode {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String prefix;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String postfix;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ModuleCode(String fullModuleCode) throws ModuleException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (fullModuleCode.length() \u003e 8) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.prefix \u003d parsePrefix(fullModuleCode);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.number \u003d parseNumber(fullModuleCode);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.postfix \u003d parsePostfix(fullModuleCode);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the {@code userInput} is module code."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if {@code userInput} is a valid module code."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static boolean isModuleCode(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isValideModuleCode \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parsePrefix(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parseNumber(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            parsePostfix(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (ModuleException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            isValideModuleCode \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isValideModuleCode;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses prefix from the input. Also, Ensure at least the first 2 digits are alphabetical."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static String parsePrefix(String input) throws ModuleException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        IntStream.range(0, input.toCharArray().length)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .mapToObj(i -\u003e input.toCharArray()[i]).takeWhile(x -\u003e Character.isAlphabetic(x))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .forEach(x -\u003e builder.append(x));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (builder.toString().length() \u003c 2 || builder.toString().length() \u003e 3) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return builder.toString().toUpperCase();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Parse the number part of the module code and make sure the number part is at most 4 digits."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static int parseNumber(String input) throws ModuleException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        IntStream.range(0, input.toCharArray().length)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .mapToObj(i -\u003e input.toCharArray()[i]).filter(x -\u003e Character.isDigit(x))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .forEach(x -\u003e builder.append(x));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (builder.toString().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return Integer.parseInt(builder.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses postfix from the input to ensure correctness of moduleCode."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static String parsePostfix(String input) throws ModuleException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        IntStream.range(0, input.toCharArray().length)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .mapToObj(i -\u003e input.toCharArray()[i]).dropWhile(x -\u003e Character.isAlphabetic(x))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .dropWhile(x -\u003e Character.isDigit(x)).forEach(x -\u003e builder.append(x));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (builder.toString().length() \u003c 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return builder.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPrefix() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int getNumber() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String getPostfix() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return postfix;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (object instanceof ModuleCode) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (this.getPrefix().equals(((ModuleCode) object).prefix)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u0026\u0026 (this.getNumber() \u003d\u003d ((ModuleCode) object).number)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u0026\u0026 this.getPostfix().equals(((ModuleCode) object).postfix)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (object instanceof String) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (this.toString().equals(((String) object).toUpperCase())) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return prefix + String.format(\"%04d\", number) + postfix;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "aegis-bot": 99,
      "wyt-sonia": 34
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/ModuleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * List of Modules. Checks for duplicates. Will be stored in Json."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * To be executed every time whenever a module is added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return if there is a duplicate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContains(Module module) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        final Module moduleForPredicate \u003d module;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.contains(moduleForPredicate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * To be executed every time whenever a module is added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param string moduleName"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return if there is a duplicate name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContainsDuplicateName(String string) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FilteredList\u003cModule\u003e filteredList \u003d internalList.filtered((x) -\u003e x.getModuleName()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .toLowerCase().equals(string.toLowerCase()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return !filteredList.isEmpty();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cModule\u003e getInternalList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * checks for duplicate modules/names first, then add into the moduleList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Moves Empty module to the back of the internalList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module to be added to the ModuleList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void add(Module module) throws ModuleException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(module)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Duplicate modules\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (this.isContainsDuplicateName(module.getModuleName())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Duplicate module name\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.add(module);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            shiftEmptyModBack();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * relocates Empty Module to the back of the internalList if it exist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void shiftEmptyModBack() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //check last mod for Empty Module"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (internalList.get(internalList.size() - 1).equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //Do nothing"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else { //if it is not empty"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (internalList.contains(new EmptyModule())) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                int emptyIndex \u003d internalList.indexOf(new EmptyModule());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                swap(emptyIndex, emptyIndex + 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * swaps 2 elements in the internalList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param j"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void swap(int i, int j) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module firstMod \u003d internalList.get(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module secondMod \u003d internalList.get(j);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(i, secondMod);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(j, firstMod);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes module from the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void remove(Module module) throws ModuleException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(module)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.remove(module);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Module does not exist\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Changes moduleName of a certain mod. Checks for existence of origin mod \u0026 duplicity of new name."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleName(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(oldModule) \u0026\u0026 !this.isContainsDuplicateName(newModule.getModuleName())) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int oldIndex \u003d internalList.indexOf(oldModule);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(oldIndex, newModule);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isContains(oldModule)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new ModuleException(\"Module does not exist\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isContainsDuplicateName(newModule.getModuleName())) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new ModuleException(\"A duplicate module name already exist.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Changes moduleCode of a certain mod. Checks for existence of origin mod \u0026 duplicity of new code."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param oldModule"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param newModule"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleCode(Module oldModule, Module newModule) throws ModuleException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(newModule)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"new module code is a duplicate!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (this.isContains(oldModule)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (!newModule.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newModule.setInternalTaskList(oldModule.getInternalTaskList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newModule.setInternalTaskList(getEmptyModule().getInternalTaskList());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newModule.addAll(oldModule.getInternalTaskList());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d this.indexOf(oldModule);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(index, newModule);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"module does not exist\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Retrieves a module with the original module name inside the moduleList."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param moduleCode"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws ModuleException"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Module get(String moduleCode) throws ModuleException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module moduleToFind \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.isContains(moduleToFind)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d this.internalList.indexOf(moduleToFind);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return this.internalList.get(index);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new ModuleException(\"Module Not Found\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module get(int index) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return this.internalList.get(index);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module getEmptyModule() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return this.internalList.get(internalList.size() - 1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModuleList(List\u003cModule\u003e replacement) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int indexOf(Module module) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.indexOf(module);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.size();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 1,
      "aegis-bot": 156,
      "wyt-sonia": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/module/exceptions/ModuleException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.model.module.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Exception for module code"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ModuleException extends InteractiveCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ModuleException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/CompletionStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Stores statistics about number of tasks completed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class CompletionStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * List that contains the count of completed task for each day"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private List\u003cInteger\u003e completeCountList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CompletionStats() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getCompleteCountList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completeCountList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setCompleteCountList(List\u003cInteger\u003e completeCountList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.completeCountList \u003d completeCountList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes an empty completeCount List"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            completeCountList.add(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the complete count at current day index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the task is completed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void complete(int dayIndex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int currentCount \u003d completeCountList.get(dayIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList.set(dayIndex, currentCount + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns number of task completed on the given day"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return number of tasks completed on the given day"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getDailyCompleteCount(int dayIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completeCountList.get(dayIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a list containing the number of tasks completed daily over the past 7 days"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a list containing the number of tasks completed daily over the past 7 days"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyCompleteCountList(int dayIndex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completeCountList.subList(dayIndex - 6, dayIndex + 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 65
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/GeneralStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * stores general statistics"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class GeneralStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int goal;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int streak;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private List\u003cBoolean\u003e isStreakAddedList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private GoalObserver goalObserver;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public GeneralStats() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goal \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        initStreakList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * sets the observer to be the given GoalObserver"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param goalObserver the given GoalObserver"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setObserver(GoalObserver goalObserver) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goalObserver \u003d goalObserver;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes a streak list with all false values"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initStreakList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        isStreakAddedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isStreakAddedList.add(false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Copies the values of this generalStats object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void copy(GeneralStats generalStats) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goal \u003d generalStats.getGoal();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.streak \u003d generalStats.getStreak();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.isStreakAddedList \u003d generalStats.getIsStreakAddedList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cBoolean\u003e getIsStreakAddedList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return isStreakAddedList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setGoal(int goal) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.goal \u003d goal;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (goalObserver !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            goalObserver.update();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getGoal() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return goal;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getStreak() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return streak;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * adds to the streak only if streak has not already been added today"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if streak is added"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean addStreak() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d StatsUtil.getDayIndex();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!isStreakAddedList.get(dayIndex)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            isStreakAddedList.set(dayIndex, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            streak +\u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 81
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/GoalObserver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Observes the goal field in generalStats"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public interface GoalObserver {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * updates the observer when goal is changed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void update();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/OverdueStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Stores statistics about number of Overdue tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class OverdueStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * A list containing daily number of Overdue tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private List\u003cInteger\u003e overdueCountList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public OverdueStats() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getOverdueCountList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return overdueCountList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setOverdueCountList(List\u003cInteger\u003e overdueCountList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.overdueCountList \u003d overdueCountList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * initializes an empty OverdueCountList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        overdueCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            overdueCountList.add(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the completeLate count at current day index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the task is completed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addOverdue(int dayIndex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int currentOverdueCount \u003d overdueCountList.get(dayIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        overdueCountList.set(dayIndex, currentOverdueCount + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns number of task completed late on the given day"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return number of tasks completed late on the given day"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getDailyOverdueCount(int dayIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return overdueCountList.get(dayIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyOverdueCountList(int dayIndex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return overdueCountList.subList(dayIndex - 6, dayIndex + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 48,
      "wyt-sonia": 13
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/ScoreStats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * stores information about the user\u0027s score"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ScoreStats {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int noviceScore \u003d 50;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int apprenticeScore \u003d 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int dukeScore \u003d 200;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int expertScore \u003d 300;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int masterScore \u003d 400;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int grandmasterScore \u003d 500;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int legendScore \u003d 700;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int sageScore \u003d 1000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final int enlightenedScore \u003d 2000;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * List that contains the user\u0027s score for each day"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private List\u003cInteger\u003e scoreList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private int currentScore;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ScoreStats() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.initList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getScoreList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setScoreList(List\u003cInteger\u003e scoreList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.scoreList \u003d scoreList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * initializes a scoreList with zero score for all days"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void initList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 366; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            scoreList.add(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * copies the currentScore and scoreList from the scoreStats"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param scoreStats the scoreStats to be copied from"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void copy(ScoreStats scoreStats) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.currentScore \u003d scoreStats.getCurrentScore();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.scoreList \u003d scoreStats.getScoreList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (scoreList.get(StatsUtil.getDayIndex()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            scoreList.set(StatsUtil.getDayIndex(), currentScore);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getCurrentScore() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return currentScore;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * increments the score at current day index"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day in which the score is to be added"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addScore(int dayIndex, int scoreToAdd) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        currentScore +\u003d scoreToAdd;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreList.set(dayIndex, currentScore);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns user\u0027s score on the given day"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s score on the given day"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getDailyScore(int dayIndex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreList.get(dayIndex);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a list containing the user\u0027s daily scores over the past 7 days"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dayIndex the day of interest"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a list containing the user\u0027s daily scores over the past 7 days"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyScores(int dayIndex) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyScores \u003d scoreList.subList(dayIndex - 6, dayIndex + 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int largestSoFar \u003d 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            int currentElement \u003d weeklyScores.get(i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (currentElement \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                weeklyScores.set(i, largestSoFar);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                largestSoFar \u003d currentElement;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return weeklyScores;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getRank() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Beginner\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Novice\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Apprentice\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Duke\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Expert\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Master\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Grandmaster\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Legend\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Sage\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"Enlightened\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getNextRank() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (noviceScore - currentScore) + \" PP more to become a Novice\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (apprenticeScore - currentScore) + \" PP more to get to Apprentice\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (dukeScore - currentScore) + \" PP more to become a Duke\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (expertScore - currentScore) + \" PP more to become an Expert\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (masterScore - currentScore) + \" PP more to become a Master\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (grandmasterScore - currentScore) + \" PP more to get to Grandmaster\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (legendScore - currentScore) + \" PP more to get to Legend\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (sageScore - currentScore) + \" PP more to get to Sage\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (enlightenedScore - currentScore) + \" PP more to be Enlightened\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return \"You have mastered the productivity and achieved enlightenment.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * returns the score required to achieve the next rank"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return score required"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreToNextRank() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (noviceScore - currentScore);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (apprenticeScore - currentScore);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (dukeScore - currentScore);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (expertScore - currentScore);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (masterScore - currentScore);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (grandmasterScore - currentScore);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (legendScore - currentScore);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (sageScore - currentScore);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return (enlightenedScore - currentScore);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the total score required for the current rank minus that of the previous rank"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return total score required for current rank"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreDifferenceForRank() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (currentScore \u003c noviceScore) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return noviceScore;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c apprenticeScore) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return apprenticeScore - noviceScore;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c dukeScore) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return dukeScore - apprenticeScore;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c expertScore) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return expertScore - dukeScore;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c masterScore) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return masterScore - expertScore;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c grandmasterScore) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return grandmasterScore - masterScore;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c legendScore) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return legendScore - grandmasterScore;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c sageScore) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return sageScore - legendScore;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else if (currentScore \u003c enlightenedScore) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return enlightenedScore - sageScore;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 212
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/Statistics.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Usage statistics for the user. These statistics are used on the productivity page."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private GeneralStats generalStats;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private CompletionStats completionStats;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private OverdueStats overdueStats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ScoreStats scoreStats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Statistics(GeneralStats generalStats, CompletionStats completionStats,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "          OverdueStats overdueStats, ScoreStats scoreStats) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.generalStats \u003d generalStats;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.completionStats \u003d completionStats;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.overdueStats \u003d overdueStats;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.scoreStats \u003d scoreStats;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Completion Stats"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Records the completed task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param completedTask the task that has just been completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void recordCompletedTask(Task completedTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d StatsUtil.getDayIndex();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addScore(10);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completionStats.complete(dayIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Records the added task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param addedTask"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void recordAddedTask(Task addedTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addScore(2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get number of tasks completed today"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return returns the number of tasks completed today"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getCompleteCountToday() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completionStats.getDailyCompleteCount(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getCompleteCountThisWeek() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyCompleteCountList \u003d completionStats.getWeeklyCompleteCountList(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return StatsUtil.sumIntegerList(weeklyCompleteCountList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyCompleteCountList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completionStats.getWeeklyCompleteCountList(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getOverdueCountThisWeek() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        List\u003cInteger\u003e weeklyOverdueCountList \u003d overdueStats.getWeeklyOverdueCountList(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return StatsUtil.sumIntegerList(weeklyOverdueCountList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Overdue stats"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Records an Overdue task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param overdueTask task that has gone Overdue"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void recordOverdueTask(Task overdueTask) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayIndex \u003d StatsUtil.getDayIndex();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        overdueStats.addOverdue(dayIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        addScore(-1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // Score stats"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get today\u0027s score"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return today\u0027s score"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreToday() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getDailyScore(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cInteger\u003e getWeeklyScores() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getWeeklyScores(StatsUtil.getDayIndex());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * adds to the current score"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param scoreToAdd score to be added"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addScore(int scoreToAdd) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats.addScore(StatsUtil.getDayIndex(), scoreToAdd);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * return user\u0027s rank"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s rank"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getRank() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getRank();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * return a String of the user\u0027s next rank"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s next rank"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getNextRank() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getNextRank();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * returns the score required to achieve the next rank"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return score required"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreToNextRank() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getScoreToNextRank();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // general stats"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setObserver(GoalObserver goalObserver) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.setObserver(goalObserver);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get user\u0027s goal for number of tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s goal"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getGoal() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return generalStats.getGoal();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * set user\u0027s goal"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param goal user\u0027s goal"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setGoal(int goal) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.setGoal(goal);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get user\u0027s current streak;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return user\u0027s streak"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getStreak() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return generalStats.getStreak();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * if streak has not already been added today, add 1 to the streak"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * and add score equivalent to daily goal"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void completeDailyGoal() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean isStreakAdded \u003d generalStats.addStreak();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isStreakAdded) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            addScore(getGoal());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the total score required for the current rank minus that of the previous rank"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return total score required for current rank"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getScoreDifferenceForRank() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return scoreStats.getScoreDifferenceForRank();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 165,
      "wyt-sonia": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/statistics/StatsUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.statistics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static java.time.temporal.TemporalAdjusters.firstDayOfYear;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Contains utility methods for handling statistics"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class StatsUtil {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * utility method to get the number of days between two LocalDateTime"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param first  the first LocalDateTime"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param second the second LocalDateTime"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the absolute difference in number of days between the two LocalDateTime"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int getDaysBetween(LocalDateTime first, LocalDateTime second) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return (int) Math.abs(ChronoUnit.DAYS.between(first, second));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get the current day, which is used as index for complete count list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the number of days from the start of year. 0 if the day is the start of year itself"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int getDayIndex() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime startOfYear \u003d now.with(firstDayOfYear());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return getDaysBetween(now, startOfYear);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * checks if the task is completed late"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param dueDate date that the task is due on"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return true if the task is completed late."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static boolean isLate(LocalDateTime dueDate) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return ChronoUnit.DAYS.between(now, dueDate) \u003c 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Sums a list of integers"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param integerList a list of integers"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the sum of the integers"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static int sumIntegerList(List\u003cInteger\u003e integerList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return integerList.stream()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .mapToInt(x -\u003e x)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            .sum();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * get a list of 7 days backtracking from the current day"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a list of 7 days backtracking from the current day"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static List\u003cString\u003e getDayList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e initialList \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            List.of(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        DayOfWeek dayOfWeek \u003d DayOfWeek.from(LocalDateTime.now());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int dayOfWeekValue \u003d dayOfWeek.getValue();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return initialList.subList(dayOfWeekValue, dayOfWeekValue + 7);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 70
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e, Cloneable {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The acceptable data and time format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int MINUTES_DIVISOR \u003d (1000 * 60);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int HOURS_DIVISOR \u003d (1000 * 60 * 60);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int DAYS_DIVISOR \u003d (1000 * 60 * 60 * 24);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final int MINUTES_IN_WEEK \u003d (7 * 24 * 60);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static ArrayList\u003cTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime finishDateTime;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DateFormat df \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Date dateObj \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int duplicate \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task(Module module, TaskType taskType, String taskName, String taskDescription, double weight,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus taskStatus, LocalDateTime[] dateTimes, double estimatedTimeCost,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription; //not covered yet"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight; //not covered yet"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost; //not covered yet"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task.statistics \u003d statistics;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void updateCurrentTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentTasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static ArrayList\u003cTask\u003e getCurrentTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return currentTasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void updateArchivedTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static ArrayList\u003cTask\u003e getArchivedTasks() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archivedTasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module getModule() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setModule(Module module) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (status) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"Pending\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"Finished\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            this.taskStatus \u003d TaskStatus.FINISHED;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Object clone() throws CloneNotSupportedException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return super.clone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public LocalDateTime getDueDate() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return getDateTimes()[0];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getTimeLeft() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String timeLeft \u003d \"Due: \";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dateObj \u003d new Date();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        long difference \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int daysBetween \u003d (int) (difference / DAYS_DIVISOR);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int hoursBetween \u003d ((int) (difference / HOURS_DIVISOR)) % 24;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        int minsBetween \u003d ((int) (difference / MINUTES_DIVISOR)) % 60;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (daysBetween !\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (daysBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + daysBetween + \" day \";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + daysBetween + \" days \";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (hoursBetween \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                return timeLeft;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (hoursBetween !\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (hoursBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + hoursBetween + \" hour \";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + hoursBetween + \" hours \";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (minsBetween !\u003d 0) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (minsBetween \u003d\u003d 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + minsBetween + \" min \";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                timeLeft \u003d timeLeft + minsBetween + \" mins \";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (daysBetween \u003d\u003d 0 \u0026\u0026 hoursBetween \u003d\u003d 0 \u0026\u0026 minsBetween \u003d\u003d 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            timeLeft \u003d timeLeft + \" now\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return timeLeft;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Updates the tasks status accordingly."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void freshStatus() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.taskStatus \u003d TaskStatus.DUE_SOON;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    statistics.recordOverdueTask(this);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.OVERDUE;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.dateTimes[0].isAfter(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.PENDING)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the status of the task is expired."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if the status of the task is expired."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isStatusExpired() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        boolean isExpired \u003d false;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.taskStatus !\u003d null \u0026\u0026 !this.taskStatus.equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isBefore(now) \u0026\u0026 !this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.dateTimes[0].isAfter(now) \u0026\u0026 this.taskStatus.equals(TaskStatus.OVERDUE)) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.isDueSoon() \u0026\u0026 !this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (!this.isDueSoon() \u0026\u0026 this.taskStatus.equals(TaskStatus.DUE_SOON)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                isExpired \u003d true;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isExpired;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getFinishDateTime() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return finishDateTime;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setFinishDateTime(LocalDateTime finishDateTime) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.finishDateTime \u003d finishDateTime;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public int getDuplicate() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return duplicate;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void incrementDuplicate() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.duplicate++;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void zeroDuplicate() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.duplicate \u003d 0;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskType(TaskType taskType) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskDescription(String taskDescription) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setWeight(double weight) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public TaskStatus getTaskStatus() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (taskStatus \u003d\u003d null) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskStatus \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isStatusExpired()) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                freshStatus();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return taskStatus;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskStatus(TaskStatus taskStatus) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else if (dateTimes.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            timeString \u003d TimeParser.getDateTimeString(dateTimes[0]) + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public LocalDateTime[] getDateTimes() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return dateTimes;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //need to add the outOfRangeExceptionHandler"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setDateTimes(LocalDateTime[] dateTimes) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.dateTimes \u003d dateTimes;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public double getEstimatedTimeCost() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return estimatedTimeCost;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setEstimatedTimeCost(double estimatedTimeCost) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getCreationDateTime() {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return creationDateTime;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setCreationDateTime(LocalDateTime creationDateTime) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.creationDateTime \u003d creationDateTime;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks if the task is Due Soon (next 7 days)."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return true if it is Due Soon, else false"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean isDueSoon() {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (getTaskStatus() !\u003d TaskStatus.FINISHED) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            df \u003d new SimpleDateFormat(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            dateObj \u003d new Date();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            long difference \u003d 0;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                difference \u003d df.parse(this.getTimeString()).getTime() - dateObj.getTime();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            float minsBetween \u003d (difference / MINUTES_DIVISOR);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return minsBetween \u003c\u003d MINUTES_IN_WEEK \u0026\u0026 minsBetween \u003e\u003d 0;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return Objects.hash(module, taskType, taskName, taskDescription, weight, taskStatus, dateTimes);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This defines a stronger notion of equality between two tasks."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof Task)) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task otherTask \u003d (Task) other;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription())"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getWeight() \u003d\u003d getWeight()"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getEstimatedTimeCost() \u003d\u003d getEstimatedTimeCost();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskString \u003d \"Task Name :\" + this.taskName + \"\\n\""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Code: \" + this.module.getModuleCode().toString() + \"\\n\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Type: \" + this.getTaskType().toString() + \"\\n\""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Deadline/Duration: \" + this.getTimeString() + \"\\n\""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Description: \" + this.taskDescription + \"\\n\""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task weight: \" + this.weight + \"\\n\""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Task Estimated Time Cost: \" + this.estimatedTimeCost + \" hrs\\n\";"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if both task of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * This defines a weaker notion of equality between two tasks."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean isSameTask(Task otherTask) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (otherTask \u003d\u003d this) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return otherTask !\u003d null"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskName().equals(getTaskName())"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getModule().equals(getModule())"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTimeString().equals(getTimeString())"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getWeight() \u003d\u003d (getWeight())"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getEstimatedTimeCost() \u003d\u003d (getEstimatedTimeCost())"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 otherTask.getTaskType().equals(getTaskType())"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription());"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Compare tasks by deadline/ start date."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Comparison by task name is handled in sort command class."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int result \u003d 0;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d -1;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (!this.dateTimes[0].isBefore(t.dateTimes[0])) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            result \u003d 1;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.taskType.equals(t.taskType)) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskName.compareTo(t.taskName);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d this.taskType.compareTo(t.taskType);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 14,
      "souwmyaa": 101,
      "aegis-bot": 160,
      "wyt-sonia": 130,
      "gx-huang": 9
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskField.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The fields of a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public enum TaskField {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_MODULE(\"Task module\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NAME(\"Task name\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_TYPE(\"Task type\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DATETIME(\"Task due date and time/ duration\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DESCRIPTION(\"Task description\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_WEIGHT(\"Task weight\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_ESTIMATED_TIME_COST(\"Estimated number of hour cost\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final String label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskField(String label) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static TaskField getTaskFieldFromNumber(int number) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (number) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_MODULE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_NAME;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_TYPE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_DATETIME;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_DESCRIPTION;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_WEIGHT;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return TASK_ESTIMATED_TIME_COST;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getFieldString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"1. \" + TASK_MODULE.label + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"2. \" + TASK_NAME.label + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"3. \" + TASK_TYPE.label + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"4. \" + TASK_DATETIME.label + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"5. \" + TASK_DESCRIPTION.label + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"6. \" + TASK_WEIGHT.label + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"7. \" + TASK_ESTIMATED_TIME_COST.label + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 32,
      "aegis-bot": 1,
      "wyt-sonia": 22
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskNameContainsKeywordsPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .anyMatch(keyword -\u003e StringUtil.isContainsWordIgnoreCase(task.getTaskName(), keyword));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 29,
      "souwmyaa": 1,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskRenamedPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task} has been renamed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskRenamedPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"[^a-z0-9 ]\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(task.getTaskName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return matcher.find();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof TaskStatusEqualPredicate);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 25
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskStatus.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the Task status."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public enum TaskStatus {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    FINISHED,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    DUE_SOON,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    OVERDUE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ArrayList\u003cTaskStatus\u003e getTaskStatusList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cTaskStatus\u003e taskStatuses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        taskStatuses.add(PENDING);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        taskStatuses.add(FINISHED);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        taskStatuses.add(DUE_SOON);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        taskStatuses.add(OVERDUE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskStatuses;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static TaskStatus getStatus(String status) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskStatus result \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"pending\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d PENDING;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"finished\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d FINISHED;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"due soon\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d DUE_SOON;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"overdue\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d OVERDUE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a TaskStatus enum back into a string, primarily for printing purposes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return string, either \"Pending\" or \"Finished\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public String convertToString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d \"Pending\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d \"Finished\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d \"Due Soon\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d \"Overdue\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 2,
      "wyt-sonia": 4,
      "-": 62
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskStatusEqualPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task}\u0027s {@code Status} matches the status provided."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskStatusEqualPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskStatus status;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskStatusEqualPredicate(TaskStatus status) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return task.getTaskStatus() \u003d\u003d status;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof TaskStatusEqualPredicate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the task types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    Assignment,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    Quiz,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    Presentation,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    Meeting,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    Exam,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    Others;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static TaskType[] taskTypes \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Assignment,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Quiz,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Presentation,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Meeting,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Exam,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Others"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static TaskType[] getTaskTypes() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskTypes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getTypeString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"1. Assignment\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"5. Exam\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"6. Others\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets related task type according to the {@code status} string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param status"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static TaskType getType(String status) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskType result \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (status.toLowerCase()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"assignment\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Assignment;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Quiz;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"presentation\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Presentation;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"meeting\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Meeting;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"exam\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Exam;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"others\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d Others;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assert result !\u003d null"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The input string does not match with any task type, please check.\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 4,
      "-": 67
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/TaskTypeEqualPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Tests that a {@code Task}\u0027s {@code Type} matches the type provided."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskTypeEqualPredicate implements Predicate\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskTypeEqualPredicate(TaskType type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean test(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return task.getTaskType() \u003d\u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                || (other instanceof TaskTypeEqualPredicate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/UniqueTaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a UniqueTaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class UniqueTaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Sets the statistics for unique task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param statistics completionStats used to record tasks completed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        UniqueTaskList.statistics \u003d statistics;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return internalList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns true if the list contains an equivalent task as the given argument."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isContains(Task toCheck) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must not already exist in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics.recordAddedTask(toAdd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the task {@code target} in the list with {@code editedTask}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task identity of {@code editedTask} must not be the same as another existing task in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(target, editedTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, editedTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Removes the equivalent task from the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * The task must exist in the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void remove(Task toRemove) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(UniqueTaskList replacement) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Replaces the contents of this list with {@code tasks}."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * {@code tasks} must not contain duplicate tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(tasks);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.setAll(tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            || (other instanceof UniqueTaskList // instanceof handles nulls"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Completes a task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void completeTask(Task target) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!internalList.contains(target)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            target.setStatus(\"Finished\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String finishDateTimeString \u003d TimeParser.getDateTimeString(LocalDateTime.now());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            target.setFinishDateTime(TimeParser.parseDateTime(finishDateTimeString));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            internalList.set(index, target);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // log statistics"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            statistics.recordCompletedTask(target);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task name."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskName the new name of the task"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setTaskName(Task target, String newTaskName) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskName);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskName(newTaskName);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        /*if (internalList.contains(target)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task estimated time cost."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskTimeCost the new estimated time cost of the task"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskTimeCost(Task target, double newTaskTimeCost) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(newTaskTimeCost);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        target.setEstimatedTimeCost(newTaskTimeCost);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task weight."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskWeight the new weight of the task"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskWeight(Task target, double newTaskWeight) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(newTaskWeight);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        target.setWeight(newTaskWeight);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Set the task description."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param newTaskDescription the new name of the task"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setTaskDescription(Task target, String newTaskDescription) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(newTaskDescription);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        target.setTaskDescription(newTaskDescription);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task type"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTaskType the new task type"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newTaskType);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setTaskType(newTaskType);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Set the task date time"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newDateTimes the new date and time"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        requireNonNull(newDateTimes);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        target.setDateTimes(newDateTimes);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Set module in task. Module will be checked for its existence outside this class"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * before this function is performed."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param target a task"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param module a module for the task to be assigned to"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void setTaskMod(Task target, Module module) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(target);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        requireNonNull(module);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        target.setModule(module);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        internalList.set(index, target);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sort tasks by the given {@code keyword}."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"deadline / task start date\")) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Task::compareTo);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"task name\")) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getTaskName));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXCollections.sort(internalList, Comparator.comparing(Task::getCreationDateTime));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 57,
      "souwmyaa": 17,
      "aegis-bot": 126,
      "wyt-sonia": 65
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/DuplicateTaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DuplicateTaskException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DuplicateTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DuplicateTaskException(String errorType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 3,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/TaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents an InteractiveCommandException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    protected String errorType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case \"duplicateTask\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            errorMessage \u003d \"Duplicate task! Please try again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String getErrorType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/task/exceptions/TaskNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a TaskNotFoundException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/model/util/SampleDataUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains utility methods for populating {@code StudyBuddy} with sample data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String LONG_DESC_WITH_300_CHAR \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String SHORT_DESC \u003d \"This is a short description.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module emptyModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2101\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2103T\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2105 \u003d new Module(\"Introduction to Computer Networks\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2105\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2106 \u003d new Module(\"Introduction to Operating Systems\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2106\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDuration1 \u003d {LocalDateTime.now().plusDays(3),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(7)};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDuration2 \u003d {LocalDateTime.now().plusDays(5),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(13)};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDuration1 \u003d {LocalDateTime.now().plusDays(10),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(17)};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDuration2 \u003d {LocalDateTime.now().plusDays(8),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().plusDays(12)};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] overdueDuration1 \u003d {LocalDateTime.now().minusDays(5),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().minusDays(3)};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] overdueDuration2 \u003d {LocalDateTime.now().minusDays(3),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime.now().minusDays(1)};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDateTime1 \u003d {LocalDateTime.now().plusDays(3)};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dueSoonDateTime2 \u003d {LocalDateTime.now().plusDays(5)};"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDateTime1 \u003d {LocalDateTime.now().plusDays(10)};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] pendingDateTime2 \u003d {LocalDateTime.now().plusDays(9)};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime pastDateTime1 \u003d LocalDateTime.now().minusDays(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime pastDateTime2 \u003d LocalDateTime.now().minusDays(6);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(emptyModule, TaskType.Others, \"Homework 1\", SHORT_DESC, 20.0,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, pendingDuration1, 5.0, pastDateTime2),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(emptyModule, TaskType.Presentation, \"Leadership Presentation 1\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 0.0, TaskStatus.FINISHED, dueSoonDuration1,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, pastDateTime1),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Quiz, \"CS2101 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                15.0, TaskStatus.PENDING, pendingDuration1, 2.0, pastDateTime1),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Group Meeting 1\", LONG_DESC_WITH_300_CHAR, 15.0,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, dueSoonDuration1, 5.0, pastDateTime2),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Assignment, \"CS2101 Ass 1\", LONG_DESC_WITH_300_CHAR, 20.0,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, pendingDateTime2, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 20.0, TaskStatus.FINISHED, dueSoonDuration1,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                13.0, pastDateTime2),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"CS2103T Ass 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                20.0, TaskStatus.PENDING, pendingDateTime1, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Meeting, \"Group Meeting\", LONG_DESC_WITH_300_CHAR, 0.0,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.OVERDUE, overdueDuration1, 15.0, pastDateTime2),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Quiz, \"CS2103T Quiz 1\", SHORT_DESC, 2.0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.PENDING, pendingDuration2, 2.0, pastDateTime1),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2103T, TaskType.Exam, \"CS2103T PT\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 20.0, TaskStatus.DUE_SOON, dueSoonDuration1,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                3.0, pastDateTime1),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Quiz, \"CS2105 Quiz 1\", LONG_DESC_WITH_300_CHAR,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, pendingDuration1, 5.0, pastDateTime2),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Others, \"Lab 2\", SHORT_DESC, 20.0,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, overdueDuration2, 15.0, pastDateTime1),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Assignment, \"Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.DUE_SOON, dueSoonDateTime2, 1.0, pastDateTime1),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2105, TaskType.Meeting, \"Meeting 1\", LONG_DESC_WITH_300_CHAR, 20.0,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, overdueDuration2, 15.0, pastDateTime2),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Assignment, \"Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.DUE_SOON, dueSoonDateTime1, 1.0, pastDateTime1),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Meeting, \"Meeting 1\", LONG_DESC_WITH_300_CHAR, 20.0,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.OVERDUE, overdueDuration2, 15.0, pastDateTime2),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Quiz, \"CS2106 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                2.0, TaskStatus.PENDING, pendingDuration1, 4.0, pastDateTime2),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2106, TaskType.Others, \"Lab 4\", LONG_DESC_WITH_300_CHAR, 8.0,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                TaskStatus.FINISHED, overdueDuration1, 25.0, pastDateTime2)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static Module[] getSampleModule() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module emptyModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \"CS2101\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2103T \u003d new Module(\"Software Engineering\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2103T\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2105 \u003d new Module(\"Introduction to Computer Networks\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2105\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module cs2106 \u003d new Module(\"Introduction to Operating Systems\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \"CS2106\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new Module[]{emptyModule, cs2101, cs2103T, cs2105, cs2106};"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static ReadOnlyStudyBuddy getSampleStudyBuddy() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy sampleSb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            sampleSb.addTask(sampleTask);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sampleTasks.add(sampleTask);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (Module mod: getSampleModule()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            sampleSb.addModule(mod);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task.updateCurrentTaskList(sampleTasks);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return sampleSb;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 5,
      "aegis-bot": 13,
      "wyt-sonia": 107,
      "-": 12
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonAdaptedModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * Only stores ModuleName \u0026 ModuleCode. Omits internalList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * internalList will only extract from taskList when called for search by module."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * when program terminates, internalList in Module will be wiped to minimise confusion."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class JsonAdaptedModule {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(@JsonProperty(\"moduleName\") String moduleName,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                             @JsonProperty(\"moduleCode\") String moduleCode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public JsonAdaptedModule(Module module) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleName \u003d module.getModuleName();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module.getModuleCode().toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public Module toModelType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new Module(moduleName, moduleCode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 32
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonAdaptedTask.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Jackson-friendly version of {@link Task}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "class JsonAdaptedTask {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskFinishDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double weight;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final String moduleCode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final double estimatedTimeCost;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final String taskCreationDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Constructs a {@code JsonAdaptedTask} with the given task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"taskType\") String taskType,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDateTime\") String taskDateTime,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"finishDateTime\") String taskFinishDateTime,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskDescription\") String taskDescription,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"module\") String module, @JsonProperty(\"weight\") Double weight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"estimatedTimeCost\") Double estimatedTimeCost,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"status\") String status,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           @JsonProperty(\"taskCreationDateTime\") String taskCreationDateTime) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskFinishDateTime \u003d taskFinishDateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleCode \u003d module;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.estimatedTimeCost \u003d estimatedTimeCost;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.taskCreationDateTime \u003d taskCreationDateTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts a given {@code Task} into this class for Jackson use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public JsonAdaptedTask(Task source) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String descString \u003d source.getTaskDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDescription \u003d descString.isBlank() ? \"\" : descString;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskName \u003d source.getTaskName();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskDateTime \u003d source.getTimeString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskFinishDateTime \u003d source.getFinishDateTime() !\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ? TimeParser.getDateTimeString(source.getFinishDateTime())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            : \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        estimatedTimeCost \u003d source.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        status \u003d source.getTaskStatus().toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskType \u003d source.getTaskType().toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        weight \u003d source.getWeight();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode \u003d source.getModule().toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskCreationDateTime \u003d TimeParser.getDateTimeString(source.getCreationDateTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // for datetime"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] timeTerms \u003d taskDateTime.split(\"-\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int count \u003d timeTerms.length;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (timeTerms.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[2];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[1] \u003d TimeParser.parseDateTime(timeTerms[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes \u003d new LocalDateTime[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes[0] \u003d TimeParser.parseDateTime(timeTerms[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime creationDateTime \u003d TimeParser.parseDateTime(taskCreationDateTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Task data \u003d new Task(new Module(moduleCode), TaskType.getType(taskType),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskName, taskDescription, weight,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskStatus.getStatus(status), dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!taskFinishDateTime.isBlank()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            LocalDateTime finishDateTime \u003d TimeParser.parseDateTime(taskFinishDateTime);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            data.setFinishDateTime(finishDateTime);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "aegis-bot": 4,
      "wyt-sonia": 100
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonSerializableStudyBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An Immutable StudyBuddy that is serializable to JSON format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "@JsonRootName(value \u003d \"studyBuddy\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class JsonSerializableStudyBuddy {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_ARCHIVED_TASK \u003d \"Archived contains duplicate task(s).\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MESSAGE_DUPLICATE_MODULES \u003d \"Module List contains duplicate module(s).\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    //private static final String MESSAGE_DUPLICATE_DUE_SOON_TASK \u003d \"Due soon list contains duplicate task(s).\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final List\u003cJsonAdaptedTask\u003e dueSoonTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cInteger\u003e completeCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cInteger\u003e overdueCountList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final GeneralStats generalStats \u003d new GeneralStats();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final ScoreStats scoreStats \u003d new ScoreStats();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Constructs a {@code JsonSerializableStudyBuddy} with the given tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public JsonSerializableStudyBuddy(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.tasks.addAll(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Converts a given {@code ReadOnlyStudyBuddy} into this class for Jackson use."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableStudyBuddy}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonSerializableStudyBuddy(ReadOnlyStudyBuddy source) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.addAll(source.getArchivedList().stream()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonTasks.addAll(source.getTaskList().stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .map(JsonAdaptedTask::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        completeCountList.addAll(source.getCompleteCountList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        overdueCountList.addAll(source.getOverdueCountList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generalStats.copy(source.getGeneralStats());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        scoreStats.copy(source.getScoreStats());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts this study buddy into the model\u0027s {@code StudyBuddy} object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (task.isStatusExpired()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                task.freshStatus();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (JsonAdaptedTask jsonAdaptedTask : archivedTasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Task task \u003d jsonAdaptedTask.toModelType();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            studyBuddy.addArchiveTask(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        for (JsonAdaptedModule jsonAdaptedModule : modules) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Module module \u003d jsonAdaptedModule.toModelType();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (studyBuddy.hasModule(module)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULES);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            studyBuddy.addModule(module);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.setCompleteList(this.completeCountList);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.setOverdueList(this.overdueCountList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.getGeneralStats().copy(this.generalStats);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        studyBuddy.getScoreStats().copy(this.scoreStats);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task.updateCurrentTaskList(new ArrayList\u003c\u003e(studyBuddy.getTaskList()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task.updateArchivedTaskList(new ArrayList\u003c\u003e(studyBuddy.getArchivedList()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 26,
      "souwmyaa": 27,
      "aegis-bot": 9,
      "wyt-sonia": 5,
      "-": 26,
      "gx-huang": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonStudyBuddyStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A class to access StudyBuddy data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonStudyBuddyStorage implements StudyBuddyStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonStudyBuddyStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public JsonStudyBuddyStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return readStudyBuddy(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Similar to {@link #readStudyBuddy()}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Optional\u003cJsonSerializableStudyBuddy\u003e jsonStudyBuddy \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            filePath, JsonSerializableStudyBuddy.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!jsonStudyBuddy.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return Optional.of(jsonStudyBuddy.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        saveStudyBuddy(studyBuddy, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Similar to {@link #saveStudyBuddy(ReadOnlyStudyBuddy)}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        requireNonNull(studyBuddy);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableStudyBuddy(studyBuddy), filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 19,
      "-": 54
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/JsonUserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 5,
      "-": 37
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface Storage extends StudyBuddyStorage, UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 3,
      "wyt-sonia": 1,
      "-": 23
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Manages storage of StudyBuddy data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StudyBuddyStorage studyBuddyStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StorageManager(StudyBuddyStorage studyBuddyStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddyStorage \u003d studyBuddyStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudyBuddy methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyStorage.getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return readStudyBuddy(studyBuddyStorage.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddyStorage.readStudyBuddy(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        saveStudyBuddy(studyBuddy, studyBuddyStorage.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddyStorage.saveStudyBuddy(studyBuddy, filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 15,
      "-": 56
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/StudyBuddyStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a storage for {@link StudyBuddy}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public interface StudyBuddyStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns the file path of the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Path getStudyBuddyFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns StudyBuddy data as a {@link ReadOnlyStudyBuddy}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see #getStudyBuddyFilePath()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves the given {@link ReadOnlyStudyBuddy} to the storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param studyBuddy cannot be null."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy) throws IOException;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see #saveStudyBuddy(ReadOnlyStudyBuddy)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 44
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/storage/UserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a storage for {@link UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException             if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Saves the given {@link ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 2,
      "wyt-sonia": 2,
      "-": 30
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/HelpWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String USERGUIDE_URL \u003d \"https://se-education.org/pendingupdate/UserGuide.html\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws IllegalStateException \u003cul\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                               if this method is called on a thread other than the JavaFX Application"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                               Thread."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if this method is called on the primary stage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003cli\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/li\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *                               \u003c/ul\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "wyt-sonia": 5,
      "-": 96
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.box.CalendarBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.box.CommandBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.add.CreateModuleInteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.EditModuleInteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.DueSoonListPanel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.ModuleListPanel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.panel.ProductivityPanel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.TaskListPanel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.TaskSummaryPanel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String ALL_TASK \u003d \"All Tasks\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String TITLE \u003d \"Study Buddy\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String DUE_SOON_TASK \u003d \"Tasks Due Soon\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String MODULE \u003d \"Modules\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String ARCHIVED_TASK \u003d \"Archived Task\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String CALENDAR \u003d \"Calendar\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String TASK_SUMMARY \u003d \"Task Summary\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String PRODUCTIVITY_TITLE \u003d \"Your Productivity\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskListPanel taskListPanel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskSummaryPanel taskSummaryPanel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DueSoonListPanel dueSoonListPanel;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ModuleListPanel moduleListPanel;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private CalendarBox calendarBox;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private CommandBox commandBox;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ProductivityPanel productivityPanel;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label menuPointsLabel;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox taskListHolder;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskListPanelPlaceholder;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StackPane timeLeftbarPlaceholder;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StackPane taskSummaryHolder;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private StackPane modulePaneHolder;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private StackPane productivityPanelHolder;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label taskListPanelTitle;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane taskListPanelTitleHolder;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dueListPanelTitle;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Pane dueListPanelTitleHolder;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label mainTitle;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Pane mainTitleHolder;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label productivityTitle;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to set up the Main Window.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of setting up the Main Window.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to fill up all the placeholders of this window.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPanel \u003d new TaskSummaryPanel(logic.getFilteredTaskList(), logic.getFilteredArchivedTaskList(),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logic.getFilteredModuleList(), dueSoonListPanelPlaceholder, dueListPanelTitle);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.getChildren().add(taskSummaryPanel.getRoot());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(false);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(false);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        //Productivity page"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanel \u003d new ProductivityPanel(logic.getFilteredTaskList(), menuPointsLabel);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanelHolder.getChildren().add(productivityPanel.getRoot());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanelHolder.setVisible(false);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanelHolder.setManaged(false);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList(), logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.getChildren().add(moduleListPanel.getRoot());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.setVisible(false);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        modulePaneHolder.setManaged(false);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        commandBox \u003d new CommandBox(this::executeCommand, this);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of filling up all the placeholders of this window.\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to execute help handler.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of executing help handler.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows the task summaries."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void handleShowTaskSummary() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to execute show task summary.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskSummaryHolderView(true);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(false, true);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryPanel.renderSelectedListPanel();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleDueSoonTaskListPanelTitleView(true);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TASK_SUMMARY);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End od executing show task summary.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles showing the productivity panel"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProductivity() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to execute show productivity.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProductivityHolderView(true);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleTaskListHolderView(true, false);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setTaskListTitleText(ALL_TASK);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setMainTitleText(PRODUCTIVITY_TITLE);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of executing show productivity.\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * shows the productivity panel and selects the Productivity Points tab"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProductivityPoints() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to show productivity points.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanel.selectTab(2);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        handleShowProductivity();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of executing show productivity points.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * shows the productivity panel and selects the Daily tab"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void handleShowProductivityDaily() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to show productivity daily.\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityPanel.selectTab(0);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        handleShowProductivity();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of showing productivity daily.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle exit.\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling exit.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Shows all task list in taskListHolder."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowAllTasks() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to show all tasks.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTaskListTitleText(ALL_TASK);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        handleDueSoonTasks();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of showing all tasks..\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles task to be shown in TaskListHolder."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void handleDueSoonTasks() {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handles task to be shown in TaskListHolder.\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueListPanelTitle.setText(DUE_SOON_TASK);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueListPanelTitle.getStyleClass().clear();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueListPanelTitle.getStyleClass().add(\"sub_header\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanel \u003d new DueSoonListPanel(logic.getFilteredDueSoonTaskList());"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(dueSoonListPanel.getRoot());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling task to be shown in TaskListHolder.\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles archived task to be shown in TaskListHolder."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleShowArchivedTasks() {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handles archived task to be shown.\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(TITLE);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setTaskListTitleText(ARCHIVED_TASK);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskListPanel archiveListPanel \u003d new TaskListPanel(logic.getFilteredArchivedTaskList());"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(archiveListPanel.getRoot());"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        handleDueSoonTasks();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling archived task to be shown.\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles modules to be displayed in ModulesTabHolder."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleShowModules() {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle archived task to be shown.\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleModTabView(true);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProductivityHolderView(false);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(false);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(true);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(MODULE);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling show modules.\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * on clicked: leads to createModuleInteractivePrompt."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleCreateMod() {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle create modules\u0027 button clicking.\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        handleShowModules();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        commandBox.run(new CreateModuleInteractivePrompt());"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        commandBox.handleCommandEntered();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handle create modules\u0027 button clicking.\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * on clicked: leads to EditModuleInteractivePrompt."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void handleEditMod() {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handling edit Mod InteractivePrompt.\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        handleShowModules();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        commandBox.run(new EditModuleInteractivePrompt());"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        commandBox.handleCommandEntered();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling edit Mod InteractivePrompt.\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * handles calendar to be shown in TaskListHolder."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void handleShowCalendar() {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle calendar to be shown.\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllHoldersInvisible();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(true, true);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleAllTitle(true);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListPanelTitleView(false);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setMainTitleText(CALENDAR);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarBox \u003d new CalendarBox(logic.getFilteredTaskList(), dueSoonListPanelPlaceholder,"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dueListPanelTitle);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskListPanelPlaceholder.getChildren().add(calendarBox.getRoot());"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling calendar to be shown.\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskListPanel getPersonListPanel() {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return taskListPanel;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel getDueSoonListPanel() {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return dueSoonListPanel;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarBox getCalendarBox() {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.calendarBox;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @see Logic#execute(String)"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private CommandResult executeCommand(InteractivePrompt currentInteractivePrompt, String commandText) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : Start to handle command execution.\");"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt.setLogic(logic);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String reply \u003d currentInteractivePrompt.interact(commandText.trim());"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        resultDisplay.setFeedbackToUser(reply);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isQuit()) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            handleExit();"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (currentInteractivePrompt.isEndOfCommand()) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new CommandResult(\"Set current interactive to null\", false, false);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logger.fine(FXML + \" : End of handling command execution.\");"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Toggles list panels according to values assigned. Can add more if there are more windows required for display."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val1 toggles TaskListHolder"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val2 toggles TaskSummaryHolder"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val3 toggles ModuleTabHolder"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void customToggleHolders(boolean val1, boolean val2, boolean val3, boolean val4) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        toggleTaskListHolderView(val1, val1);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskSummaryHolderView(val2);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleModTabView(val3);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleProductivityHolderView(val4);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * Toggles title according to values assigned. Can add more if there are more windows required for display."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val1 toggles MainTitle"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     * @param val2 toggles TaskList(Left side)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void customToggleTitle(boolean val1, boolean val2/*, boolean val3*/) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleMainTitleView(val1);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        toggleTaskListPanelTitleView(val2);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //setDueSoonTaskListPanelTitleView(val3);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleAllTitle(boolean val) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        customToggleTitle(val, val);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleAllHoldersInvisible() {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        customToggleHolders(false, false, false, false);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggles the title of the dueListPanelTitle."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param val"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskSummaryHolderView(boolean val) {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setVisible(val);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        taskSummaryHolder.setManaged(val);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (val) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dueListPanelTitle.getStyleClass().add(\"summary_sub_header\");"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dueListPanelTitle.setText(\"Click on Chart to View Related Tasks\");"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskSummaryHolder, val);"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Toggles the visibility of taskListHolder."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param isAllTaskListShow"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param isDueSoonShow"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void toggleTaskListHolderView(boolean isAllTaskListShow, boolean isDueSoonShow) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(taskListPanelPlaceholder, isAllTaskListShow);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(taskListPanelTitleHolder, isAllTaskListShow);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(dueSoonListPanelPlaceholder, isDueSoonShow);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(dueListPanelTitleHolder, isDueSoonShow);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (isAllTaskListShow || isDueSoonShow) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setManaged(true);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setVisible(true);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setManaged(false);"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            taskListHolder.setVisible(false);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleModTabView(boolean val) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(modulePaneHolder, val);"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private void toggleProductivityHolderView(boolean val) {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        setPaneView(productivityPanelHolder, val);"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleMainTitleView(boolean val) {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(mainTitleHolder, val);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleTaskListPanelTitleView(boolean val) {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        setPaneView(taskListPanelTitleHolder, val);"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void toggleDueSoonTaskListPanelTitleView(boolean val) {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setPaneView(dueListPanelTitleHolder, val);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setTaskListTitleText(String text) {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        taskListPanelTitle.setText(text);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setMainTitleText(String text) {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        mainTitle.setText(text);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private void setPaneView(Pane pane, boolean val) {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        pane.setVisible(val);"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        pane.setManaged(val);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 66,
      "souwmyaa": 36,
      "aegis-bot": 160,
      "wyt-sonia": 126,
      "-": 140,
      "gx-huang": 29
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/ResultDisplay.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the header of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ResultDisplay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"ResultDisplay.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextArea resultDisplay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public ResultDisplay() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFeedbackToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 27
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/StatusBarFooter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * A ui for the status bar that is displayed at the footer of the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StatusBarFooter extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"StatusBarFooter.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label saveLocationStatus;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public StatusBarFooter(Path saveLocation) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * API of UI component"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Starts the UI (and the App)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    void start(Stage primaryStage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 3,
      "-": 11
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/UiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.util.StringUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/study_buddy.png\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/StudyBuddyTheme.css\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 2,
      "wyt-sonia": 21,
      "-": 60
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/UiPart.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * It contains a scene graph with a root node of type {@code T}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Resource folder where FXML files are stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FXML_FILE_FOLDER \u003d \"/view/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, null);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #UiPart(URL)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file URL and root object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * The FXML file must not specify the {@code fx:controller} attribute."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        loadFxmlFile(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @see #UiPart(URL, Object)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this(getFxmlFileUrl(fxmlFileName), root);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static URL getFxmlFileUrl(String fxmlFileName) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        requireNonNull(fxmlFileName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return requireNonNull(fxmlFileUrl);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the root object of the scene graph of this UiPart."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public T getRoot() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads the object hierarchy from a FXML document."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param location Location of the FXML document."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root     Specifies the root of the object hierarchy."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private void loadFxmlFile(URL location, T root) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(location);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "wyt-sonia": 17,
      "-": 74
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/box/CalendarBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.box;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.UniqueTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.panel.TaskListPanel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Calendar. Still under construction."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Will cleanup code."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String FXML \u003d \"Calendar.fxml\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CalendarBox.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private ObservableList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int calendarYear;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Month calendarMonth;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private StackPane dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dueSoonPanelTitle;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label month;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label year;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private GridPane monthBox;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button prev;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button next;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarBox(ObservableList\u003cTask\u003e taskList, StackPane dueSoonListPanelPlaceholder, Label dueSoonPanelTitle) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.dueSoonListPanelPlaceholder \u003d dueSoonListPanelPlaceholder;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.dueSoonPanelTitle \u003d dueSoonPanelTitle;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dueSoonPanelTitle.getStyleClass().add(\"calender_sub_header\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //reset data in panels for calendar"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonPanelTitle.setText(\"Click on a date to see tasks\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.setBackground("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //generatecalendar"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        generateCalendar(localDate.getYear(), localDate.getMonth());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                generateCalendar(calendarYear, calendarMonth);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates a calendarBox with give year and month"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param calYear  calendar year"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param calMonth calendar month"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void generateCalendar(int calYear, Month calMonth) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        monthBox.getChildren().clear();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        month.setText(calMonth.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        year.setText(String.valueOf(calYear));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarMonth \u003d calMonth;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        calendarYear \u003d calYear;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate newDate \u003d LocalDate.of(calYear, calMonth, 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //day of week of first day"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        int dayOfWeek \u003d newDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (int i \u003d 1, j \u003d 0; i \u003c\u003d newDate.lengthOfMonth(); i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (dayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate tempDate \u003d LocalDate.of(newDate.getYear(), newDate.getMonth(), i);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            VBox temp \u003d new VBox();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Pane p \u003d new Pane();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            p.setBackground(new Background(new BackgroundFill(Color.WHEAT, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(p, dayOfWeek, j);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Label tempLbl \u003d new Label(i + \"\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tempLbl.setPadding(new Insets(2, 2, 2, 4));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            temp.getChildren().add(tempLbl);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (taskDueDate.equals(tempDate)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (count \u003e 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                p.setBackground(new Background("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.rgb(255, 157, 94), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Label dayTasksLabel \u003d new Label();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dayTasksLabel.setText(count + \" Task\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    dayTasksLabel.setText(count + \" Tasks\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                dayTasksLabel.setPadding(new Insets(0, 0, 0, 10));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                temp.getChildren().add(dayTasksLabel);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (tempDate.equals(localDate)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                p.setBackground(new Background("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.rgb(118, 156, 206), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            monthBox.add(temp, dayOfWeek, j);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            dayOfWeek++;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates calendar from previous month."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickPrevious() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (calendarMonth.getValue() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear - 1, Month.DECEMBER);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear, this.calendarMonth.minus(1));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates calendar for next month."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickNext() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (calendarMonth.getValue() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear + 1, Month.JANUARY);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            generateCalendar(this.calendarYear, this.calendarMonth.plus(1));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Home button. Generates calendar for current month."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickHome() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        generateCalendar(localDate.getYear(), localDate.getMonth());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Generates task list when clicked on cell."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param event mouse click event"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void onClickDate(javafx.scene.input.MouseEvent event) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Node clickedNode \u003d event.getPickResult().getIntersectedNode();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (clickedNode !\u003d monthBox) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Node parent \u003d clickedNode.getParent();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            while (parent !\u003d monthBox) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                clickedNode \u003d parent;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                parent \u003d clickedNode.getParent();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Integer colIndex \u003d GridPane.getColumnIndex(clickedNode);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Integer rowIndex \u003d GridPane.getRowIndex(clickedNode);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int firstDayOfWeek \u003d LocalDate.of(calendarYear, calendarMonth, 1)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                .getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (firstDayOfWeek \u003d\u003d 7) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                firstDayOfWeek \u003d 0;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                rowIndex--;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            int date \u003d rowIndex * 7 + colIndex - firstDayOfWeek + 1;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate clickedDate \u003d LocalDate.of(calendarYear, calendarMonth, date);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            viewTaskByDate(clickedDate);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * view task of a selected date"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param selectedDate selected date"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void viewTaskByDate(LocalDate selectedDate) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ObservableList\u003cTask\u003e taskByDay \u003d generateTaskList(selectedDate);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskListPanel taskByDayPanel \u003d new TaskListPanel(taskByDay);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonPanelTitle.setText(\"Task for \" + selectedDate.toString() + \" :\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dueSoonListPanelPlaceholder.getChildren().add(taskByDayPanel.getRoot());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param date date"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return list of task on the date"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ObservableList\u003cTask\u003e generateTaskList(LocalDate date) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UniqueTaskList taskByDay \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDateTime[] ldt \u003d task.getDateTimes();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDateTime tempTaskDueDate \u003d ldt[0];"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            LocalDate taskDueDate \u003d LocalDate.of(tempTaskDueDate.getYear(),"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                tempTaskDueDate.getMonth(), tempTaskDueDate.getDayOfMonth());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (taskDueDate.equals(date)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                taskByDay.add(task);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return taskByDay.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 4,
      "wyt-sonia": 14,
      "gx-huang": 219
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/box/CommandBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.box;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.MainWindow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.ExitTaskInteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InvalidInputInteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.add.AddTaskInteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.add.CreateModuleInteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.delete.ClearTasksInteractivePrompt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.delete.DeleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.ArchiveTaskInteractivePrompt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.CompleteTaskInteractivePrompt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.EditModuleInteractivePrompt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.EditTaskInteractivePrompt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.SetGoalInteractivePrompt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.edit.UnarchiveTaskInteractivePrompt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.sort.SortTaskInteractivePrompt;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.CalendarViewInteractivePrompt;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.FilterTaskInteractivePrompt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.FindTaskInteractivePrompt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.HelpInteractivePrompt;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.ListTaskInteractivePrompt;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.RefreshTaskInteractivePrompt;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.view.ViewRenamedTaskInteractivePrompt;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String[] interactiveCommandTypes \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        {\"add\", \"edit\", \"delete\", \"archive\", \"done\", \"view renamed\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \"clear\", \"bye\", \"sort\", \"refresh\", \"help\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \"filter\", \"create mods\", \"edit mods\", \"find\", \"list\", \"unarchive\", \"goal\", \"calendar\"};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePrompt currentInteractivePrompt;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor, MainWindow mainWindow) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.mainWindow \u003d mainWindow;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void handleCommandEntered() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            // allow InteractivePrompt type with different case and space in front or behind"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String userInput \u003d commandTextField.getText().toLowerCase().trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (currentInteractivePrompt \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (userInput) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"add\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"edit\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"archive\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"view renamed\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ViewRenamedTaskInteractivePrompt();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"sort\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new SortTaskInteractivePrompt();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ExitTaskInteractivePrompt();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"refresh\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new ListTaskInteractivePrompt();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"clear\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"unarchive\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                case \"filter\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentInteractivePrompt \u003d new FilterTaskInteractivePrompt();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                //mod related functions will not be shown on UI but available as shortcut"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"create mods\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    currentInteractivePrompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                case \"edit mods\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new EditModuleInteractivePrompt();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                //mod related functions will not be shown on UI but available as shortcut"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case \"goal\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    currentInteractivePrompt \u003d new SetGoalInteractivePrompt();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                //change tabs"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                case \"calendar\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    currentInteractivePrompt \u003d new CalendarViewInteractivePrompt(mainWindow);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentInteractivePrompt \u003d new InvalidInputInteractivePrompt();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //currentInteractivePrompt could be null. Might need to create an ErrorInteractivePrompt to handle this."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            //inserted NullPointerException e at the catch section"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            CommandResult commandResult \u003d commandExecutor"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                .execute(currentInteractivePrompt, commandTextField.getText());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (commandResult !\u003d null) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentInteractivePrompt \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException | ParseException | NullPointerException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            commandTextField.setText(e.getMessage());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            setStyleToIndicateCommandFailure();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "         * @see Logic#execute(String)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        CommandResult execute(InteractivePrompt currentInteractivePrompt, String commandText)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throws CommandException, ParseException;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void run (InteractivePrompt interactivePrompt) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        currentInteractivePrompt \u003d interactivePrompt;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 35,
      "souwmyaa": 27,
      "aegis-bot": 19,
      "wyt-sonia": 32,
      "-": 60,
      "gx-huang": 16
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/card/DetailedTaskCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An UI component that displays the detail information of a {@code Task}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class DetailedTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"DetailedTaskCard\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(DetailedTaskCard.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"DetailedTaskCard.fxml\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label module;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label status;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label weight;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label estimatedTimeCost;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox tags;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public DetailedTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        renderTaskCard(task, displayedIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders task\u0027s text information and badges."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render task card.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        renderTaskTextFields(task, displayedIndex);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        renderTaskBadges(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering task card.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders task\u0027s text information."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param displayedIndex"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderTaskTextFields(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render task text fields.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        description.setText(\"Task Description: \" + task.getTaskDescription());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        weight.setText(\"Task Weight: \" + task.getWeight() + \"%\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        estimatedTimeCost.setText(\"Estimated Time Needed: \" + task.getEstimatedTimeCost() + \" hr/hrs\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        status.setText(task.getTaskStatus().convertToString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        dateTime.setText(\"Deadline/Duration: \" + task.getTimeString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        creationDateTime.setText(\"Created at: \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering task text fields.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders task\u0027s badges."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderTaskBadges(Task task) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render task badges.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        renderTaskModuleBadges(task.getModule());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        renderTaskStatusBadges(task.getTaskStatus());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        renderTaskTypeBadges(task.getTaskType());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering task badges.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders the task module badges according to {@code taskModule}."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskModule"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderTaskModuleBadges(Module taskModule) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render task module badges.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // Omit module Badges if the task is not related to any module."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskModule.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            module.setVisible(false);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            module.setManaged(false);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            module.setText(taskModule.toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            module.getStyleClass().add(\"module_lbl\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering task module badges.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders the task status badges according to {@code taskStatus}."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskStatus"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderTaskStatusBadges(TaskStatus taskStatus) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render task status badges.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (taskStatus) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        case PENDING:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            status.getStyleClass().add(\"pending_status\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        case FINISHED:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            status.getStyleClass().add(\"done_status\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        case DUE_SOON:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            status.getStyleClass().add(\"due_soon_status\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        case OVERDUE:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            status.getStyleClass().add(\"Overdue_status\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering task status badges.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders the task type badges according to {@code taskType}."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderTaskTypeBadges(TaskType taskType) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render task type badges.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering task type badges.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof DetailedTaskCard)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        DetailedTaskCard detailedTaskCard \u003d (DetailedTaskCard) other;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(detailedTaskCard.id.getText())"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 task.equals(detailedTaskCard.task);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 3,
      "aegis-bot": 6,
      "wyt-sonia": 9,
      "-": 193
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/card/DueSoonTaskCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"DueSoonTaskCard.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public final Task task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label timeLeft;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label weightAndModule;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label creationDateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private HBox tags;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonTaskCard(Task task, int displayedIndex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        taskName.setText(task.getTaskName());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        timeLeft.setText(task.getTimeLeft());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        renderTask(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dateTime.setText(\"Deadline/Start at: \" + task.getTimeString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime.setText(\"Created at: \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + TimeParser.getDateTimeString(task.getCreationDateTime()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        type.setText(task.getTaskType().toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (task.getModule().equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            weightAndModule.setVisible(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            weightAndModule.setManaged(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            weightAndModule.setText(task.getWeight() + \"% \" + task.getModule().toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Applies different css calss to different task type and status."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private void renderTask(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (task.getTaskType()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Assignment:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"assignment_lbl\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Quiz:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"quiz_lbl\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Exam:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"exam_lbl\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Meeting:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"meeting_lbl\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Presentation:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"presentation_lbl\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case Others:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            type.getStyleClass().add(\"others_lbl\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        if (!(other instanceof DueSoonTaskCard)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DueSoonTaskCard card \u003d (DueSoonTaskCard) other;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            \u0026\u0026 task.equals(card.task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 98,
      "wyt-sonia": 14
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/card/ModCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * module for display"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String FXML \u003d \"ModCard.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public final Module module;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label moduleCode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Label moduleName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModCard(Module module, int displayIndex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleCode.setText(module.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleName.setText(module.getModuleName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        if (!(other instanceof ModCard)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModCard card \u003d (ModCard) other;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return moduleCode.getText().equals(card.moduleCode.getText())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u0026\u0026 module.equals(card.module);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 4,
      "aegis-bot": 47
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/ExitTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.EXIT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ExitTaskCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a ExitTaskInteractivePrompt, which allows user to quit from each interactive stage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ExitTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from exit command.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String CONFIRM_MSG \u003d \"Are you sure you want to quit?\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"Please press enter yes if you would like to exit the application, and no if you would like to go back.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_NO_EXIT_MSG \u003d \"Thank you for staying!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Exit successfully!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ExitTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d EXIT_TASK;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        if (\"quit\".equals(userInput)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d CONFIRM_MSG;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ExitTaskCommandException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setQuit(true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (userInput.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_NO_EXIT_MSG);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d (new ExitTaskCommandException(\"invalidInputError\")).getErrorMessage()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\\n\" + CONFIRM_MSG;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 58,
      "wyt-sonia": 3,
      "-": 7
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an InteractivePrompt."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class InteractivePrompt {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isQuit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isEndOfCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected InteractivePromptType interactivePromptType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String reply;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    protected InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public InteractivePrompt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isQuit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isEndOfCommand \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.currentTerm \u003d InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract String interact(String userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Ends the interaction."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param reply message to be displayed to the user upon end of interaction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        setEndOfCommand(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the {@code userInput} is quit."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the userInput is quit, false otherwise"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isQuit(String userInput) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"quit\".equalsIgnoreCase(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isQuit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return isQuit;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the quit commands."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput   the input given by the user. This should be checked to be either quit or back."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param quitMessage the message that is displayed upon quitting"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the reply to user"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public String handleQuit(String userInput, String quitMessage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            endInteract(quitMessage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setQuit(boolean isQuitCommand) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        isQuit \u003d isQuitCommand;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setLogic(Logic logic) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isEndOfCommand() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return isEndOfCommand;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setEndOfCommand(boolean isEnd) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        isEndOfCommand \u003d isEnd;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public InteractivePromptType getInteractivePromptType() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return interactivePromptType;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "aegis-bot": 1,
      "wyt-sonia": 4,
      "-": 79
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InteractivePromptTerms.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Terms used in Interactive Prompt to indicate the stage in the sequence of interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public enum InteractivePromptTerms {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    INIT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    OPTION_TYPE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_NAME,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TASK_INDEX,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_TYPE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DATETIME,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_DESCRIPTION,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_MODULE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_WEIGHT,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TASK_ESTIMATED_TIME_COST,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_NAME,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    MODULE_CODE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    SORT_KEYWORD,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    READY_TO_EXECUTE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    ADD_DUPLICATE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for find"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    FIND_KEYWORD,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for edit"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_NUMBER,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TASK_FIELD,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    NEW_VALUE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CHOICE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    STATUS_TYPE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    TASKS_TYPE,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    //for edit mod"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    PICK,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CHANGE_MOD_NAME,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CHANGE_MOD_CODE,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    DELETE_MOD,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // for setting goals"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    GOAL,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    //for calendar view"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    DATE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 10,
      "souwmyaa": 6,
      "aegis-bot": 8,
      "wyt-sonia": 13,
      "gx-huang": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InteractivePromptType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the InteractivePromptType."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum InteractivePromptType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ADD_TASK,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    EDIT_TASK,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    EXIT_TASK,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    DELETE_TASK,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    FILTER_TASK,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    ARCHIVE_TASK,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    UNARCHIVE_TASK,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    VIEW_DUPLICATE_TASK,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    COMPLETE_TASK,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    DUE_SOON_TASK,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CREATE_MODULE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    SORT_TASK,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    INVALID_MSG,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    FIND_TASK,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    LIST_TASK,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    CLEAR_TASK,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    SET_GOAL,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    EDIT_MODULE,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    CALENDAR_VIEW;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 5,
      "aegis-bot": 3,
      "wyt-sonia": 10,
      "gx-huang": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/InvalidInputInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.INVALID_MSG;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a InvalidInputInteractivePrompt which is designed to handle invalid input from user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Help message will be provided when invalid message caught."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class InvalidInputInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    static final String HELP_MSG \u003d \"Here is the list of available commands:\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"1. add\\n2. archive\\n3. bye\\n4. clear\\n5. create mods\\n6. delete\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        + \"7. view renamed\\n8. done\\n9. edit\\n10. filter\\n11. find\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        + \"12. help\\n13. list\\n14. sort\\n15. refresh\\n16. calendar\\n17. goal\\n\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private InteractivePromptTerms currentTerm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String reply;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public InvalidInputInteractivePrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d INVALID_MSG;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(HELP_MSG);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 2,
      "wyt-sonia": 28
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/add/AddTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.ADD_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.AddDuplicateTaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.AddTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TaskParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An interactive prompt for adding a new task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String REQUIRED_MODULE_MSG \u003d \"Please choose a module for this task or press enter to skip. \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"\\nIndex number and module code are both acceptable.\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from add task command.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task added successfully!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String END_OF_DUPLICATE_COMMAND_MSG \u003d \"Task added successfully! \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"We have changed the name slightly for your convenience.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String END_OF_COMMAND_DUPLICATE_MSG \u003d \"Task will not be added! Key in your next command :)\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_NAME_MSG \u003d \"Please enter the task name.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_TYPE_MSG \u003d \"Please choose the task type:\\n\" + TaskType.getTypeString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_DATE_TIME_MSG \u003d \"Please enter the deadline/duration with format: \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_DESCRIPTION_MSG \u003d \"Please enter task description \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_WEIGHT_MSG \u003d \"Please enter the weight of the task \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_ESTIMATED_TIME_COST_MSG \u003d \"Please enter the estimated \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"number of hours cost or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TASK_INFO_HEADER \u003d \"The task is ready to be added, press enter \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"again to add the task:\\n\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK INFO \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String CONFIRM_MSG \u003d \"This is a duplicate task. Are you sure you would like to proceed?\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Please enter yes to continue or no to go back.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"AddTaskInteractivePrompt\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(AddTaskInteractivePrompt.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private String moduleListString \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of an add task action.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        this.interactivePromptType \u003d ADD_TASK;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        this.task \u003d new Task();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        this.modules \u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.INFO, LOG_TAG + \": User quite from add task action.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            initTermHandler();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            taskModuleTermHandler(userInput);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskNameTerm(userInput);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskTypeTerm(userInput);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskDateTimeTerm(userInput);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskDescriptionTerm(userInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskWeightTerm(userInput);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskEstimatedTimeCostTerm(userInput);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskReadyToExecuteTerm();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        case ADD_DUPLICATE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            handleTaskAddDuplicateTerm(userInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !this.reply.isBlank()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The reply of add task\u0027s \" + currentTerm.name() + \" is blank, please check.\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the INIT term of add task interaction."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets default value for the new task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the module request message for user."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initTermHandler() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start tof init term.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set default value for the new task."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        task.setStatus(\"Pending\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        task.setTaskDescription(\"No Description\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        task.setWeight(0.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        task.setEstimatedTimeCost(0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        // Init the module request message for user."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d REQUIRED_MODULE_MSG;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        moduleListString \u003d \"The Modules available are: \\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        this.modules \u003d logic.getStudyBuddy().getModuleList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        constructModuleList(modules);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply +\u003d moduleListString;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        currentTerm \u003d InteractivePromptTerms.TASK_MODULE;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of init term.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_MODULE term of add task interaction."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the module from {@code userInput}."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the task name request message for user."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    private void taskModuleTermHandler(String userInput) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task module term.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            Module module;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                module \u003d new EmptyModule();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                module \u003d TaskParser.parseModule(userInput, modules);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            task.setModule(module);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d checkAndModifyReply(module) + \"\\n\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_NAME;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getErrorMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_MSG + \"\\n\\n\" + moduleListString;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task module term.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_NAME term of add task interaction."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the task name from {@code userInput}."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the task type request message for user."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskNameTerm(String userInput) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task name term.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            userInput \u003d TaskParser.parseName(userInput);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            task.setTaskName(userInput);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d \"The name of task is set to: \" + userInput + \".\\n\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_TYPE;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InteractiveCommandException ex) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getErrorMessage());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d ex.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task name term.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_TYPE term of add task interaction."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the task type from {@code userInput}."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the task date time request message for user."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskTypeTerm(String userInput) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task type term.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskType taskType \u003d TaskParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            task.setTaskType(taskType);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d \"The type of task has been set to: \" + taskType.toString() + \".\\n\\n\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_DATE_TIME_MSG + getDateTimeFormat(taskType);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_DATETIME;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task type term.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_DATETIME term of add task interaction."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the task date time from {@code userInput}."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the task description request message for user."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskDateTimeTerm(String userInput) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task date time term.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalDateTime[] dateTimes \u003d TaskParser.parseDateTime(userInput, task.getTaskType());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            task.setDateTimes(dateTimes);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            if (dateTimes.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                userInput \u003d TimeParser.getDateTimeString(dateTimes[0]);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                userInput \u003d TimeParser.getDateTimeString(dateTimes[0])"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"-\" + TimeParser.getDateTimeString(dateTimes[1]);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d \"The date and time is set to: \" + userInput + \"\\n\\n\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_DESCRIPTION;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d ex.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_DATE_TIME_MSG + getDateTimeFormat(task.getTaskType());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task date time term.\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_DESCRIPTION term of add task interaction."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the task description from {@code userInput}."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the task weight request message for user."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskDescriptionTerm(String userInput) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task description time term.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                task.setTaskDescription(TaskParser.parseDescription(userInput));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                this.reply \u003d \"The task description has been set as \" + userInput + \"\\n\\n\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply +\u003d REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_WEIGHT;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task description term.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_WEIGHT term of interaction."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the task weight from {@code userInput}."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the task estimated time cost request message for user."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskWeightTerm(String userInput) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task weight term.\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                double weight \u003d TaskParser.parseWeight(userInput);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                // Calculates the sum of the weights of unarchived tasks under targetModule."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                double moduleWeightSumForUnarchived \u003d logic.getStudyBuddy().getTaskList()"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(t -\u003e (t.getModule().equals(task.getModule())))"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                    .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                // Calculates the sum of the weights of archived tasks under targetModule."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                double moduleWeightSumForArchivedTasks \u003d logic.getStudyBuddy().getArchivedList()"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(t -\u003e t.getModule().equals(task.getModule()))"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                    .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                if (moduleWeightSumForUnarchived + moduleWeightSumForArchivedTasks + weight \u003e 100) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"moduleWeightOverloadError\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                task.setWeight(weight);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                this.reply \u003d \"The weight of the task has been set as \" + userInput + \"\\n\\n\";"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply +\u003d REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_ESTIMATED_TIME_COST;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task weight term.\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the TASK_ESTIMATED_TIME_COST term of add task interaction."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the estimated time cost of the new task from {@code userInput}."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prepares the insertion confirmation request message for user."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with invalid {@code userInput}."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskEstimatedTimeCostTerm(String userInput) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of task estimated time cost term.\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d \"\";"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                task.setEstimatedTimeCost(TaskParser.parseTimeCost(userInput));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                this.reply \u003d \"The estimated number of hours the task might take has been set as \""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                    + userInput + \"\\n\\n\";"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply +\u003d TASK_INFO_HEADER + task.toString();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of task estimated time cost term.\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the READY_TO_EXECUTE term of add task interaction."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks the duplication of the new task and forwards the interaction accordingly."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with any exception caused."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskReadyToExecuteTerm() {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of ready to execute term.\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        task.setCreationDateTime(LocalDateTime.now());"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            if (logic.getStudyBuddy().getTaskList().contains(task)) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                reply \u003d CONFIRM_MSG;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.ADD_DUPLICATE;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                AddTaskCommand addTaskCommand \u003d new AddTaskCommand(task);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.executeCommand(addTaskCommand);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.INFO, LOG_TAG + \": User added a unique new task.\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d new InteractiveCommandException(\"unKnownException\").getErrorMessage();"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of ready to execute term.\");"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the ADD_DUPLICATE term of add task interaction."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user option for adding duplicate task and response accordingly."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays error message with any exception caused."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleTaskAddDuplicateTerm(String userInput) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of  add duplicated task term.\");"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            if (\"yes\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                AddDuplicateTaskCommand addDuplicateTaskCommand \u003d new AddDuplicateTaskCommand(task);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.executeCommand(addDuplicateTaskCommand);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.INFO, LOG_TAG + \": User added a duplicated task.\");"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                endInteract(END_OF_DUPLICATE_COMMAND_MSG);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (\"no\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                endInteract(END_OF_COMMAND_DUPLICATE_MSG);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidInputError\");"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException | CommandException e) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d new InteractiveCommandException(\"unKnownException\").getErrorMessage();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getMessage());"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\" + CONFIRM_MSG;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of add duplicated task term.\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of add task action.\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides empty module from the moduleList."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "    private void constructModuleList(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        moduleList.forEach(m -\u003e {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!m.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                counter.getAndAdd(1);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                moduleListString +\u003d counter + \".\" + m.getModuleCode() + \" \" + m.getModuleName() + \"\\n\";"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     * Modifies reply if module is empty."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param module"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    private String checkAndModifyReply(Module module) {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"The module has been set as: \" + module.getModuleCode() + \" \""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                + module.getModuleName();"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"This task is not assigned to any modules.\";"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the date and time format string base on the type of the task."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getDateTimeFormat(TaskType taskType) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        String format \u003d \"\";"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            format \u003d \"HH:mm dd/MM/yyyy e.g. 12:00 01/05/2020\";"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            format \u003d \"HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy e.g. 12:00 01/05/2020-12:00 10/05/2020\";"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 10,
      "souwmyaa": 2,
      "wyt-sonia": 17,
      "-": 490
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/add/CreateModuleInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.CreateModCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * An interactive prompt for creating modules."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModuleInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static final String MODULE_CODE_FORMAT \u003d \"Please key in your module code to include a 2-3 letter prefix,\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \" a 4-digit number,\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"then a postfix (Optional).\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        + \"E.g. BA1001\\n       CS2030J     \\n       LSM2040C\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from create mod command.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String SUCCESS_COMMAND_MSG \u003d \"Module created!\\n\\nKey in your next command :)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_NAME_MSG \u003d \"Please key in the name of \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"the module that you want to create\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_CODE_MSG \u003d \"Please key in the module code of the module \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"that you want to create\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CreateModuleInteractivePrompt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CREATE_MODULE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.module \u003d new Module();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.MODULE_NAME;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_NAME:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    if (!logic.getFilteredModuleList()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .filtered(x -\u003e x.getModuleName().equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        throw new ModuleException(\"duplicateModuleNameError\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        this.reply \u003d \"The name of new module is set to: \" + userInput + \".\\n\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + REQUIRED_MODULE_CODE_MSG;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        module.setModuleName(userInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        currentTerm \u003d InteractivePromptTerms.MODULE_CODE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case MODULE_CODE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    if (!logic.getFilteredModuleList().filtered(x -\u003e x.toString()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        throw new ModuleException(\"duplicateModuleCodeError\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        module.setModuleCode(userInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        this.reply \u003d \"The module code of new module is set to: \" + module.toString() + \"\\n\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + \"Please press enter to confirm your changes\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_CODE_MSG;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CreateModCommand createModCommand \u003d new CreateModCommand(module);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(createModCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d SUCCESS_COMMAND_MSG;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                endInteract(reply);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } catch (CommandException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getLocalizedMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 1,
      "aegis-bot": 65,
      "wyt-sonia": 36
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/delete/ClearTasksInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ClearTasksCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ClearTasksCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a ClearTasksInteractivePrompt which interact with user to clear all tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from clear command.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Tasks cleared successfully!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String ENTER_NO_MSG \u003d \"Tasks will not be cleared! Key in your next command :)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String CONFIRM_MSG \u003d \"Are you sure you want to clear all your tasks?\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"Please enter yes to continue and no to go back.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ClearTasksInteractivePrompt() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CLEAR_TASK;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            this.reply \u003d CONFIRM_MSG;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            if (userInput.equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    ClearTasksCommand clearTaskCommand \u003d new ClearTasksCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    logic.executeCommand(clearTaskCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else if (userInput.equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(ENTER_NO_MSG);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d (new ClearTasksCommandException(\"invalidInputError\")).getErrorMessage()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"\\n\\n\" + CONFIRM_MSG;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 57,
      "aegis-bot": 1,
      "wyt-sonia": 3
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/delete/DeleteTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.DELETE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.DeleteTaskCommandParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a DeleteTaskInteractivePrompt, which interacts with user to delete task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from delete task command.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task deleted successfully!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number of task you wish to delete.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DeleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DELETE_TASK;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                index \u003d DeleteTaskCommandParser.parseIndex(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName() + \" will be deleted.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DeleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(deleteTaskCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 52,
      "wyt-sonia": 15
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/ArchiveTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.ARCHIVE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.ArchiveTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ArchiveTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an ArchiveTaskInteractivePrompt, which interacts with user to archive a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ArchiveTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from archive command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task archived successfully!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number of task you wish to archive.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ArchiveTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d ARCHIVE_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ArchiveTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ArchiveTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName() + \" will be archived. \\n\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    + \"Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new ArchiveTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ArchiveTaskCommandException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                ArchiveTaskCommand archiveTaskCommand \u003d new ArchiveTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(archiveTaskCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 2,
      "wyt-sonia": 28,
      "gx-huang": 47
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/CompleteTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.COMPLETE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.CompleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.CompleteTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A interactive prompt for completing task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CompleteTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from complete task command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task marked as completed successfully!\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            + \"If you want to archive this completed task, key in \u0027archive\u0027.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"of task you wish to mark as Finished.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public CompleteTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.interactivePromptType \u003d COMPLETE_TASK;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new CompleteTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (index \u003e Task.getCurrentTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new CompleteTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (logic.getFilteredTaskList().get(index - 1).getTaskStatus().equals(TaskStatus.FINISHED)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new CompleteTaskCommandException(\"taskCompletedError\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The task \" + Task.getCurrentTasks().get(index - 1).getTaskName()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \" will be marked as Finished. \\n\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"Please click enter again to make the desired action.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d (new CompleteTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CompleteTaskCommandException ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                logic.executeCommand(completeTaskCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 2,
      "aegis-bot": 47,
      "wyt-sonia": 30
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/EditModuleInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.EDIT_MODULE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.EditModCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.ModuleCode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Edit module."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class EditModuleInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final int CHANGE_NAME \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final int CHANGE_CODE \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final int DELETE_MODULE \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String END_OF_COMMAND_MSG \u003d \"Module edited successfully!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from editing module.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_MSG \u003d \"Please key in a module code from the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_NAME_MSG \u003d \"Please key in the new name of your module\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_MODULE_CODE_MSG \u003d \"Please key in the new code of your module\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_CONFIRMATION \u003d \"Are you sure you want to delete this module?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"All tasks in this module will be \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"relocated to \u0027No Module Allocated\u0027 tab. \\n\\nPress enter to proceed\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String CHOICES \u003d \"What would you like to do? Key in the index of the action\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"that you wish to perform.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"1. Change Name\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"2. Change Module code\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        + \"3. Delete Module\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Module oldModule;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Module newModule;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public EditModuleInteractivePrompt() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.interactivePromptType \u003d EDIT_MODULE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_MODULE_MSG;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.CHOICE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case CHOICE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (ModuleCode.isModuleCode(userInput)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    oldModule \u003d new Module(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    newModule \u003d new Module(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    boolean hasModule \u003d logic.getFilteredModuleList().contains(oldModule);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    if (!hasModule || oldModule.equals(new EmptyModule())) { //Ensure emptyMod is never touched"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        throw new ModuleException(\"noSuchModuleError\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        oldModule \u003d logic.getFilteredModuleList().get(logic.getFilteredModuleList().indexOf(oldModule));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        newModule.setModuleName(oldModule.getModuleName());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        reply \u003d \"Module retrieved: \" + newModule.getModuleName()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + \" \" + newModule.getModuleCode() + \"\\n\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            + CHOICES;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        currentTerm \u003d InteractivePromptTerms.PICK;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"wrongModuleCodeFormatError\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_MSG;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case PICK:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                int index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (index) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case CHANGE_NAME:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.CHANGE_MOD_NAME;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case CHANGE_CODE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.CHANGE_MOD_CODE;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d REQUIRED_MODULE_CODE_MSG;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case DELETE_MODULE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.DELETE_MOD;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d REQUIRED_CONFIRMATION;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d CHOICES;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d CHOICES;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case CHANGE_MOD_NAME:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (userInput.equalsIgnoreCase(oldModule.getModuleName())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"noChangeFromOriginalModuleNameError\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (!logic.getFilteredModuleList()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filtered(x -\u003e x.getModuleName().equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"duplicateModuleNameError\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    newModule.setModuleName(userInput);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    logic.executeCommand(new EditModCommand(oldModule, newModule,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        InteractivePromptTerms.CHANGE_MOD_NAME));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d \"Your module \" + oldModule.getModuleCode().toString() + \" is now renamed \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + newModule.getModuleName();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG + \"\\n\\n\" + reply);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case CHANGE_MOD_CODE:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"emptyInputError\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (userInput.equalsIgnoreCase(oldModule.getModuleCode().toString())) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"noChangeFromOriginalModuleCodeError\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else if (!logic.getFilteredModuleList().filtered(x -\u003e x.toString()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .equalsIgnoreCase(userInput)).isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    throw new ModuleException(\"duplicateModuleCodeError\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    newModule.setModuleCode(userInput);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    logic.executeCommand(new EditModCommand(oldModule, newModule,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        InteractivePromptTerms.CHANGE_MOD_CODE));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    reply \u003d \"Your module \" + oldModule.getModuleCode().toString() + \" is now coded \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + newModule.getModuleCode().toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    endInteract(END_OF_COMMAND_MSG + \"\\n\\n\" + reply);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case DELETE_MOD:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                logic.executeCommand(new EditModCommand(oldModule, newModule, InteractivePromptTerms.DELETE_MOD));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"Module deleted successfully!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(reply);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (ModuleException ex) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d ex.getMessage() + \"\\n\\n\" + REQUIRED_MODULE_NAME_MSG;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 166
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/EditTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.model.task.Task.getCurrentTasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.EDIT_TASK;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.EditTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TaskParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.DuplicateTaskException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Interactive prompt for editing tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Hong Wen, Wang Yuting"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from the edit task command\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskParser\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(EditTaskInteractivePrompt.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_FIELD_MSG \u003d \"Please choose the field that you wish to edit for task: \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_MODULE_MSG \u003d \"Please choose a Module for this task or press enter to skip. \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"\\nIndex number and module code are both acceptable.\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_NAME_MSG \u003d \"Please enter the task name.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_TYPE_MSG \u003d \"Please choose the task type:\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_DATE_TIME_MSG \u003d \"Please enter the deadline/duration with format: \" + \"\\n\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"Assignment: HH:mm dd/MM/yyyy  e.g. 12:00 01/05/2020\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"\\nRest: HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy  e.g. 12:00 01/05/2020-14:00 01/05/2020\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_DESCRIPTION_MSG \u003d \"Please enter task \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"description or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_WEIGHT_MSG \u003d \"Please enter the weight of the task \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String REQUIRED_TASK_ESTIMATED_TIME_COST_MSG \u003d \"Please enter the \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"estimated number of hours cost or press enter to skip.\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskField taskField;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private String moduleListString \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.modules \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.interactivePromptType \u003d EDIT_TASK;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of an edit task action.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isQuit(userInput)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d handleQuit(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d handleEdit(userInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the sequence of commands for task editing."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public String handleEdit(String userInput) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d \"Please enter the index of the task that you wish to edit.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            this.modules \u003d logic.getFilteredModuleList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_NUMBER;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_NUMBER:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            this.taskNumber \u003d parseTaskNumber(userInput);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_FIELD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            this.taskField \u003d parseTaskFieldNumber(userInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        case NEW_VALUE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d handleNewValue(userInput);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and executes an edit command, with the new values provided by {@code userInput}."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return reply to user"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public String handleNewValue(String userInput) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        Index taskIndex \u003d Index.fromZeroBased(taskNumber - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        Task taskToEdit \u003d logic.getStudyBuddy().getTaskList().get(taskNumber - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(taskIndex, taskField);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        Task clone \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            clone \u003d (Task) taskToEdit.clone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CloneNotSupportedException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskNameSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskTypeSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskDateTimeSuccess(editTaskCommand, clone, userInput, taskIndex);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskModuleSuccess(editTaskCommand, clone, userInput, taskIndex);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskEstimatedTimeCostSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskWeightSuccess(editTaskCommand, clone, userInput, taskIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d isHandleNewTaskDescriptionSuccess(editTaskCommand, clone, userInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isParseSuccess) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.executeCommand(editTaskCommand);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.INFO, LOG_TAG + \": End of an edit task action.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                endInteract(this.reply);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (java.text.ParseException | CommandException | DuplicateTaskException ex) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !this.reply.isBlank()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The reply of edit task\u0027s \" + currentTerm.name() + \" is blank, please check.\\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task name."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new task name."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskNameSuccess(EditTaskCommand editTaskCommand, Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            String newName \u003d TaskParser.parseName(userInput);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToEdit.setTaskName(newName);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            editTaskCommand.provideNewTaskName(newName);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getErrorMessage());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getErrorMessage());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task type."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new task type."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskTypeSuccess(EditTaskCommand editTaskCommand, Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskType newTaskType \u003d TaskParser.parseType(userInput, TaskType.getTaskTypes().length);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskToEdit.getTaskType().equals(TaskType.Assignment) \u0026\u0026 !newTaskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"changeAssignmentToOtherTaskTypeError\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!taskToEdit.getTaskType().equals(TaskType.Assignment) \u0026\u0026 newTaskType.equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"changeOtherTaskTypeToAssignmentError\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToEdit.setTaskType(newTaskType);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            editTaskCommand.provideNewTaskType(newTaskType);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d \"The type of task is successfully changed to: \" + newTaskType + \".\\n\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG + \"\\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getMessage());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_TYPE_MSG + \"\\n\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_TYPE_MSG;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task date time."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new task date time."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskDateTimeSuccess(EditTaskCommand editTaskCommand, Task taskToEdit, String userInput,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                                                   Index taskIndex) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            // Parses date time"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskType taskType \u003d logic.getFilteredTaskList().get(taskIndex.getZeroBased()).getTaskType();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalDateTime[] newDateTimes \u003d TaskParser.parseDateTime(userInput, taskType);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToEdit.setDateTimes(newDateTimes);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            editTaskCommand.provideNewDateTime(newDateTimes);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_DATE_TIME_MSG;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_DATE_TIME_MSG;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task module."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new module."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskModuleSuccess(EditTaskCommand editTaskCommand,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 Task taskToEdit, String userInput, Index taskIndex) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            Module newModule;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                newModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                newModule \u003d TaskParser.parseModule(userInput, modules);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            // checks the weight of the target module."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            double taskWeight \u003d logic.getFilteredTaskList().get(taskIndex.getZeroBased()).getWeight();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isWeightSizeValid \u003d isWeightSizeValid(taskWeight, newModule,"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getStudyBuddy().getTaskList().get(taskNumber - 1));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isWeightSizeValid) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"moduleWeightOverloadError\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToEdit.setModule(newModule);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            editTaskCommand.provideNewModule(newModule);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_MODULE_MSG + \"\\n\" + moduleListString;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_MODULE_MSG + \"\\n\" + moduleListString;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task estimated time cost."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new estimated time cost."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskEstimatedTimeCostSuccess(EditTaskCommand editTaskCommand,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                double newTimeCost \u003d TaskParser.parseTimeCost(userInput);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                editTaskCommand.provideNewTaskTimeCost(newTimeCost);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                editTaskCommand.provideNewTaskTimeCost(0);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d new AddOrEditTaskCommandException(\"wrongEstimatedTimeFormatError\").getErrorMessage()"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n\\n\" + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task weight."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new weight."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskWeightSuccess(EditTaskCommand editTaskCommand, Task taskToEdit,"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 String userInput, Index taskIndex) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            double newWeight \u003d 0;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isWeightSizeValid \u003d true;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            // Checks if the updating of the weight will lead to weight overflow."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!userInput.isBlank()) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                newWeight \u003d TaskParser.parseWeight(userInput);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                if (newWeight \u003e 0) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                    isWeightSizeValid \u003d isWeightSizeValid(newWeight,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                        logic.getFilteredTaskList().get(taskIndex.getZeroBased()).getModule(),"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                        logic.getStudyBuddy().getTaskList().get(taskNumber - 1));"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!isWeightSizeValid) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new AddOrEditTaskCommandException(\"moduleWeightOverloadError\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                taskToEdit.setWeight(newWeight);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            editTaskCommand.provideNewTaskWeight(newWeight);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the new task description."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code userInput} to the new description."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "     * Display error message for invalid {@code userInput}."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editTaskCommand"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the task name is valid"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isHandleNewTaskDescriptionSuccess(EditTaskCommand editTaskCommand,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      Task taskToEdit, String userInput) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isParseSuccess \u003d true;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            String newDescription \u003d TaskParser.parseDescription(userInput);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToEdit.setTaskDescription(newDescription);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            checkDuplicate(taskToEdit, taskToEdit);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "            editTaskCommand.provideNewTaskDescription(newDescription);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuplicateTaskException e) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            isParseSuccess \u003d false;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "            reply \u003d e.getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                + REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        return isParseSuccess;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks the total weight of tasks under {@code targetModule}."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param toBeAddWeight"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param targetModule"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if the total weight is not larger than 100."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isWeightSizeValid(double toBeAddWeight, Module targetModule, Task task) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isValid \u003d true;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        // Calculates the sum of the weights of unarchived tasks under targetModule."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        double moduleWeightSumForUnarchived \u003d logic.getStudyBuddy().getTaskList()"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "            .filter(t -\u003e (t.getModule().equals(targetModule) \u0026\u0026 !t.equals(task)))"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        // Calculates the sum of the weights of archived tasks under targetModule."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        double moduleWeightSumForArchived \u003d logic.getStudyBuddy().getArchivedList()"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "            .filter(t -\u003e t.getModule().equals(targetModule))"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            .mapToDouble(Task::getWeight).sum();"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        if (moduleWeightSumForUnarchived + moduleWeightSumForArchived + toBeAddWeight \u003e 100) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            isValid \u003d false;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} to task number."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput user input for task number"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an int of task number"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "    public int parseTaskNumber(String userInput) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        int taskNum \u003d -1;"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            taskNum \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskNum \u003e logic.getFilteredTaskList().size() || taskNum \u003c 1) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskName \u003d logic.getFilteredTaskList().get(taskNum - 1).getTaskName();"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d REQUIRED_TASK_FIELD_MSG + taskName + \".\\n\\n\""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                + TaskField.getFieldString();"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.TASK_FIELD;"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the task will be duplicate if edited."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param clone"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskToEdit"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkDuplicate(Task clone, Task taskToEdit) {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        if (getCurrentTasks().contains(clone)) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicateTaskException(\"duplicateTask\");"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskToEdit.getDuplicate() !\u003d 0) {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            taskToEdit.zeroDuplicate();"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the task field."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput userInput for task number"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a TaskField"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskField parseTaskFieldNumber(String userInput) {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        String taskName \u003d logic.getFilteredTaskList().get(taskNumber - 1).getTaskName();"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskField taskField \u003d null;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            int taskFieldNumber \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskFieldNumber \u003e 7 || taskFieldNumber \u003c 1) {"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "            taskField \u003d TaskField.getTaskFieldFromNumber(taskFieldNumber);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            assert (taskField !\u003d null);"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d getTaskFieldMessage(taskField);"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            this.currentTerm \u003d InteractivePromptTerms.NEW_VALUE;"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage();"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (AddOrEditTaskCommandException e) {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d e.getErrorMessage() + \"\\n\\n\" + REQUIRED_TASK_FIELD_MSG + taskName + \".\\n\\n\""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                + TaskField.getFieldString();"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, LOG_TAG + \": \" + e.getStackTrace());"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskField;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets task field message according to {@code taskField}."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskField"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getTaskFieldMessage(TaskField taskField) {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        String result \u003d \"You are now editing the \" + taskField.getLabel() + \" field\\n\";"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (taskField) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_MODULE:"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleListString \u003d \"The Modules available are: \\n\";"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "            constructModuleList(modules);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_MODULE_MSG + \"\\n\""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                + moduleListString;"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_NAME:"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_TASK_NAME_MSG;"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_TYPE:"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_TASK_TYPE_MSG + \"\\n\""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "                + TaskType.getTypeString();"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DATETIME:"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_DATE_TIME_MSG;"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_DESCRIPTION:"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_TASK_DESCRIPTION_MSG;"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_WEIGHT:"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_TASK_WEIGHT_MSG;"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        case TASK_ESTIMATED_TIME_COST:"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            result +\u003d REQUIRED_TASK_ESTIMATED_TIME_COST_MSG;"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalStateException(\"Unexpected value: \" + taskField);"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides empty module from the moduleList."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "    private void constructModuleList(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        moduleList.forEach(m -\u003e {"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!m.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                counter.getAndAdd(1);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                moduleListString +\u003d counter + \".\" + m.getModuleCode() + \" \" + m.getModuleName() + \"\\n\";"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 18,
      "souwmyaa": 2,
      "wyt-sonia": 9,
      "-": 621
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/SetGoalInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.SET_GOAL;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * handles the interaction for goal setting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class SetGoalInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quit from the set goal command\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Great! Your goal has been set successfully!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public SetGoalInteractivePrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d SET_GOAL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (isQuit(userInput)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleQuit(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d handleSetGoal(userInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getEndOfCommandMsg() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        SetGoalInteractivePrompt.statistics \u003d statistics;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles goal setting for user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user\u0027s input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a reply for the user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleSetGoal(String userInput) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d \"How many tasks do you want to complete today? Please give me a number between 1 to 100\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.GOAL;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case GOAL:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d parseGoalValue(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.reply;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * handles the parsing of goal value"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput user\u0027s input for goal"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return goal value"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String parseGoalValue(String userInput) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int goal \u003d 5;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            goal \u003d Integer.parseInt(userInput.trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            if (goal \u003e 100 || goal \u003c 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                throw new AddOrEditTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return (new AddOrEditTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (AddOrEditTaskCommandException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return ex.getErrorMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // we reach here if parsing is successful"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics.setGoal(goal);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 82,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/edit/UnarchiveTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.UNARCHIVE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.edit.UnarchiveTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.UnarchiveTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * RRepresents an UnarchiveTaskInteractivePrompt, which interacts with user to unarchive a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UnarchiveTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from unarchive command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task retrieved successfully!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_INDEX_MSG \u003d \"Please enter the index number of task you wish to retrieve.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UnarchiveTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d UNARCHIVE_TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.reply \u003d \"Please enter the index number of the archived task.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.TASK_INDEX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case TASK_INDEX:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    throw new UnarchiveTaskCommandException(\"emptyInputError\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (index \u003e Task.getArchivedTasks().size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    throw new UnarchiveTaskCommandException(\"invalidIndexRangeError\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                index \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d \"The task \" + Task.getArchivedTasks().get(index - 1).getTaskName() + \" will be retrieved. \\n\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \"Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d (new UnarchiveTaskCommandException(\"wrongIndexFormatError\")).getErrorMessage()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (UnarchiveTaskCommandException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\\n\" + REQUIRED_INDEX_MSG;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                UnarchiveTaskCommand archiveTaskCommand \u003d new UnarchiveTaskCommand(Index.fromZeroBased(index - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(archiveTaskCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract(String reply) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.reply \u003d reply;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 7,
      "gx-huang": 80
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/sort/SortTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.SORT_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.sort.SortTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.SortTaskCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A interactive prompt for sorting task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class SortTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Task sorted successfully!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from sort task command.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String[] sort_option \u003d {\"Deadline / Task Start Date\", \"Task Name\", \"Creation DateTime\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskListPanel\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(SortTaskInteractivePrompt.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private int option;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public SortTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start of the sort task action.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.interactivePromptType \u003d SORT_TASK;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            this.reply \u003d \"Please choose the sort keyword: \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"1. Deadline / Task Start Date\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"2. Task Name\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"3. Creation Date \u0026 Time\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.SORT_KEYWORD;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        case SORT_KEYWORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                option \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                if (option \u003e 3 || option \u003c\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new SortTaskCommandException(\"invalidOptionRangeError\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                reply \u003d \"The task  will be sorted by \" + sort_option[option - 1] + \". \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Please click enter again to check the sorted list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                reply \u003d (new DeleteTaskCommandException(\"wrongOptionFormatError\")).getErrorMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (SortTaskCommandException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                SortTaskCommand sortTaskCommand \u003d new SortTaskCommand(sort_option[option - 1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.executeCommand(sortTaskCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.log(Level.WARNING, LOG_TAG + \": \" + ex.getStackTrace());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !this.reply.isBlank()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            : \"The reply of sort \" + currentTerm.name() + \" is blank, please check.\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of the sort task interaction.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of the sort task action.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 1,
      "wyt-sonia": 10,
      "-": 82
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/CalendarViewInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.CalendarViewCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.CalendarViewCommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.CalendarViewCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *Represents a CalendarViewInteractivePrompt."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class CalendarViewInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from calendar view command.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final String REQUIRED_DATE_MSG \u003d \"Please input the date which you want to view in this format:\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                                                + \"\\n\\n    dd/MM/yyyy\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Now viewing: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate selectedDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public CalendarViewInteractivePrompt(MainWindow mainWindow) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.CALENDAR_VIEW;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.mainWindow \u003d mainWindow;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_DATE_MSG;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.DATE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                selectedDate \u003d CalendarViewCommandParser.parseDate(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d \"The tasks with date \" + selectedDate.toString()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \" will be shown.\\nPress enter to continue.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (CalendarViewCommandException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                CalendarViewCommand cvCommand \u003d new CalendarViewCommand(selectedDate, mainWindow);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                logic.executeCommand(cvCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG + selectedDate.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                reply \u003d e.getMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 6,
      "gx-huang": 72
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/FilterTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.FILTER_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.FilterTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.FilterTaskCommandParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.FilterTaskCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatusEqualPredicate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskTypeEqualPredicate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Interaction with user for filtering tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from filter task command.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Tasks filtered successfully!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_OPTION_MSG \u003d \"Please enter your choice of filter:\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"1. Status\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"2. Type\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_TYPE_MSG \u003d \"Please enter the task type you would like to filter by:\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"1. Assignment\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"2. Quiz\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"3. Presentation\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"4. Meeting\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"5. Exam\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"6. Others\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String REQUIRED_STATUS_MSG \u003d \"Please enter the status you would like to filter by:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"1. Pending\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"2. Finished\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"3. Due soon\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            + \"4. Overdue\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskStatus status;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public FilterTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d FILTER_TASK;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.reply \u003d REQUIRED_OPTION_MSG;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.OPTION_TYPE;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case OPTION_TYPE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                index \u003d FilterTaskCommandParser.parseOptionIndex(userInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.reply \u003d REQUIRED_STATUS_MSG;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.STATUS_TYPE;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    this.reply \u003d REQUIRED_TYPE_MSG;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    currentTerm \u003d InteractivePromptTerms.TASKS_TYPE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (FilterTaskCommandException ex) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\" + REQUIRED_OPTION_MSG;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case TASKS_TYPE:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                type \u003d FilterTaskCommandParser.parseTypeIndex(userInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The tasks with type \" + type.toString() + \" will be filtered.\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please click enter again to filter.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (FilterTaskCommandException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\" + REQUIRED_TYPE_MSG;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case STATUS_TYPE:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                status \u003d FilterTaskCommandParser.parseStatusIndex(userInput);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The tasks with status \" + status.toString() + \" will be filtered.\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please click enter again to filter.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (FilterTaskCommandException ex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"\\n\" + REQUIRED_STATUS_MSG;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Predicate\u003cTask\u003e predicate \u003d null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    predicate \u003d new TaskStatusEqualPredicate(status);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    predicate \u003d new TaskTypeEqualPredicate(type);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                FilterTaskCommand filterTaskCommand \u003d new FilterTaskCommand(predicate);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(filterTaskCommand);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 120,
      "wyt-sonia": 10
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/FindTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.FIND_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.FindTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * A interactive prompt for finding tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class FindTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here are the list of tasks matching the keyword.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from find task command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String KEYWORD_PROMPT \u003d \"Please type in a keyword that you want to search for.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private String userKeyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public FindTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d FIND_TASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleQuit(userInput, QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d handleFind(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Handles the sequence of interactive find commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the input entered by the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the reply to the user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String handleFind(String userInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            this.reply \u003d KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.FIND_KEYWORD;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case FIND_KEYWORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            userKeyword \u003d userInput;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            reply \u003d getConfirmationPrompt(userKeyword);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String trimmedArgs \u003d userKeyword.trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new ParseException(\"Keyword cannot be empty string\", 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] userKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                TaskNameContainsKeywordsPredicate pred \u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    new TaskNameContainsKeywordsPredicate(Arrays.asList(userKeywords));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                FindTaskCommand findTaskCommand \u003d new FindTaskCommand(pred);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                logic.executeCommand(findTaskCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getConfirmationPrompt(String userKeyword) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"You are searching for the tasks containing \" + userKeyword + \". \\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            + \"Please click enter again to view the searched list.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getKeywordPrompt() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return KEYWORD_PROMPT;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getQuitMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return QUIT_COMMAND_MSG;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 87,
      "souwmyaa": 1,
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/HelpInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.HELP;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * The interactive prompt for the help command. Returns the help message immediately"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class HelpInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \"Here is the list of available commands:\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"1. add\\n2. archive\\n3. bye\\n4. clear\\n5. create mods\\n6. delete\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \"7. view renamed\\n8. done\\n9. edit\\n10. filter\\n11. find\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"12. help\\n13. list\\n14. sort\\n15. refresh\\n16. calendar\\n17. goal\\n\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"User Guide: https://ay1920s2-cs2103t-w16-3.github.io/main/UserGuide.html\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public HelpInteractivePrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d HELP;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getHelpMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return END_OF_COMMAND_MSG;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns the help message to the user immediately"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param userInput the help keyword"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the help message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 34,
      "souwmyaa": 4,
      "aegis-bot": 2,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/ListTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.ListTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * InteractivePrompt to list the tasks. This is useful after a Find command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Here is the complete list of unarchived tasks :)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ListTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.interactivePromptType \u003d InteractivePromptType.LIST_TASK;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        displayList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * displays the complete list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ListTaskCommand listTaskCommand \u003d new ListTaskCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            logic.executeCommand(listTaskCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // do nothing, this block should not be reached"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 39,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/RefreshTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.DUE_SOON_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.view.RefreshCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DueSoonRefreshCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a RefreshTaskInteractivePrompt, which interacts with user to refresh the tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class RefreshTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Tasks\u0027 status and Due Soon list is refreshed!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from refresh command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public RefreshTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d DUE_SOON_TASK;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                reply \u003d \"The tasks list will be refreshed.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (DueSoonRefreshCommandException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                RefreshCommand dueSoonRefreshCommand \u003d new RefreshCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(dueSoonRefreshCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 52,
      "wyt-sonia": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/interactiveprompt/view/ViewRenamedTaskInteractivePrompt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptType.VIEW_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ViewRenamedTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.ViewRenamedTaskCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskRenamedPredicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePrompt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Represents a ViewRenamedTaskInteractivePrompt, which interacts with user to View duplicate tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ViewRenamedTaskInteractivePrompt extends InteractivePrompt {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String QUIT_COMMAND_MSG \u003d \"Successfully quited from filter renamed command.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final String END_OF_COMMAND_MSG \u003d \"Filtered renamed tasks successfully!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public ViewRenamedTaskInteractivePrompt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.interactivePromptType \u003d VIEW_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public String interact(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (\"quit\".equalsIgnoreCase(userInput)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            endInteract(QUIT_COMMAND_MSG);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        switch (currentTerm) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case INIT:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d \"The renamed tasks will be filtered\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                currentTerm \u003d InteractivePromptTerms.READY_TO_EXECUTE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (ViewRenamedTaskCommandException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getErrorMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        case READY_TO_EXECUTE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                Predicate\u003cTask\u003e predicate \u003d new TaskRenamedPredicate();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                ViewRenamedTaskCommand viewRenamedTaskCommand \u003d new ViewRenamedTaskCommand(predicate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                logic.executeCommand(viewRenamedTaskCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                endInteract(END_OF_COMMAND_MSG);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } catch (CommandException | ParseException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                reply \u003d ex.getMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void endInteract(String msg) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.reply \u003d msg;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super.setEndOfCommand(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 59,
      "wyt-sonia": 8
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/DueSoonListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.card.DueSoonTaskCard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Panel containing the list of tasks Due Soon."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DueSoonListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"DueSoonListPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private ListView\u003cTask\u003e dueSoonListView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public DueSoonListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setItems(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        dueSoonListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code DetailedTaskCard}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        protected void updateItem(Task task, boolean isEmpty) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            super.updateItem(task, isEmpty);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isEmpty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                setGraphic(new DueSoonTaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 38,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/ModuleListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.card.ModCard;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ContentDisplay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.Tab;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * FXML switched to ModuleListPanel. Can show task under each module."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final String FXML \u003d \"ModuleListPanel.fxml\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cModule\u003e moduleObservableList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ObservableList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private TabPane tabPane;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Tab overview;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private ListView\u003cModule\u003e moduleListView;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList, ObservableList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.moduleObservableList \u003d moduleList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        bindTabs(moduleList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleObservableList.addListener(new ListChangeListener\u003cModule\u003e() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Module\u003e c) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindTabs(moduleList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e c) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                bindTabs(moduleList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Bind tabs when tab list updated."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param moduleList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void bindTabs(ObservableList\u003cModule\u003e moduleList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Tab overviewTab \u003d tabPane.getTabs().get(0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tabPane.getTabs().clear();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tabPane.getTabs().add(overviewTab);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleObservableList.forEach(x -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            x.filterAndSetInternalTaskList(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            String tabName;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (x.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                tabName \u003d \"No Module Allocated\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                tabName \u003d x.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            Tab newTab \u003d new Tab(tabName);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            if (!x.getInternalTaskList().isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                ListView\u003cTask\u003e taskListView \u003d new ListView\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                taskListView.setItems(x.getInternalTaskList());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                taskListView.setCellFactory(listView -\u003e new TaskListPanel.TaskListViewCell());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                taskListView.setPrefHeight(600);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newTab.setContent(taskListView);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                Label emptyLabel \u003d new Label(\"No task in this module\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setWrapText(true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setContentDisplay(ContentDisplay.CENTER);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setTextFill(Color.GRAY);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setFont(new Font(\"Arial\", 40));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                emptyLabel.setBackground(new Background("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    new BackgroundFill(Color.WHITE,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        new CornerRadii(0, 0, 10, 10, false),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        Insets.EMPTY)));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                emptyLabel.setPrefHeight(600);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                emptyLabel.prefWidthProperty().bind(tabPane.widthProperty());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                newTab.setContent(emptyLabel);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            tabPane.getTabs().add(newTab);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        moduleListView.setItems(moduleList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Represents a ModuleListViewCell."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    class ModuleListViewCell extends ListCell\u003cModule\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         * Updates item."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         * @param module"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         * @param isEmpty"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "         */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        protected void updateItem(Module module, boolean isEmpty) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            super.updateItem(module, isEmpty);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (isEmpty || module \u003d\u003d null || module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                ModCard modcard \u003d new ModCard(module, getIndex() + 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                setGraphic(modcard.getRoot());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 4,
      "aegis-bot": 86,
      "wyt-sonia": 46
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/ProductivityPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GoalObserver;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.StatsUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.control.ProgressIndicator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Productivity panel that displays usage statistics"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ProductivityPanel extends UiPart\u003cRegion\u003e implements GoalObserver {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static final String FXML \u003d \"ProductivityPanel.fxml\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private static Statistics statistics;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ProductivityPanel.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ObservableList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label menuPointsLabel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private TabPane productivityTabPane;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //daily"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label dailyStatsLabel;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label streakLabel;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ProgressIndicator progressIndicator;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Circle progressCentre;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Image grayStarImage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Image goldStarImage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView grayStarImageView;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView goldStarImageView;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //weekly"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private BarChart\u003cString, Integer\u003e weeklyBarChart;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label weeklyStatsLabel;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //score"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label ppLabel;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label rankLabel;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Label nextRankLabel;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankZeroImageView;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankOneImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankTwoImageView;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankThreeImageView;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankFourImageView;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankFiveImageView;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ImageView rankSixImageView;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private AreaChart\u003cString, Integer\u003e ppAreaChart;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private ProgressIndicator rankProgressIndicator;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public ProductivityPanel(ObservableList\u003cTask\u003e taskList, Label menuPointsLabel) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.menuPointsLabel \u003d menuPointsLabel;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        generateProductivityPanel();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityTabPane.widthProperty().addListener((observable, oldValue, newValue) -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            productivityTabPane.setTabMinWidth(productivityTabPane.getWidth() / 3 - 40);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            productivityTabPane.setTabMaxWidth(productivityTabPane.getWidth() / 3 - 40);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskList.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                generateProductivityPanel();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        statistics.setObserver(this);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static void setStatistics(Statistics statistics) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ProductivityPanel.statistics \u003d statistics;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * generates the productivity page"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void generateProductivityPanel() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderDailyTab();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderWeeklyTab();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderScoreTab();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void selectTab(int tabNumber) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        productivityTabPane.getSelectionModel().select(tabNumber);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the daily tab"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderDailyTab() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderDailyStats();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderProgressIndicator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderStreak();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the weekly tab"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderWeeklyTab() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderWeeklyStats();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderWeeklyBarChart();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the score tab"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderScoreTab() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderScore();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderRank();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderNextRank();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderRankIcon();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderAreaChart();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // daily"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * updates the daily tab when there are changes to daily goal"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void update() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        renderDailyTab();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the progress indicator"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderProgressIndicator() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskCompletedCount \u003d statistics.getCompleteCountToday();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int goal \u003d statistics.getGoal();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        double progress \u003d (double) taskCompletedCount / (double) goal;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (taskCompletedCount \u003e\u003d goal) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            goldStarImageView.setVisible(true);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            grayStarImageView.setVisible(false);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            statistics.completeDailyGoal();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        progressIndicator.setProgress(progress);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders daily stats"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderDailyStats() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int taskCompletedCount \u003d statistics.getCompleteCountToday();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int goal \u003d statistics.getGoal();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String completedString \u003d taskCompletedCount + \" / \" + goal + \" tasks\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        dailyStatsLabel.setText(completedString);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders user\u0027s streak"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderStreak() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int streak \u003d statistics.getStreak();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String streakString \u003d \"You\u0027ve completed your goal \" + streak + \" days in a row\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        streakLabel.setText(streakString);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    //weekly"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders weekly stats"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderWeeklyStats() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int weeklyTaskCompleted \u003d statistics.getCompleteCountThisWeek();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int weeklyTaskOverdue \u003d statistics.getOverdueCountThisWeek();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String weeklyStatsString \u003d \"You have completed \" + weeklyTaskCompleted + \" tasks this week\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + weeklyTaskOverdue + \" tasks were Overdue\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyStatsLabel.setText(weeklyStatsString);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the weekly bar chart"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderWeeklyBarChart() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyBarChart.setTitle(\"Task completed in last 7 days\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e dayList \u003d StatsUtil.getDayList();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyCompleteCountList \u003d statistics.getWeeklyCompleteCountList();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!weeklyBarChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            weeklyBarChart.getData().clear();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e series \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e data \u003d new XYChart.Data\u003c\u003e(dayList.get(i), weeklyCompleteCountList.get(i));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            series.getData().add(data);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyBarChart.getData().add(series);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        weeklyBarChart.setLegendVisible(false);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    // score"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the productivity points area chart"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderAreaChart() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppAreaChart.setTitle(\"Productivity Points Progression\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e dayList \u003d StatsUtil.getDayList();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cInteger\u003e weeklyScores \u003d statistics.getWeeklyScores();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        if (!ppAreaChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ppAreaChart.getData().clear();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e series \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e data \u003d new XYChart.Data\u003c\u003e(dayList.get(i), weeklyScores.get(i));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            series.getData().add(data);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppAreaChart.getData().add(series);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppAreaChart.setLegendVisible(false);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders score"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderScore() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int score \u003d statistics.getScoreToday();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String scoreString \u003d score + \" PP\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ppLabel.setText(scoreString);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // set points on the menu label"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        menuPointsLabel.setText(scoreString);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the user\u0027s rank"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderRank() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankLabel.setText(statistics.getRank());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the rank icon"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderRankIcon() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        toggleRankImageView(getRankNumberFromRank(statistics.getRank()));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int scoreDifference \u003d statistics.getScoreDifferenceForRank();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int scoreToNextRank \u003d statistics.getScoreToNextRank();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        double rankProgress \u003d (double) (scoreDifference - scoreToNextRank) / (double) scoreDifference;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankProgressIndicator.setProgress(rankProgress);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * returns a number corresponding to the rank"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param rank user\u0027s rank"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a number corresponding to the rank"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getRankNumberFromRank(String rank) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (rank) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Beginner\":"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Novice\":"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Apprentice\":"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Duke\":"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Expert\":"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case \"Master\":"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * renders the user\u0027s next rank"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void renderNextRank() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        nextRankLabel.setText(statistics.getNextRank());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * sets all rank ImageView to invisible except for one corresponding to rankNumber"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param rankNumber the rankNumber that should be set as visible"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void toggleRankImageView(int rankNumber) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        hideAllRankImageView();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        switch (rankNumber) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankZeroImageView.setVisible(true);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankOneImageView.setVisible(true);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankTwoImageView.setVisible(true);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankThreeImageView.setVisible(true);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankFourImageView.setVisible(true);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankFiveImageView.setVisible(true);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            rankSixImageView.setVisible(true);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * hides all rank ImageViews"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void hideAllRankImageView() {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankZeroImageView.setVisible(false);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankOneImageView.setVisible(false);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankTwoImageView.setVisible(false);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankThreeImageView.setVisible(false);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankFourImageView.setVisible(false);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankFiveImageView.setVisible(false);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        rankSixImageView.setVisible(false);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 366,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/TaskListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.card.DetailedTaskCard;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An UI component which represents the panel containing the list of persons."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"TaskListPanel.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskListPanel\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private ListView\u003cTask\u003e taskListView;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" : Start to set up the Task List Panel.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        taskListView.setItems(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" : End of setting up the Task List Panel.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code DetailedTaskCard}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    static class TaskListViewCell extends ListCell\u003cTask\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void updateItem(Task task, boolean isEmpty) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            super.updateItem(task, isEmpty);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isEmpty || task \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(new DetailedTaskCard(task, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                //setGraphic(new DetailedTaskCard(task, getIndex()).getRoot());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "wyt-sonia": 3,
      "-": 46
    }
  },
  {
    "path": "src/main/java/draganddrop/studybuddy/ui/panel/TaskSummaryPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static java.time.temporal.ChronoUnit.DAYS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.ui.UiPart;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.AreaChart;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.PieChart;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.StackedBarChart;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.TabPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An UI component which represents the panel containing the summary charts of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author Wang Yuting"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskSummaryPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"TaskSummaryPanel.fxml\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LOG_TAG \u003d \"TaskSummaryPanel\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TaskSummaryPanel.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private ObservableList\u003cTask\u003e tempTasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private ObservableList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private ObservableList\u003cTask\u003e selectedTasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane selectedTaskListPanelPlaceholder;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label selectedTaskListPanelTitle;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private TabPane chartsTabPane;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private PieChart taskSummaryPieChart;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private AreaChart taskSummaryAreaChart;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackedBarChart taskSummaryStackedBarChart;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskSummaryPanel(ObservableList\u003cTask\u003e observableCurrentTasks,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                            ObservableList\u003cTask\u003e observableArchivedTasks, ObservableList\u003cModule\u003e observableModules,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                            StackPane selectedTaskListPanelPlaceholder,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                            Label selectedTaskListPanelTitle) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // render nodes."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render charts from task summary panel.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedTaskListPanelPlaceholder \u003d selectedTaskListPanelPlaceholder;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedTaskListPanelTitle \u003d selectedTaskListPanelTitle;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedTaskListPanelPlaceholder.setBackground("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        renderCharts();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        renderSelectedListPanel();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        setUpOnChangeListener(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering charts from task summary panel.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Binds data and set up charts."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param observableCurrentTasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param observableArchivedTasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param observableModules"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    private void bindCharts(ObservableList\u003cTask\u003e observableCurrentTasks,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                            ObservableList\u003cTask\u003e observableArchivedTasks, ObservableList\u003cModule\u003e observableModules) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to bind data to charts.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tempTasks !\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            tempTasks.clear();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        modules \u003d observableModules;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        tempTasks.addAll(observableCurrentTasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        tempTasks.addAll(observableArchivedTasks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        setUpPieChart();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        setUpAreaChart();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        setUpBarChart();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of binding data to charts.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders the selected task list panel accordingly."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public void renderSelectedListPanel() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to render selected task list panel.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of rendering selected task list panel.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * Renders the charts."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private void renderCharts() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        // Pie chart"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryPieChart.setTitle(\"Summary of Tasks\u0027 Status\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // Area chart"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryAreaChart.setTitle(\"Summary of Module Related Tasks\u0027 Deadline/Start Date\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryAreaChart.getYAxis().setLabel(\"No of Tasks\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryAreaChart.getYAxis().setAutoRanging(true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryAreaChart.getXAxis().setLabel(\"Deadline/Start Date\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        // Bar chart"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryStackedBarChart.setTitle(\"Summary of Module Related Tasks\u0027 Weight\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryStackedBarChart.getYAxis().setLabel(\"Weight %\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryStackedBarChart.getYAxis().setAutoRanging(false);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryStackedBarChart.getXAxis().setLabel(\"Modules\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the pie chart\u0027s pie chart and data."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * The pie chart is used to show the summary of numbers of different tasks\u0027 statuses."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setUpPieChart() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" PieChart: Start to sets up the pie chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cPieChart.Data\u003e datas \u003d bindPieChartData();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        setPieChartOnClickListener(datas);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" PieChart: End of setting up the pie chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Binds the data for the stacked pie chart."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an {@code ArrayList} of {@code ieChart.Data}."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArrayList\u003cPieChart.Data\u003e bindPieChartData() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cPieChart.Data\u003e datas \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!taskSummaryPieChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            taskSummaryPieChart.getData().clear();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" PieChart: Start to bind data.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        for (TaskStatus ts : TaskStatus.getTaskStatusList()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            long count \u003d tempTasks.stream().filter(t -\u003e t.getTaskStatus().equals(ts)).count();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            PieChart.Data tempData \u003d new PieChart.Data(ts.convertToString(), count);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            datas.add(tempData);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            taskSummaryPieChart.getData().add(tempData);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        // Enhance the label information."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryPieChart.getData().forEach(data -\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            data.nameProperty().bind("
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                Bindings.concat("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                    data.getName(), \" : \", data.pieValueProperty().longValue()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                )"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" PieChart: End of binding bind data.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        return datas;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the onClick listener for the stacked pie chart."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param datas"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setPieChartOnClickListener(ArrayList\u003cPieChart.Data\u003e datas) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" PieChart: Start to set up the pie chart\u0027s onclick action.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        datas.forEach(d -\u003e d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            String statusName \u003d d.getName().split(\":\")[0].trim();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTasks \u003d tempTasks.filtered(task -\u003e {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                    TaskStatus test \u003d task.getTaskStatus();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                    TaskStatus test2 \u003d TaskStatus.getStatus(statusName);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                    return task.getTaskStatus().equals(TaskStatus.getStatus(statusName));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            );"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelTitle.setText(d.getName().toUpperCase() + \" Tasks\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" PieChart: End of setting up the pie chart\u0027s onclick action.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the area chart\u0027s data and onclick action."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     * The area chart is used to show summary of the module related dues/start dates."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restricted to the future half year."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setUpAreaChart() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" AreaChart: Start to set up the area chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        bindAreaChartData();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" AreaChart: End of setting up the area \""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"chart\u0027s data and onclick action.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the area chart\u0027s data."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    private void bindAreaChartData() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cXYChart.Series\u003cString, Number\u003e\u003e dataSeries \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!taskSummaryAreaChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            taskSummaryAreaChart.getData().clear();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cTask\u003e sortedTasks \u003d tempTasks.sorted(Comparator.comparing(t -\u003e t.getDateTimes()[0]));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!sortedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.INFO, LOG_TAG + \" AreaChart: Start to bind data.\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            // to restrict the source of data to the next 2 months"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalDate startDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableList\u003cTask\u003e filteredTasks \u003d sortedTasks"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                .filtered(task -\u003e task.getDateTimes()[0].isBefore(startDate.plusDays(2 * 30).atStartOfDay()));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalDate endDate \u003d filteredTasks.get(filteredTasks.size() - 1).getDateTimes()[0].toLocalDate();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DAYS.between(startDate, endDate) \u003e 30 * 2) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                endDate \u003d startDate.plusMonths(2);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                taskSummaryAreaChart.getXAxis().setAutoRanging(true);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalDate finalEndDate \u003d endDate;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            modules.forEach(m -\u003e {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                XYChart.Series\u003cString, Number\u003e dueDateDataSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                dueDateDataSeries.setName(getModuleTitleString(m));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                for (LocalDate d \u003d startDate; d.isBefore(finalEndDate.plusDays(1)); d \u003d d.plusDays(1)) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                    LocalDate finalD \u003d d;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                    long numOfTasksDue \u003d tempTasks.stream()"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                        .filter(t -\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                            t.getDateTimes()[0].toLocalDate().equals(finalD) \u0026\u0026 t.getModule().equals(m)).count();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                    XYChart.Data\u003cString, Number\u003e tempData \u003d"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                        new XYChart.Data\u003c\u003e(TimeParser.getDateString(d), numOfTasksDue);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                    tempData.setExtraValue(m.getModuleCode());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                    dueDateDataSeries.getData().add(tempData);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                    datas.add(tempData);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                dataSeries.add(dueDateDataSeries);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            taskSummaryAreaChart.getData().addAll(dataSeries);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.INFO, LOG_TAG + \" AreaChart: End of binding data.\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            // set up the on click listener"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            setAreaChartOnClickListenerForDataArea(datas);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            setAreaChartOnClickListenerForDataPoint(dataSeries);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the onClick listener for the area chart\u0027s data area."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param datas"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAreaChartOnClickListenerForDataArea(ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" AreaChart: Start to set up the on click action for each data area.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        datas.forEach(d -\u003e d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            String moduleCode \u003d d.getExtraValue().toString();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            String dateString \u003d d.getXValue();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            LocalDate date \u003d TimeParser.parseDate(dateString);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTasks \u003d tempTasks.filtered(task -\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                task.getModule().getModuleCode().toString().equals(moduleCode)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 task.getDateTimes()[0].toLocalDate().isEqual(date));"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            if (moduleCode.equals(new EmptyModule().getModuleCode().toString())) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks due/start on \" + dateString);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks of \" + moduleCode + \" due/start on \" + dateString);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" AreaChart: End of setting up the on click action for each data area.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the onClick listener for the area chart\u0027s data points."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dataSeries"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAreaChartOnClickListenerForDataPoint(ArrayList\u003cXYChart.Series\u003cString, Number\u003e\u003e dataSeries) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" AreaChart: Start to set up the on click action for each data point.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        dataSeries.forEach(d -\u003e d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            String moduleCode \u003d d.getName().equals(\"Not Module Related\")"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                ? new EmptyModule().getModuleCode().toString() : d.getName();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTasks \u003d tempTasks.filtered(task -\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                task.getModule().getModuleCode().toString().equals(moduleCode));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            if (moduleCode.equals(new EmptyModule().getModuleCode().toString())) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks without related module\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelTitle.setText(\"Tasks under \" + moduleCode);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        }));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" AreaChart: End of setting up the on click action for each data point.\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the stacked bar chart\u0027s data and onclick action."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "     * The bar chart is used to show the summary of module related weight status of different task types."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setUpBarChart() {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" BarChart: Start to set up the stacked bar chart\u0027s \""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"data and onclick action.\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas \u003d bindBarChartData();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        setBarChartOnClickListener(datas);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" BarChart: End of setting up the stacked bar chart\u0027s\""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            + \" data and onclick action.\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * Binds the data for the stacked bar chart."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an {@code ArrayList} of {@code XYChart.Series\u003cString, Number\u003e}."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e bindBarChartData() {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!taskSummaryStackedBarChart.getData().isEmpty()) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            taskSummaryStackedBarChart.getData().clear();"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cXYChart.Series\u003cString, Number\u003e\u003e dataSeries \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" BarChart: Start to bind data.\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        for (TaskType taskType : Arrays.asList(TaskType.getTaskTypes())) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            XYChart.Series\u003cString, Number\u003e weightDataSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            weightDataSeries.setName(taskType.toString());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            modules.forEach(m -\u003e {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                ObservableList\u003cTask\u003e filteredTasks \u003d tempTasks"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filtered(t -\u003e t.getModule().equals(m) \u0026\u0026 t.getTaskType().equals(taskType));"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                XYChart.Data\u003cString, Number\u003e tempData \u003d new XYChart.Data\u003c\u003e(getModuleTitleString(m),"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                    filteredTasks.stream().mapToDouble(Task::getWeight).sum());"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                tempData.setExtraValue(m.getModuleCode().toString() + \"//\" + taskType.toString());"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                weightDataSeries.getData().add(tempData);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                datas.add(tempData);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSeries.add(weightDataSeries);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        taskSummaryStackedBarChart.getData().addAll(dataSeries);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" BarChart: End of binding data.\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        return datas;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the onClick listener for the stacked bar chart."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param datas"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setBarChartOnClickListener(ArrayList\u003cXYChart.Data\u003cString, Number\u003e\u003e datas) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" BarChart: Start to setting up the on click action for each data area\");"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        datas.forEach(d -\u003e {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            String moduleCode \u003d (d.getExtraValue().toString().split(\"//\"))[0];"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskType \u003d (d.getExtraValue().toString().split(\"//\"))[1];"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            d.getNode().setOnMouseClicked(e -\u003e {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTasks \u003d tempTasks"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filtered(task -\u003e task.getModule().getModuleCode().toString().equals(moduleCode)"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 task.getTaskType().toString().equals(taskType));"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskListPanel taskListPanel \u003d new TaskListPanel(selectedTasks);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelTitle.setText(taskType + \" under \" + moduleCode);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedTaskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \" BarChart: End of setting up the on click action for each data area\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets up the onClick listeners for {@code observableCurrentTasks}, {@code observableArchivedTasks}"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "     * and {@code observableModules}."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param observableCurrentTasks"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param observableArchivedTasks"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param observableModules"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setUpOnChangeListener(ObservableList\u003cTask\u003e observableCurrentTasks,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                                       ObservableList\u003cTask\u003e observableArchivedTasks,"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                                       ObservableList\u003cModule\u003e observableModules) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": Start to set onchange listener for data source.\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        observableCurrentTasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e t) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                renderCharts();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        observableArchivedTasks.addListener(new ListChangeListener\u003cTask\u003e() {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            public void onChanged(Change\u003c? extends Task\u003e c) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                renderCharts();"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        observableModules.addListener(new ListChangeListener\u003cModule\u003e() {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            public void onChanged(Change\u003c? extends Module\u003e c) {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                renderCharts();"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                bindCharts(observableCurrentTasks, observableArchivedTasks, observableModules);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.log(Level.INFO, LOG_TAG + \": End of setting onchange listener for data source.\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getModuleTitleString(Module module) {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        String moduleTitleString \u003d \"\";"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        if (module.equals(new EmptyModule())) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleTitleString \u003d \"Not Module Related\";"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            moduleTitleString \u003d module.getModuleCode().toString();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return moduleTitleString;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 2,
      "wyt-sonia": 33,
      "-": 433
    }
  },
  {
    "path": "src/main/resources/view/Calendar.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003cVBox styleClass\u003d\"calender_panel\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cHBox alignment\u003d\"CENTER\" minHeight\u003d\"40.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003cButton fx:id\u003d\"prev\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickPrevious\" styleClass\u003d\"calender_btn\" text\u003d\"Previous\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003cLabel fx:id\u003d\"month\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"42.0\" styleClass\u003d\"calender_lbl_lg\" text\u003d\"Month\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"year\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"42.0\" styleClass\u003d\"calender_lbl_lg\" text\u003d\"Year\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cButton fx:id\u003d\"next\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickNext\" styleClass\u003d\"calender_btn\" text\u003d\"Next\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003cButton contentDisplay\u003d\"RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickHome\" styleClass\u003d\"calender_btn\" text\u003d\"Current Month\" GridPane.columnIndex\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets left\u003d\"20.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cGridPane prefHeight\u003d\"30.0\" prefWidth\u003d\"790.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"15.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"SUN\" GridPane.columnIndex\u003d\"0\" GridPane.halignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"MON\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"TUE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"WED\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"THU\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"FRI\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"117.0\" styleClass\u003d\"calender_lbl_sm\" text\u003d\"SAT\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    \u003cGridPane fx:id\u003d\"monthBox\" hgap\u003d\"5.0\" onMouseClicked\u003d\"#onClickDate\" prefHeight\u003d\"375\" prefWidth\u003d\"790.0\" vgap\u003d\"5.0\" BorderPane.alignment\u003d\"CENTER\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 13,
      "wyt-sonia": 55,
      "gx-huang": 35
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"40.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "               promptText\u003d\"Please enter your command here...\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cFont size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TextField\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/DetailedTaskCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox fx:id\u003d\"detailedCardPane\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"module\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Module\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"estimatedTimeCost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$estimatedTimeCost\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"description\" wrapText\u003d\"true\" alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"700\" HBox.hgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                   styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 88
    }
  },
  {
    "path": "src/main/resources/view/DueSoonListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"dueSoonListView\"  maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 3,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/main/resources/view/DueSoonTaskCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"100\" HBox.hgrow\u003d\"ALWAYS\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"weightAndModule\" styleClass\u003d\"module_lbl\" text\u003d\"\\$timeLeft\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"timeLeft\" styleClass\u003d\"due_soon_status\" text\u003d\"\\$timeLeft\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 60
    }
  },
  {
    "path": "src/main/resources/view/HelpWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 36
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"550\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Study Buddy\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        \u003cImage url\u003d\"@/images/study_buddy.png\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cURL value\u003d\"@StudyBuddyTheme.css\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cURL value\u003d\"@ProgressIndicator.css\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cVBox id\u003d\"mainContainer\" maxWidth\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cHBox VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      \u003cMenuBar fx:id\u003d\"menuBar\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"StudyBuddy\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowAllTasks\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"All Tasks\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowArchivedTasks\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Archived Tasks\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Modules\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowModules\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Show Modules\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"helpMenuItem1\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCreateMod\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Create\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                              \u003cMenuItem fx:id\u003d\"helpMenuItem11\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEditMod\" style\u003d\"-fx-font-size: 10pt;\" text\u003d\"Edit\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cgraphic\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                  \u003cLabel fx:id\u003d\"taskSummaryEntry\" onMouseClicked\u003d\"#handleShowTaskSummary\" text\u003d\"Statistics\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/graphic\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cgraphic\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                  \u003cLabel fx:id\u003d\"CalendarLabel\" onMouseClicked\u003d\"#handleShowCalendar\" text\u003d\"Calendar\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/graphic\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cgraphic\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                        \u003cLabel fx:id\u003d\"ProductivityMenuLabel\" onMouseClicked\u003d\"#handleShowProductivityDaily\" text\u003d\"Productivity\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/graphic\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cRegion fx:id\u003d\"menuSpacer\" prefHeight\u003d\"0.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"menu-bar\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003cMenuBar fx:id\u003d\"menuBar1\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003cmenus\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cgraphic\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cLabel fx:id\u003d\"menuPointsLabel\" onMouseClicked\u003d\"#handleShowProductivityPoints\" text\u003d\"Productivity: 10 PP\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/graphic\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/Menu\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003c/menus\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cPane fx:id\u003d\"mainTitleHolder\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"530.0\" prefWidth\u003d\"${mainTitleHolder.parent.width}\" style\u003d\"-fx-background-color: rgba(255, 255, 255, 0.9); -fx-background-radius: 10;\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cLabel fx:id\u003d\"mainTitle\" alignment\u003d\"CENTER\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"540.0\" prefWidth\u003d\"${mainTitleHolder.parent.width}\" style\u003d\"-fx-text-fill: rgba(123, 87, 69, 1);\" styleClass\u003d\"app_brand\" text\u003d\"Study Buddy\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Pane\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cHBox fx:id\u003d\"taskListHolder\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cVBox fx:id\u003d\"taskList\" maxHeight\u003d\"560.0\" maxWidth\u003d\"1200\" minWidth\u003d\"340\" prefHeight\u003d\"300.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cPane fx:id\u003d\"taskListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" style\u003d\"-fx-background-color: rgba(256,256,256,1); -fx-background-radius: 10 10 0 0;\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cLabel fx:id\u003d\"taskListPanelTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${taskListPanelTitleHolder.width}\" styleClass\u003d\"sub_header\" text\u003d\"All Tasks\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefWidth\u003d\"700.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"taskSummaryHolder\" prefWidth\u003d\"700.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cVBox fx:id\u003d\"dueSoonList\" maxHeight\u003d\"560.0\" minWidth\u003d\"200\" prefWidth\u003d\"600\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cPane fx:id\u003d\"dueListPanelTitleHolder\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${dueListPanelTitleHolder.parent.width}\" style\u003d\"-fx-background-color: rgba(256,256,256,1); -fx-background-radius: 10 10 0 0;\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cLabel fx:id\u003d\"dueListPanelTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" ellipsisString\u003d\"\" prefHeight\u003d\"40.0\" prefWidth\u003d\"${dueListPanelTitleHolder.width}\" styleClass\u003d\"sub_header\" text\u003d\"Tasks Due Soon\" textAlignment\u003d\"CENTER\" textOverrun\u003d\"CLIP\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                                \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"dueSoonListPanelPlaceholder\" prefWidth\u003d\"${mainTitle.parent.width}\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                      \u003cStackPane fx:id\u003d\"productivityPanelHolder\" prefHeight\u003d\"276.0\" prefWidth\u003d\"582.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003c/VBox.margin\u003e\u003c/StackPane\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cStackPane fx:id\u003d\"modulePaneHolder\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cInsets left\u003d\"11.0\" right\u003d\"11.0\" top\u003d\"11\" /\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cVBox\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"120.0\" prefHeight\u003d\"200.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cpadding\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/padding\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"40.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 32,
      "souwmyaa": 4,
      "aegis-bot": 38,
      "wyt-sonia": 48,
      "-": 31,
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/resources/view/ModCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"76.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      prefWidth\u003d\"304.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cFlowPane alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cLabel fx:id\u003d\"moduleName\" alignment\u003d\"TOP_LEFT\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"31.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                       text\u003d\"\\$moduleName\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                        \u003cFont size\u003d\"18.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \u003cLabel fx:id\u003d\"moduleCode\" prefHeight\u003d\"37.0\" prefWidth\u003d\"304.0\" text\u003d\"\\\\$moduleCode\" textFill\u003d\"#686868\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" top\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 21,
      "aegis-bot": 4,
      "wyt-sonia": 5
    }
  },
  {
    "path": "src/main/resources/view/ModuleListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox maxHeight\u003d\"490.0\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"1400\" fillWidth\u003d\"true\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "      xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cTabPane fx:id\u003d\"tabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003ctabs\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cTab fx:id\u003d\"overview\" text\u003d\"Overview\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cVBox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                \u003cListView fx:id\u003d\"moduleListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/tabs\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 24
    }
  },
  {
    "path": "src/main/resources/view/ProductivityPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.AreaChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.BarChart?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.ProgressIndicator?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cHBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cTabPane fx:id\u003d\"productivityTabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "              \u003ctabs\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cTab text\u003d\"Daily\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003ccontent\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cVBox prefHeight\u003d\"294.0\" prefWidth\u003d\"603.0\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"365.0\" prefWidth\u003d\"289.0\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"147.0\" prefWidth\u003d\"130.0\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cProgressIndicator fx:id\u003d\"progressIndicator\" layoutY\u003d\"0.20000000298023224\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"147.0\" prefWidth\u003d\"130.0\" progress\u003d\"0.0\" styleClass\u003d\"u-gold-progress\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cCircle fx:id\u003d\"progressCentre\" blendMode\u003d\"SRC_ATOP\" fill\u003d\"WHITE\" layoutX\u003d\"65.0\" layoutY\u003d\"64.3\" radius\u003d\"60.0\" stroke\u003d\"#c9c3b6\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                       \u003cImageView fx:id\u003d\"goldStarImageView\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" layoutX\u003d\"41.599998474121094\" layoutY\u003d\"38.59999389946461\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                           \u003cimage\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                               \u003cImage fx:id\u003d\"goldStarImage\" url\u003d\"@../images/rank/gold_star.png\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                           \u003c/image\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                       \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cImageView fx:id\u003d\"grayStarImageView\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" layoutX\u003d\"40.0\" layoutY\u003d\"38.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                          \u003cimage\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                              \u003cImage fx:id\u003d\"grayStarImage\" url\u003d\"@../images/rank/gray_star.png\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                          \u003c/image\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Pane\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/HBox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"preDailyStatsLabel\" text\u003d\"Daily goal: \"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"dailyStatsLabel\" text\u003d\"0 / 5 tasks \"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cpadding\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cInsets left\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/padding\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/HBox\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cVBox\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"streakLabel1\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Daily Streak\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"streakLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"You have completed your goal 0 days in a row.\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets bottom\u003d\"10.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/HBox\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003c/content\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cTab text\u003d\"Weekly\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003ccontent\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cHBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"150.0\" prefWidth\u003d\"500.0\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"51.0\" prefWidth\u003d\"242.0\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"weeklyStatsLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"46.0\" prefWidth\u003d\"242.0\" text\u003d\"You have completed 12 tasks this week\"\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets /\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cRegion VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"260.0\"\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cBarChart fx:id\u003d\"weeklyBarChart\" maxHeight\u003d\"225.0\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003cxAxis\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                              \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003cyAxis\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                              \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                            \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cpadding\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/padding\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/BarChart\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets /\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets /\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/VBox\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                     \u003c/content\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  \u003c/Tab\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003cTab text\u003d\"Productivity Points\"\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003cchildren\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cHBox\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cVBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"preRankLabel\" text\u003d\"You are a\"\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"rankLabel\" text\u003d\"Beginner\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cpadding\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cInsets left\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/padding\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cHBox\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cchildren\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"prePointsLabel\" text\u003d\"You have\"\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cLabel fx:id\u003d\"ppLabel\" text\u003d\"0 PP\"\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cfont\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/font\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cpadding\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                            \u003cInsets left\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003c/padding\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003c/Label\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/children\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cLabel fx:id\u003d\"nextRankLabel\" text\u003d\"20 PP more to become a Novice\"\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003cfont\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                      \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                   \u003c/font\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cpadding\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/padding\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cchildren\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cProgressIndicator fx:id\u003d\"rankProgressIndicator\" layoutY\u003d\"2.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"100.0\" progress\u003d\"0.0\" styleClass\u003d\"u-red-progress\" /\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cCircle fx:id\u003d\"progressCentre1\" fill\u003d\"#ffffff00\" layoutX\u003d\"50.20000076293945\" layoutY\u003d\"43.0\" radius\u003d\"43.0\" stroke\u003d\"#9c3d01\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankZeroImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankZeroImage\" url\u003d\"@../images/rank/rank0.png\" /\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankOneImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankOneImage\" url\u003d\"@../images/rank/rank1.png\" /\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankTwoImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankTwoImage\" url\u003d\"@../images/rank/rank2.png\" /\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankThreeImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cimage\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cImage fx:id\u003d\"rankThreeImage\" url\u003d\"@../images/rank/rank3.png\" /\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/image\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankFourImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankFourImage\" url\u003d\"@../images/rank/rank4.png\" /\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankFiveImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankFiveImage\" url\u003d\"@../images/rank/rank5.png\" /\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003cImageView fx:id\u003d\"rankSixImageView\" fitHeight\u003d\"73.0\" fitWidth\u003d\"73.0\" layoutX\u003d\"13.8\" layoutY\u003d\"6.3\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" visible\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003cimage\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                         \u003cImage fx:id\u003d\"rankSixImage\" url\u003d\"@../images/rank/rank6.png\" /\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                     \u003c/image\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                 \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/children\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                             \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003c/Pane\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cpadding\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets bottom\u003d\"35.0\" top\u003d\"35.0\" /\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/padding\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cInsets /\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/HBox\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cRegion VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"260.0\"\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cAreaChart fx:id\u003d\"ppAreaChart\" maxHeight\u003d\"225.0\" prefWidth\u003d\"500.0\"\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003cxAxis\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                        \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003cyAxis\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                        \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                      \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cpadding\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/padding\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                          \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                       \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                    \u003cInsets /\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                                 \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                              \u003c/HBox\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                           \u003c/children\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                \u003c/Tab\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "teikjun"
        },
        "content": "              \u003c/tabs\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "teikjun"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "teikjun"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "teikjun"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 309
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "           xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cPane maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            \u003cHBox fx:id\u003d\"resultPane\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"${resultPane.parent.height}\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                  prefWidth\u003d\"${resultPane.parent.width}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                              maxHeight\u003d\"150.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    \u003cImageView fitHeight\u003d\"120.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                               HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cimage\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cImage url\u003d\"@../images/SB.png\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/image\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/Pane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 11,
      "wyt-sonia": 16,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/StatusBarFooter.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/resources/view/TaskCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"305.0\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"index_lbl\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"index_lbl\" text\u003d\"\\$first\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" translateY\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"module\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Module\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\"/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"creationDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$creationDateTime\"/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 48
    }
  },
  {
    "path": "src/main/resources/view/TaskListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 2,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/TaskSummaryPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.chart.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cVBox maxHeight\u003d\"490.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cTabPane fx:id\u003d\"chartsTabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003ctabs\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Task Status\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cPieChart fx:id\u003d\"taskSummaryPieChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                     \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003c/padding\u003e\u003c/PieChart\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Module Related Tasks\u0027 Deadline/Start Date \"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cAreaChart fx:id\u003d\"taskSummaryAreaChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                     \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/AreaChart\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cTab text\u003d\"Module Related Task Weight\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003ccontent\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cStackedBarChart fx:id\u003d\"taskSummaryStackedBarChart\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cxAxis\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cCategoryAxis side\u003d\"BOTTOM\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cyAxis\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            \u003cNumberAxis side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                     \u003cInsets bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/StackedBarChart\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/content\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/Tab\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/tabs\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 51
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/AppParametersTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppParametersTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ParametersStub parametersStub \u003d new ParametersStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AppParameters expected \u003d new AppParameters();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validConfigPath_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", \"config.json\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        expected.setConfigPath(Paths.get(\"config.json\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_nullConfigPath_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidConfigPath_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        parametersStub.namedParameters.put(\"config\", \"a\\0\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        expected.setConfigPath(null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, AppParameters.parse(parametersStub));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class ParametersStub extends Application.Parameters {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cString\u003e getRaw() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"should not be called\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cString\u003e getUnnamed() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"should not be called\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public Map\u003cString, String\u003e getNamed() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return Collections.unmodifiableMap(namedParameters);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 57
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/ConfigTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toString_defaultObject_stringReturned() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String defaultConfigAsString \u003d \"Current log level : INFO\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Preference file Location : preferences.json\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(defaultConfigAsString, new Config().toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equalsMethod() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Config defaultConfig \u003d new Config();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(defaultConfig);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(defaultConfig.equals(defaultConfig));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 26
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/VersionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class VersionTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionConstructor_correctParameter_valueAsExpected() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(19, 10, 20, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(19, version.getMajor());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(10, version.getMinor());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(20, version.getPatch());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(true, version.isEarlyAccess());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionToString_validVersion_correctStringRepresentation() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // boundary at 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V0.0.0ea\", version.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        // normal values"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(4, 10, 5, false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V4.10.5\", version.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // big numbers"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(100, 100, 100, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"V100.100.100ea\", version.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionComparable_validVersion_compareToIsCorrect() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Version one;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Version another;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests equality"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003d\u003d 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(11, 12, 13, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(11, 12, 13, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003d\u003d 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different patch"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 5, false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different minor"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 5, 0, false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests different major"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(10, 0, 0, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests high major vs low minor"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(10, 0, 0, true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 1, 0, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003e 0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests high patch vs low minor"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 10, false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 1, 0, false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests same major minor different patch"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, false);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access vs not early access on same version number"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access lower version vs not early access higher version compare by version number first"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, false);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // Tests early access higher version vs not early access lower version compare by version number first"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(2, 15, 0, false);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(2, 15, 5, true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.compareTo(another) \u003c 0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionComparable_validVersion_hashCodeIsCorrect() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        Version version \u003d new Version(100, 100, 100, true);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(100100100, version.hashCode());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        version \u003d new Version(10, 10, 10, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1010010010, version.hashCode());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public void versionComparable_validVersion_equalIsCorrect() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Version one;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Version another;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(0, 0, 0, false);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.equals(another));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        one \u003d new Version(100, 191, 275, true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        another \u003d new Version(100, 191, 275, true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(one.equals(another));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    private void verifyVersionParsedCorrectly(String versionString,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                                              int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 133
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/core/index/IndexTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class IndexTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createOneBasedIndex() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid index"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // check equality using the same base"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Index.fromOneBased(1).getOneBased());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, Index.fromOneBased(5).getOneBased());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        // convert from one-based index to zero-based index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Index.fromOneBased(1).getZeroBased());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(4, Index.fromOneBased(5).getZeroBased());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createZeroBasedIndex() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid index"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        // check equality using the same base"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, Index.fromZeroBased(0).getZeroBased());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, Index.fromZeroBased(5).getZeroBased());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // convert from zero-based index to one-based index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, Index.fromZeroBased(0).getOneBased());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(6, Index.fromZeroBased(5).getOneBased());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        final Index fifthPersonIndex \u003d Index.fromOneBased(5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(fifthPersonIndex \u003d\u003d null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fifthPersonIndex.equals(5.0f));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "wyt-sonia": 1,
      "-": 57
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/AppUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtilTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_exitingImage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(AppUtil.getImage(\"/images/study_buddy.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_true_nothingHappens() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String errorMessage \u003d \"error message\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/CollectionUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CollectionUtilTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void requireAllNonNullVarargs() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // no arguments"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // any non-empty argument list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(new Object(), new Object());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(\"test\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with just one null at the beginning"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Object) null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(null, \"\", new Object());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(null, new Object(), new Object());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with nulls in the middle"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(\"\", null, new Object());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // argument lists with one null as the last argument"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(\"\", new Object(), null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(new Object(), new Object(), null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // null reference"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Object[]) null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside lists in the argument list are not considered"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(containingNull, new Object());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void requireAllNonNullCollection() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls in the front"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList((Object) null));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls in the middle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // lists containing nulls at the end"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // null reference"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Collections.emptyList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // list with all non-null elements"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // confirms nulls inside nested lists are not considered"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isAnyNonNull() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull((Object) null));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CollectionUtil.isAnyNonNull(new Object()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code objects} or any element of {@code objects} is null."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionThrown(Object... objects) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code collection} or any element of {@code collection} is null."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionNotThrown(Object... objects) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(objects);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CollectionUtil.requireAllNonNull(collection);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "-": 101
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/ConfigUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Config;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfigUtilTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path tempDir;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e read(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_missingFile_emptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(read(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_fileInOrder_successfullyRead() throws DataConversionException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Config expected \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"TypicalConfig.json\").get();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"EmptyConfig.json\").get();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new Config(), actual);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Config expected \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        Config actual \u003d read(\"ExtraValuesConfig.json\").get();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private Config getTypicalConfig() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Config config \u003d new Config();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setLogLevel(Level.INFO);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return config;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return ConfigUtil.readConfig(configFilePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void save_nullConfig_throwsNullPointerException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void save_nullFile_throwsNullPointerException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Config original \u003d getTypicalConfig();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(original, configFilePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setLogLevel(Level.FINE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(original, configFilePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d ConfigUtil.readConfig(configFilePath).get();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void save(Config config, String configFileInTestDataFolder) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfigUtil.saveConfig(config, configFilePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return configFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "-": 112
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/FileUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtilTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isValidPath() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        // valid path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid path"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(FileUtil.isValidPath(\"a\\0\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // null path -\u003e throws NullPointerException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "-": 21
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/JsonUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.SerializableTestClass;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TestUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Tests JSON Read and Write"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtilTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        serializableTestClass.setTestValues();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        SerializableTestClass serializableTestClass \u003d JsonUtil"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "-": 42
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/commons/util/StringUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtilTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isNonZeroUnsignedInteger() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: empty strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: not a number"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: zero"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: zero as prefix"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: signed numbers"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: numbers with white space"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: number larger than Integer.MAX_VALUE"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // EP: valid numbers, should return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for containsWordIgnoreCase --------------------------------------"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Invalid equivalence partitions for word: null, empty, multiple words"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Invalid equivalence partitions for sentence: null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * The four test cases below test one invalid input at a time."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.isContainsWordIgnoreCase(\"typical sentence\", null));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            -\u003e StringUtil.isContainsWordIgnoreCase(\"typical sentence\", \"  \"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            -\u003e StringUtil.isContainsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.isContainsWordIgnoreCase(null, \"abc\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Valid equivalence partitions for word:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - any word"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - word containing symbols/numbers"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - word with leading/trailing spaces"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Valid equivalence partitions for sentence:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - empty string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - one word"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - multiple words"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - sentence with extra spaces"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Possible scenarios returning true:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - matches first word in sentence"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - last word in sentence"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - middle word in sentence"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - matches multiple words"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Possible scenarios returning false:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - query word matches part of a sentence word"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     *   - sentence word matches part of the query word"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * The test method below tries to verify all above with a reasonably low number of test cases."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public void containsWordIgnoreCase_validInputs_correctResult() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // Empty sentence"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(StringUtil.isContainsWordIgnoreCase(\"\", \"abc\")); // Boundary case"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(StringUtil.isContainsWordIgnoreCase(\"    \", \"123\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches a partial word only"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(StringUtil.isContainsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches word in the sentence, different upper/lower case letters"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // Matches multiple words in sentence"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(StringUtil.isContainsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    //---------------- Tests for getDetails --------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Equivalence Partitions: null, valid throwable object"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getDetails_exceptionGiven() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            .contains(\"java.io.FileNotFoundException: file not found\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getDetails_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "wyt-sonia": 14,
      "-": 127
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/ClearTasksCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.delete.ClearTasksCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ClearTasksCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_emptyStudyBuddy_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, Messages.MESSAGE_CLEAR_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_nonEmptyStudyBuddy_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.setStudyBuddy(new StudyBuddy());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ClearTasksCommand(), model, Messages.MESSAGE_CLEAR_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 26
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/CommandResultTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResultTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(commandResult));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(commandResult \u003d\u003d null);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(0.5f));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"different\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hashcode() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns same hashcode"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 1,
      "-": 52
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/CommandTestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_NAME_ONE \u003d \"Project meeting\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_NAME_TWO \u003d \"Job application\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_TYPE_THREE \u003d \"Assignment\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_TASK_TYPE_FOUR \u003d \"Quiz\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DESCRIPTION_ONE \u003d \"Project\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DESCRIPTION_TWO \u003d \"Final draft of Project\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_MODULE_ONE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_MODULE_TWO \u003d \"CS2101\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DATE_ONE \u003d \"17:00 28/04/2060\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String VALID_DATE_TWO \u003d \"00:00 29/06/2040- 13:00 30/06/2040\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final String INVALID_DATE_ONE \u003d \"12/12/12\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (CommandException | ParseException ce) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * - the study buddy, filtered person list and selected person in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy expectedStudyBuddy \u003d new StudyBuddy(actualModel.getStudyBuddy());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedStudyBuddy, actualModel.getStudyBuddy());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * {@code model}\u0027s study buddy."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static void showTaskAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(task.getTaskName())));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(1, model.getFilteredTaskList().size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8,
      "souwmyaa": 84,
      "wyt-sonia": 2
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/add/AddTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void constructor_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task validTask \u003d new TaskBuilder().build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task1 \u003d new TaskBuilder().withName(\"ass1\").build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task task2 \u003d new TaskBuilder().withName(\"ass2\").build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1command \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add2command \u003d new AddTaskCommand(task2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same object -\u003e returns true"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(add1command.equals(add1command));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //same values -\u003e returns true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        AddTaskCommand add1copycommand \u003d new AddTaskCommand(task1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(add1command.equals(add1copycommand));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //different types -\u003e reutrns false"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //null -\u003e returns false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(add1command \u003d\u003d null);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        //diff task -\u003e returns false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(add1command.equals(add2command));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTaskDescription(Task target, String newTaskDescription) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTaskWeight(Task target, double newTaskWeight) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void setTaskTimeCost(Task target, double newTaskTimeCost) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public Path getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void setStudyBuddyFilePath(Path studyBuddyFilePath) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void setStudyBuddy(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void clearDueSoonList(ReadOnlyStudyBuddy newData) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void archiveTask(Task task) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void unarchiveTask(Task task) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void unarchiveDuplicateTask(Task target) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addTaskToMainList(Task target) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deleteTaskFromMainList(Task target) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void addDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void forceAddDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void deleteTask(Task target) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void addDuplicateTask(Task task, Task originalTask) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void sortDueSoonTasks(){}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTask(Task target, Task editedTask) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public boolean hasMod(Module mod) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void addMod(Module mod) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void changeModName(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void changeModCode(Module oldMod, Module newMod) throws ModuleException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        public void deleteMod(Module mod) throws ModuleException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void completeTask(Task task) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskName(Task target, String newTaskName) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskType(Task target, TaskType newTaskType) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public void setTaskDateTime(Task target, LocalDateTime[] newDateTimes) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            // empty"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public void setTaskMod(Task target, Module mod) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredTaskList() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredArchivedTaskList() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        public ObservableList\u003cModule\u003e getFilteredModuleList() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getFilteredDueSoonTaskList() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public void deleteDueSoonTask(Task task) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void sortTasks(String keyword) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * A Model stub that contains a single task."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        private final Task task;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelStubWithTask(Task task) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return this.task.isSameTask(task);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * A Model stub that always accept the task being added."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private class ModelStubAcceptingTaskAdded extends AddTaskCommandTest.ModelStub {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public void addTask(Task task) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            tasksAdded.add(task);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ReadOnlyStudyBuddy getStudyBuddy() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return new StudyBuddy();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        public boolean hasTask(Task task) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return tasksAdded.stream().anyMatch(task::isSameTask);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 35,
      "souwmyaa": 46,
      "aegis-bot": 32,
      "wyt-sonia": 20,
      "-": 10,
      "gx-huang": 184
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/add/CreateModCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.logic.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class CreateModCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module moduleA \u003d new Module(\"A\", \"CS1111\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module moduleB \u003d new Module(\"B\", \"CS2222\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addDuplicateModule_throwsCommandException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Assertions.assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addDuplicateModule_correctExceptionMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String expectedMessage \u003d CreateModCommand.MESSAGE_DUPLICATE_TASK;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            createModCommand.execute(model);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        } catch (CommandException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            assertEquals(expectedMessage, ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void addModule_success() throws CommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        String expectedMessage \u003d String.format(CreateModCommand.MESSAGE_SUCCESS, moduleB);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(moduleB);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(createModCommand.execute(model).getFeedbackToUser(), expectedMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void equalCreateModCommand() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand1 \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand2 \u003d new CreateModCommand(moduleA);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand3 \u003d new CreateModCommand(moduleB);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertTrue(createModCommand1.equals(createModCommand2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertFalse(createModCommand1.equals(createModCommand3));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 62
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/delete/DeleteTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DeleteTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand atCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(deleteFirstCommand \u003d\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 11,
      "wyt-sonia": 1,
      "gx-huang": 56
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/ArchiveTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class ArchiveTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskCommand archiveCommand \u003d new ArchiveTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand atCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(ArchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.archiveTask(taskToArchive);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommand \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveSecondCommand \u003d new ArchiveTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskCommand archiveFirstCommandCopy \u003d new ArchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommandCopy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(archiveFirstCommand \u003d\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(archiveSecondCommand));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12,
      "souwmyaa": 9,
      "wyt-sonia": 1,
      "gx-huang": 59
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/EditModCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms.CHANGE_MOD_CODE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms.CHANGE_MOD_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms.DELETE_MOD;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.ui.interactiveprompt.InteractivePromptTerms.INIT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.add.CreateModCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class EditModCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module moduleA \u003d new Module(\"A\", \"CS1111\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module moduleB \u003d new Module(\"B\", \"CS2222\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createCommandWithEmptyFirstMod_throwNullPointerException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ) -\u003e new EditModCommand(null, new EmptyModule(), CHANGE_MOD_NAME));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createCommandWithEmptySecondMod_throwNullPointerException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            ) -\u003e new EditModCommand(new EmptyModule(), null, CHANGE_MOD_NAME));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void execute_nonExistentMod_returnReply() throws CommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS2111\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name\", \"CS1111\"), null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(\"Module does not exist in Study Buddy!\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                editModCommand.execute(model).getFeedbackToUser());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void execute_invalidTerm_returnReply() throws CommandException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"\", \"CS1231\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"\", \"CS1231\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"new name\", \"CS1231\"), INIT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Did nothing! from EditModCommand.\"),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                editModCommand.execute(model));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executionChangeModuleName_success() throws CommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"name\", \"CS1231\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS1231\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"new name\", \"CS1231\"), CHANGE_MOD_NAME);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Module name Change successful!\"), editModCommand.execute(model));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(1, model.getFilteredModuleList()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModuleName().equals(\"new name\")).size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executionChangeModuleCode_success() throws CommandException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"name\", \"CS1231\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS1231\"),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name\", \"CS0000\"), CHANGE_MOD_CODE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Module code change successful!\"), editModCommand.execute(model));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(1, model.getFilteredModuleList()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModuleCode().equals(\"CS0000\")).size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executionDeleteMod_success() throws CommandException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand \u003d new CreateModCommand(new Module(\"name\", \"CS1231\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand.execute(model);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name\", \"CS1231\"),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name\", \"CS1231\"), DELETE_MOD);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new CommandResult(\"Module deleted!\"),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                    editModCommand.execute(model));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(0, model.getFilteredModuleList()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModuleCode().equals(\"CS1231\")).size());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeDuplicateMod_throwCommandException() throws CommandException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand1 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name1\", \"CS1231\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand2 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name2\", \"CS2040\"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand1.execute(model);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand2.execute(model);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name1\", \"CS1231\"),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name2\", \"CS1231\"), CHANGE_MOD_NAME);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e editModCommand.execute(model));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void executeDuplicateCode_throwCommandException() throws CommandException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand1 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name1\", \"CS1231\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        CreateModCommand createModCommand2 \u003d new CreateModCommand("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name2\", \"CS2040\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand1.execute(model);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        createModCommand2.execute(model);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        EditModCommand editModCommand \u003d new EditModCommand(new Module(\"name1\", \"CS1231\"),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                new Module(\"name1\", \"CS2040\"), CHANGE_MOD_CODE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e editModCommand.execute(model));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 126
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/edit/UnarchiveTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.logic.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_FIRST_TASK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalIndexes.INDEX_SECOND_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class UnarchiveTaskCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredArchivedTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand atCommand \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(UnarchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.unarchiveTask(taskToArchive);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveCommand \u003d new UnarchiveTaskCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task taskToArchive \u003d model.getFilteredArchivedTaskList().get(INDEX_FIRST_TASK.getZeroBased());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand atCommand \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String expectedMessage \u003d String.format(UnarchiveTaskCommand.MESSAGE_ARCHIVE_TASK_SUCCESS, taskToArchive);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        expectedModel.unarchiveTask(taskToArchive);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertCommandSuccess(atCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveFirstCommand \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveSecondCommand \u003d new UnarchiveTaskCommand(INDEX_SECOND_TASK);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskCommand archiveFirstCommandCopy \u003d new UnarchiveTaskCommand(INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertTrue(archiveFirstCommand.equals(archiveFirstCommandCopy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(archiveFirstCommand \u003d\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertFalse(archiveFirstCommand.equals(archiveSecondCommand));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 1,
      "gx-huang": 80
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/parser/interactivecommandparser/DeleteTaskCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.DeleteTaskCommandParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.DeleteTaskCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class DeleteTaskCommandParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void parse_invalidIndex_check() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(DeleteTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseIndex(\"-1\"); });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(DeleteTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseIndex(\"\"); });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(DeleteTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseIndex(\"WrongInput\"); });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 24
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/parser/interactivecommandparser/FilterTaskCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.FilterTaskCommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.FilterTaskCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FilterTaskCommandParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private FilterTaskCommandParser parser \u003d new FilterTaskCommandParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void filterTaskCommandParserTestParseStatusIndexCheck() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseStatusIndex(\"10\"); });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseStatusIndex(\"\"); });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskStatus status \u003d TaskStatus.getTaskStatusList().get(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(status, parser.parseStatusIndex(\"1\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void filterTaskCommandParserTestParseOptionIndex() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseOptionIndex(\"10\"); });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseOptionIndex(\"\"); });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(1, parser.parseOptionIndex(\"1\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void filterTaskCommandParserTestParseTypeIndex() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseTypeIndex(\"10\"); });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(FilterTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseTypeIndex(\"\"); });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskType type \u003d TaskType.getTaskTypes()[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(type, parser.parseTypeIndex(\"1\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 46
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/parser/interactivecommandparser/TaskParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.logic.commands.parser.interactivecommandparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TaskParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskParser parser \u003d new TaskParser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseNameCheck() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseName(\"Thistasknameismorethan20characterslong\"); });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseName(\"\"); });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"ValidName\", parser.parseName(\"ValidName\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseDescriptionCheck() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDescription(\"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                    + \"Thistaskdescriptionismorethan300characterslong\"); });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"ValidDescription\", parser.parseDescription(\"ValidDescription\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseDateCheck() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(\"Thisisnotavaliddate\", TaskType.Assignment); });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(\"\", TaskType.Assignment); });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:0023/03/2000\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //past date time"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Assignment); });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseAssignmentInvalidDateCheck() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:0023/03/2080\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Assignment); });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseQuizInvalidDateCheck() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Quiz); });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseExamInvalidDateCheck() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Exam); });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseMeetingInvalidDateCheck() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Meeting); });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParsePresentationInvalidDateCheck() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Presentation); });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseOthersInvalidDateCheck() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"18:00 23/03/2080 to 19:00 23/03/2080\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseDateTime(userInput, TaskType.Others); });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseInvalidTypeCheck() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"10\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseType(userInput, TaskType.getTaskTypes().length); });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseType(\"\", TaskType.getTaskTypes().length); });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseValidTypeCheck() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"1\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(TaskType.Assignment,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseType(userInput, TaskType.getTaskTypes().length));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseWeightCheck() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"1000.0\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseWeight(userInput); });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseWeight(\"\"); });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void taskParserTestTestParseEstimatedTimeCheck() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String userInput \u003d \"-6.0\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseWeight(userInput); });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(AddOrEditTaskCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            parser.parseWeight(\"\"); });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 91,
      "wyt-sonia": 35
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/sort/SortTasksCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class SortTasksCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/FindTaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.Messages;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskNameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class FindTaskCommandTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate firstPredicate \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate secondPredicate \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(findFirstCommand \u003d\u003d null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_zeroKeywords_noTaskFound() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand command \u003d new FindTaskCommand(predicate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Collections.emptyList(), model.getFilteredTaskList());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_multipleKeywords_multipleTasksFound() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Quiz\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        FindTaskCommand command \u003d new FindTaskCommand(predicate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel.updateFilteredTaskList(predicate);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(Arrays.asList(getSampleTasks()[2], getSampleTasks()[4]),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                model.getFilteredTaskList());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 9,
      "souwmyaa": 70,
      "wyt-sonia": 1,
      "gx-huang": 2
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/logic/commands/view/ListTasksCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.logic.commands.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for ListCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class ListTasksCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getStudyBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void execute_listIsFiltered_showsEverything() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        //showTaskAtIndex(model, INDEX_FIRST_TASK);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 31
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/ModelManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.StudyBuddyBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(new StudyBuddy(), new StudyBuddy(modelManager.getStudyBuddy()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"studyBuddy/file/path\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(userPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // Modifying userPrefs should not modify modelManager\u0027s userPrefs"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"new/studyBuddy/file/path\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(oldUserPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_validGuiSettings_setsGuiSettings() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setStudyBuddyFilePath(null));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath_validPath_setsStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Path path \u003d Paths.get(\"studyBuddy/file/path\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.setStudyBuddyFilePath(path);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(path, modelManager.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskNotInStudyBuddy_returnsFalse() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(modelManager.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskInStudyBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.addTask(TypicalTasks.getSampleTasks()[0]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(modelManager.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy studyBuddy \u003d new StudyBuddyBuilder().withTask(TypicalTasks.getSampleTasks()[0])"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .withTask(TypicalTasks.getSampleTasks()[1]).build();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager \u003d new ModelManager(studyBuddy, userPrefs);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ModelManager modelManagerCopy \u003d new ModelManager(studyBuddy, userPrefs);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManagerCopy));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(modelManager \u003d\u003d null);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(5));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        modelManager.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        // different userPrefs -\u003e returns false"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        differentUserPrefs.setStudyBuddyFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(studyBuddy, differentUserPrefs)));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 26,
      "wyt-sonia": 4,
      "-": 86
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/StudyBuddyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddyTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final StudyBuddy studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(Collections.emptyList(), studyBuddy.getTaskList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e studyBuddy.resetData(null));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void resetData_withValidReadOnlyStudyBuddy_replacesData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy newData \u003d TypicalTasks.getTypicalTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.resetData(newData);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(newData, studyBuddy);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_nullTask_throwsNullPointerException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e studyBuddy.hasTask(null));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskNotInStudyBuddy_returnsFalse() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(studyBuddy.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void hasTask_taskInStudyBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(TypicalTasks.getSampleTasks()[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(studyBuddy.hasTask(TypicalTasks.getSampleTasks()[0]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getTaskList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e studyBuddy.getTaskList().remove(0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * A stub ReadOnlyStudyBuddy whose tasks list can violate interface constraints."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static class StudyBuddyStub implements ReadOnlyStudyBuddy {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public List\u003cInteger\u003e getCompleteCountList() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public List\u003cInteger\u003e getOverdueCountList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public ScoreStats getScoreStats() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        public GeneralStats getGeneralStats() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getArchivedList() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cTask\u003e getDueSoonList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        public ObservableList\u003cModule\u003e getModuleList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 24,
      "souwmyaa": 85
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/UserPrefsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPref \u003d new UserPrefs();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void setStudyBuddyFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudyBuddyFilePath(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 4,
      "-": 15
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/module/ModuleCodeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleCodeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample1 \u003d \"CS1000\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample1Clone \u003d \"CS1000\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample1SmallCase \u003d \"cs1000\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String noPrefix \u003d \"2222\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String longPrefix \u003d \"FFFF11\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String longNumbers \u003d \"CS1111111111\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String noNumbers \u003d \"CS\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String sample2 \u003d \"LSM1303A\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String postfix \u003d \"CS0000X\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String noPostfix \u003d \"CS0000\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private String longPostfix \u003d \"CS0000XX\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void testSampleWith3LetterPrefix() throws ModuleException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        new ModuleCode(sample2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void postFixOptional() throws ModuleException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        new ModuleCode(postfix);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        new ModuleCode(noPostfix);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void testEqualsFunctionOnString() throws ModuleException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1, new ModuleCode(sample1).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodePostfixTooLong_throwModuleCodeException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, () -\u003e new ModuleCode(longPostfix));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void isSameModuleCode() throws ModuleException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new ModuleCode(sample1), new ModuleCode(sample1Clone));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void isSameModuleCode_smallCase() throws ModuleException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new ModuleCode(sample1), new ModuleCode(sample1SmallCase));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeNoPrefix_throwModuleCodeException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(noPrefix));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeLongPrefix_throwModuleCodeException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(longPrefix));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeLongCode_throwModuleCodeException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(longNumbers));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void moduleCodeNoNum_throwModuleCodeException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new ModuleCode(noNumbers));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 62,
      "wyt-sonia": 11
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/module/ModuleListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.TestModules;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a ModuleListTest."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleListTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void modListDuplicateMods_throwModuleCodeException() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            for (Module sampleMod: TestModules.getSampleModule()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                moduleList.add(sampleMod);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void lastModOnListIsEmptyModule() throws ModuleException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new EmptyModule());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"A\", \"CS2000\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"B\", \"CS2001\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new EmptyModule(), moduleList.get(moduleList.getSize() - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.setModuleList(List.of());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"B\", \"CS2001\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new Module(\"A\", \"CS2000\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(new EmptyModule());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(new EmptyModule(), moduleList.get(moduleList.getSize() - 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void containsModInList_returnTrue() throws ModuleException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module sample1 \u003d TestModules.getSampleModule()[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        moduleList.add(sample1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(moduleList.isContains(sample1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void containsModNotInList_returnFalse() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ModuleList moduleList \u003d new ModuleList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module sample1 \u003d TestModules.getSampleModule()[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(moduleList.isContains(sample1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void filterTaskListWorks() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module testModule \u003d TestModules.getSampleModule()[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e tasksToBeFiltered \u003d FXCollections.observableArrayList(TestModules.getSampleTask());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e expectedTasks \u003d TestModules.getSampleTask()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                .filtered(x -\u003e x.getModule().equals(testModule));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        testModule.filterAndSetInternalTaskList(tasksToBeFiltered);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(expectedTasks, testModule.getInternalTaskList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        testModule.getInternalTaskList().forEach(x -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            assertTrue(x.getModule().equals(testModule));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 67,
      "wyt-sonia": 7
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/module/ModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.model.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.testutil.TestModules;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class ModuleTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module sample1 \u003d TestModules.getSampleModule()[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module sample2 \u003d TestModules.getSampleModule()[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private Module sample3 \u003d TestModules.getSampleModule()[2];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //different name but same code -\u003e true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1, sample2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        //same name but different code -\u003e false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertNotEquals(sample1, sample3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void changeModuleNameSucceed() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sample1.setModuleName(\"New Name\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1.getModuleName(), \"New Name\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void changeModuleCodeSucceed() throws ModuleException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sample1.setModuleCode(\"CC1111\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        assertEquals(sample1.getModuleCode(), new ModuleCode(\"CC1111\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleWithNoPrefix_throwsModuleCodeException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"2312312\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleWithNoNumber_throwsModuleCodeException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"CS\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleExceedPrefixLength_throwsModuleCodeException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"CSSS1000\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void createModuleExceedLength_throwsModuleCodeException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Assert.assertThrows(ModuleException.class, ()-\u003e new Module(\"CS100000000Z\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public void testFilterTaskList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 56,
      "wyt-sonia": 6
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/task/TaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ONE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_TASK_NAME_ONE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task1 \u003d getSampleTasks()[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task2 \u003d getSampleTasks()[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void isSameTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.isSameTask(task1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(null));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_ONE).build();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(editedTask1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different description -\u003e returns false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        editedTask1 \u003d new TaskBuilder(task1).withDescription(VALID_DESCRIPTION_ONE).build();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.isSameTask(editedTask1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task task1Copy \u003d new TaskBuilder(task1).build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.equals(task1Copy));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertTrue(task1.equals(task1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(task1 \u003d\u003d null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(5));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(task2));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_ONE).build();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(editedTask1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        // different description -\u003e returns false"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        editedTask1 \u003d new TaskBuilder(task1).withDescription(VALID_DESCRIPTION_ONE).build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(task1.equals(editedTask1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 56,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/model/task/UniqueTaskListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.model.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TWO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.logic.commands.CommandTestUtil.VALID_TASK_NAME_TWO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.TaskBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class UniqueTaskListTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task1 \u003d getSampleTasks()[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private Task task2 \u003d getSampleTasks()[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestContainsNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.isContains(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestContainsTaskNotInListReturnsFalse() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertFalse(uniqueTaskList.isContains(task1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void contains_taskInList_returnsTrue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(uniqueTaskList.isContains(task1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestAddNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTaskNullTargetTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, task1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTaskNullEditedTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(task1, null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTaskTargetTaskNotInListThrowsTaskNotFoundException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(task1, task1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTaskEditedTaskIsSameTaskSuccess() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, task1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTaskEditedTaskHasSameIdentitySuccess() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Task editedTask1 \u003d new TaskBuilder(task1).withName(VALID_TASK_NAME_TWO).withDescription(VALID_DESCRIPTION_TWO)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, editedTask1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(editedTask1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTaskEditedTaskHasDifferentIdentitySuccess() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTask(task1, task2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestEemoveNullTaskThrowsNullPointerException() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestRemoveTaskDoesNotExistThrowsTaskNotFoundException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(task1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestRemoveExistingTaskRemovesTask() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.remove(task1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTasksNullUniqueTaskListThrowsNullPointerException() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTasksUniqueTaskListReplacesOwnListWithProvidedUniqueTaskList() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTasks(expectedUniqueTaskList);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTasksNullListThrowsNullPointerException() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestSetTasksListReplacesOwnListWithProvidedList() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.add(task1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        List\u003cTask\u003e taskList \u003d Collections.singletonList(task2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        uniqueTaskList.setTasks(taskList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        expectedUniqueTaskList.add(task2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(expectedUniqueTaskList, uniqueTaskList);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void uniqueTaskListTestAsUnmodifiableObservableListModifyListThrowsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, ()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 115,
      "wyt-sonia": 20
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonSerializableStudyBuddyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.InteractiveCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.testutil.TypicalTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonSerializableStudyBuddyTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudyBuddyTest\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksStudyBuddy.json\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskStudyBuddy.json\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void toModelType_typicalPersonsFile_success() throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        JsonSerializableStudyBuddy dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                JsonSerializableStudyBuddy.class).get();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StudyBuddy studyBuddyFromFile \u003d dataFromFile.toModelType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StudyBuddy typicalPersonsStudyBuddy \u003d TypicalTasks.getOnlyTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(studyBuddyFromFile, typicalPersonsStudyBuddy);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        JsonSerializableStudyBuddy dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                JsonSerializableStudyBuddy.class).get();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(InteractiveCommandException.class, dataFromFile::toModelType);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 9,
      "wyt-sonia": 3,
      "gx-huang": 26
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonStudyBuddyStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ReadOnlyStudyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class JsonStudyBuddyStorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudyBuddyStorageTest\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void readStudyBuddy_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e readStudyBuddy(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private java.util.Optional\u003cReadOnlyStudyBuddy\u003e readStudyBuddy(String filePath) throws Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return new JsonStudyBuddyStorage(Paths.get(filePath)).readStudyBuddy(addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_missingFile_emptyResult() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertFalse(readStudyBuddy(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(DataConversionException.class, () -\u003e readStudyBuddy(\"notJsonFormatStudyBuddy.json\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy_nullStudyBuddy_throwsNullPointerException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudyBuddy(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Saves {@code studyBuddy} at the specified {@code filePath}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void saveStudyBuddy(ReadOnlyStudyBuddy studyBuddy, String filePath) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            new JsonStudyBuddyStorage(Paths.get(filePath))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                .saveStudyBuddy(studyBuddy, addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void saveStudyBuddy_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudyBuddy(new StudyBuddy(), null));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 13,
      "wyt-sonia": 3,
      "-": 49
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/JsonUserPrefsStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorageTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), actual);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs expected \u003d getTypicalUserPrefs();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefs getTypicalUserPrefs() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        userPrefs.setStudyBuddyFilePath(Paths.get(\"studybuddy.json\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void savePrefs_nullPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                .saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file\", ioe);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "souwmyaa": 5,
      "-": 106
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        storageManager \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void getStudyBuddyFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertNotNull(storageManager.getStudyBuddyFilePath());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 4,
      "-": 46
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/Assert.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.function.Executable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * A set of assertion methods useful for writing tests."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Assert {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code executable} throws the {@code expectedType} Exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * with our custom {@link #assertThrows(Class, String, Executable)} method."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * To standardize API calls in this project, users should use this method instead of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Assertions#assertThrows(Class, Executable)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * If there\u0027s no need for the verification of the exception\u0027s error message, call"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link #assertThrows(Class, Executable)} instead."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertThrows(Class, Executable)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                                    Executable executable) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertEquals(expectedMessage, thrownException.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/SerializableTestClass.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * A class used to test serialization and deserialization"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class SerializableTestClass {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"listOfLocalDateTimes\\\" : \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"\\\"0001-01-01T01:01:00\\\" ],%n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  \\\"mapOfIntegerToString\\\" : {%n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"1\\\" : \\\"One\\\",%n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"2\\\" : \\\"Two\\\",%n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"    \\\"3\\\" : \\\"Three\\\"%n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"  }%n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"}\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getNameTestValue() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return NAME_TEST_VALUE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cLocalDateTime\u003e getListTestValues() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.MIN);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.MAX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return listOfLocalDateTimes;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(1, \"One\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(2, \"Two\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString.put(3, \"Three\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return mapOfIntegerToString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setTestValues() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d getNameTestValue();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        listOfLocalDateTimes \u003d getListTestValues();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        mapOfIntegerToString \u003d getHashMapTestValues();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return listOfLocalDateTimes;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return mapOfIntegerToString;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 71
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/StudyBuddyBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A utility class to help with building StudyBuddy objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * {@code StudyBuddy ab \u003d new StudyBuddyBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class StudyBuddyBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    private StudyBuddy studyBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder(StudyBuddy studyBuddy) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.studyBuddy \u003d studyBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * Adds a new {@code Person} to the {@code StudyBuddy} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddyBuilder withTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        studyBuddy.addTask(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public StudyBuddy build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return studyBuddy;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 30,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TaskBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Utility class to help build tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TaskBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_MODULE \u003d \"CS2103T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Team project\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final String DEFAULT_TASKDESCRIPTION \u003d \"Team project\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final double DEFAULT_ESTIMATEDTIME \u003d 45.5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskType DEFAULT_TASKTYPE \u003d TaskType.Others;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final TaskStatus DEFAULT_TASKSTATUS \u003d TaskStatus.PENDING;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final double DEFAULT_TASKWEIGHT \u003d 45.0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static final LocalDateTime[] DEFAULT_DATETIME \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 10/10/2020\")};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final LocalDateTime DEFAULT_CREATION_DATETIME \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Module module;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskStatus taskStatus;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDateTime[] dateTimes;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private double estimatedTimeCost;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime creationDateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d new Module(DEFAULT_MODULE, DEFAULT_MODULE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d DEFAULT_TASKTYPE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d DEFAULT_NAME;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d DEFAULT_TASKDESCRIPTION;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d DEFAULT_TASKWEIGHT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d DEFAULT_TASKSTATUS;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d DEFAULT_DATETIME;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d DEFAULT_ESTIMATEDTIME;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d DEFAULT_CREATION_DATETIME;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init new Task with parameter TaskToCopy"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder(Task taskToCopy) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        module \u003d taskToCopy.getModule();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskType \u003d taskToCopy.getTaskType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskName \u003d taskToCopy.getTaskName();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskDescription \u003d taskToCopy.getTaskDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        weight \u003d taskToCopy.getWeight();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        taskStatus \u003d taskToCopy.getTaskStatus();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dateTimes \u003d taskToCopy.getDateTimes();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        estimatedTimeCost \u003d taskToCopy.getEstimatedTimeCost();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        creationDateTime \u003d taskToCopy.getCreationDateTime();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * init taskBuilder with name as parameter."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskBuilder withName(String name) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     * init taskBuilder with description as parameter"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public TaskBuilder withDescription(String desc) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        this.taskDescription \u003d desc;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * builds task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task(module, taskType, taskName, taskDescription, weight, taskStatus,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            dateTimes, estimatedTimeCost, creationDateTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 6,
      "souwmyaa": 8,
      "wyt-sonia": 7,
      "gx-huang": 68
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TestModules.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " * A sample class for module testing. Includes modules and tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "public class TestModules {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    private static LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "            TimeParser.parseDateTime(\"23:59 21/04/2020\"), LocalDateTime.now()};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static Module[] getSampleModule() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2100 \u003d new Module(\"Computer Organisation\", \"CS2100\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2100clone1 \u003d new Module(\"dasadsa\", \"CS2100\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module cs2100clone2 \u003d new Module(\"Computers are stupid\", \"CS1111\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return new Module[] {cs2100, cs2100clone1, cs2100clone2, new EmptyModule()};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    public static ObservableList\u003cTask\u003e getSampleTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        Module[] modArr \u003d getSampleModule();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        ObservableList\u003cTask\u003e sampleTaskList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[0], TaskType.Assignment, \"Ass 1\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[0], TaskType.Presentation, \"Presentation 1\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                3.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[3], TaskType.Assignment, \"Quiz 1\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        sampleTaskList.add(new Task(modArr[3], TaskType.Meeting, \"Meeting 1\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, LocalDateTime.now()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        return sampleTaskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aegis-bot": 45
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class for test cases."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestUtil {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Folder used for temp files created during testing. Ignored by Git."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Appends {@code fileName} to the sandbox folder path and returns the resulting path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the sandbox folder if it doesn\u0027t exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Path getFilePathInSandboxFolder(String fileName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(SANDBOX_FOLDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return SANDBOX_FOLDER.resolve(fileName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the middle index of the person in the {@code model}\u0027s person list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index getMidIndex(Model model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the last index of the person in the {@code model}\u0027s person list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index getLastIndex(Model model) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return Index.fromOneBased(model.getFilteredTaskList().size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the person in the {@code model}\u0027s person list at {@code index}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static Task getTask(Model model, Index index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        return model.getFilteredTaskList().get(index.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4,
      "souwmyaa": 4,
      "-": 47
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TypicalIndexes.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.commons.core.index.Index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * A utility class containing a list of {@code Index} objects to be used in tests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "public class TypicalIndexes {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 2,
      "souwmyaa": 9
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/testutil/TypicalTasks.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.StudyBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * represents a typical task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TypicalTasks {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String LONG_DESC_WITH_300_CHAR \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            + \"This is a long task description with 300 characters. 12345678901234567890123456789012345678901234567\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private static final String SHORT_DESC \u003d \"This is a short description.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Module emptyModule \u003d new EmptyModule();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Module cs2103T \u003d new Module(\"Software Engineering\", \"CS2103T\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final Module cs2101 \u003d new Module(\"Effective Communication for Computing Professionals\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \"CS2101\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime pastDateTime1 \u003d TimeParser.parseDateTime(\"20:22 02/04/2020\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] dateTimesOne \u003d {TimeParser.parseDateTime(\"23:59 12/12/2020\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 21/12/2020\")};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] dateTimesTwo \u003d {TimeParser.parseDateTime(\"23:59 12/04/2020\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        TimeParser.parseDateTime(\"23:59 21/04/2020\")};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime creationDateTime \u003d LocalDateTime.now().minusDays(6);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] dueSoonDuration1 \u003d {LocalDateTime.now().plusDays(3),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime.now().plusDays(7)};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static final LocalDateTime[] pendingDuration1 \u003d {LocalDateTime.now().plusDays(10),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDateTime.now().plusDays(17)};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Task[] getSampleTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(emptyModule, TaskType.Others, \"Homework 1\", SHORT_DESC, 20.0,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.PENDING, pendingDuration1, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(emptyModule, TaskType.Presentation, \"Leadership Presentation 1\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                LONG_DESC_WITH_300_CHAR, 0.0, TaskStatus.FINISHED, dueSoonDuration1,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                3.0, pastDateTime1),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new Task(cs2101, TaskType.Assignment, \"CS2101 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                15.0, TaskStatus.PENDING, dateTimesOne, 2.0, pastDateTime1),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Group Meeting 1\", LONG_DESC_WITH_300_CHAR, 15.0,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.FINISHED, dueSoonDuration1, 5.0, pastDateTime1),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Quiz, \"CS2101 Quiz 1\", SHORT_DESC,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                15.0, TaskStatus.PENDING, pendingDuration1, 2.0, pastDateTime1)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static Task[] getSampleArchivedTasks() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new Task[]{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Ass 2\", \"taskDescription\", 20.0,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.PENDING, dateTimesOne, 5.0, creationDateTime),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Presentation, \"Presentation 2\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \"Presentation taskDescription\", 20.0, TaskStatus.FINISHED, dateTimesOne,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                3.0, creationDateTime),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 2\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, creationDateTime),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2101, TaskType.Meeting, \"Meeting 2\", \"Meeting desc\", 20.0,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                TaskStatus.PENDING, dateTimesTwo, 15.0, creationDateTime),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            new Task(cs2103T, TaskType.Assignment, \"Quiz 2\", \"Quiz taskDescription\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                2.0, TaskStatus.PENDING, dateTimesTwo, 1.0, creationDateTime),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public static StudyBuddy getTypicalTaskList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        StudyBuddy sampleAb \u003d new StudyBuddy();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task sampleTask : getSampleTasks()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sampleAb.addTask(sampleTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task sampleTask : getSampleArchivedTasks()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sampleAb.addArchiveTask(sampleTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static StudyBuddy getOnlyTaskList() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new StudyBuddy();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7,
      "souwmyaa": 2,
      "wyt-sonia": 20,
      "gx-huang": 63
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/MainWindowTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class MainWindowTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/ResultDisplayTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ResultDisplayTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/TestFxmlObject.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.beans.DefaultProperty;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A test object which can be constructed via an FXML file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@DefaultProperty(\"text\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestFxmlObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TestFxmlObject() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public TestFxmlObject(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        setText(text);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setText(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            || (other instanceof TestFxmlObject // instanceof handles nulls"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 2,
      "-": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/UiPartTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.MainApp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.testutil.Assert;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiPartTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullFileUrl_throwsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidFileUrl_throwsAssertionError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_validFileUrl_loadsFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_validFileWithFxRootUrl_loadsFile() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        TestFxmlObject root \u003d new TestFxmlObject();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullFileName_throwsNullPointerException() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_missingFileName_throwsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidFileName_throwsAssertionError() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    private URL getTestFileUrl(String testFilePath) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        String testFilePathInView \u003d \"/view/\" + testFilePath;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFileUrl;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * UiPart used for testing."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        @FXML"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        private TestFxmlObject validFileRoot; // Check that @FXML annotations work"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(URL fxmlFileUrl, T root) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileUrl, root);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(String fxmlFileName, T root) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileName, root);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(URL fxmlFileUrl) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileUrl);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(VALID_FILE_ROOT, validFileRoot);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        TestUiPart(String fxmlFileName) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            super(fxmlFileName);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(VALID_FILE_ROOT, validFileRoot);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 3,
      "souwmyaa": 13,
      "-": 99
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/add/AddTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TestModules.getSampleModule;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class AddTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private AddTaskInteractivePrompt prompt \u003d new AddTaskInteractivePrompt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime endDateTime \u003d LocalDateTime.now().plusDays(20);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LocalDateTime startDateTime \u003d LocalDateTime.now().plusDays(10);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StorageManager storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LogicManager logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Module m : getSampleModule()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logicStub.getStudyBuddy().getModuleList().add(m);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\").contains(prompt.REQUIRED_MODULE_MSG));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(AddTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractMultipleModuleIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractMultipleModuleIndexWrongFormatFollowByValidIndexReturnMessage() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"1\").contains(\"The module has been set as: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + modelStub.getStudyBuddy().getModuleList().get(0).toString()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleCodeReturnMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Module module \u003d modelStub.getStudyBuddy().getModuleList().get(0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(module.getModuleCode().toString())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"The module has been set as: \" + module.toString()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractInvalidModuleCodeReturnMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"CSCSCS\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleIndexOutOfRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"0\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractModuleIndexOutOfRangeSizePluOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d modelStub.getStudyBuddy().getModuleList().size();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + 1 + \"\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidModuleCodeReturnMessage() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String code \u003d modelStub.getStudyBuddy().getModuleList().get(0).getModuleCode().toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(code)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(code));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractPastDateTimeReturnErrorMessage() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime pastDateTime \u003d LocalDateTime.now().minusDays(1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(TimeParser.getDateTimeString(pastDateTime))"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"pastDateTime\").getErrorMessage()));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEndBeforeStartDateTimeReturnErrorMessage() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(TimeParser.getDateTimeString(endDateTime)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(startDateTime))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"eventEndBeforeStartError\").getErrorMessage()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidDateTimeReturnMessage() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime))"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(TimeParser.getDateTimeString(startDateTime) + \"-\" + TimeParser.getDateTimeString(endDateTime)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyTaskIndexReturnErrorMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"emptyInputError\").getErrorMessage()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyTaskNameReturnErrorMessage() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"emptyInputError\").getErrorMessage()));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractTooLongTaskNameReturnErrorMessage() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String longTaskName \u003d \"This Task Name is Longer Than 20 Char\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(longTaskName)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"taskNameLengthError\").getErrorMessage()));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidTaskNameReturnMessage() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"taskName\")"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"The name of task is set to: taskName.\"));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTaskTypeIndexFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTaskTypeIndexRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"0\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"0\")"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTaskTypeIndexRangeSizePlusOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d TaskType.getTaskTypes().length;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + 1 + \"\")"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidTaskTypeIndexReturnMessage() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d TaskType.getTaskTypes().length;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + \"\")"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(TaskType.getTaskTypes()[size - 1].toString()));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractTooLongTaskDescIndexReturnErrorMessage() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String longTaskDescription \u003d \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Thistaskdescriptionismorethan300characterslong\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(longTaskDescription)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"taskDescriptionLengthError\").getErrorMessage()));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyTaskDescIndexReturnMessage() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"Please enter the weight of the task or press enter to skip.\"));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongWeightFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongWeightFormat\")"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongWeightValueOver100ReturnErrorMessage() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"101\")"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongWeightValueNegativeReturnErrorMessage() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"-1\")"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractEmptyWeightReturnMessage() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\")"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"Please enter the estimated number of hours cost or press enter to skip.\"));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidWeightValueReturnMessage() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"10\")"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"Please enter the estimated number of hours cost or press enter to skip.\"));"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTimeCostFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongTimeCostFormat\")"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongEstimatedTimeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractWrongTimeCostValueNegativeReturnErrorMessage() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"-1\")"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongEstimatedTimeRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTaskInteractivePromptTestInteractValidTimeCostValueReturnMessage() {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"taskName\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(TimeParser.getDateTimeString(startDateTime)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"-\" + TimeParser.getDateTimeString(endDateTime));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"10\")"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(\"The estimated number of hours the task might take has been set as 10\"));"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "wyt-sonia": 344,
      "gx-huang": 30
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/add/CreateModuleInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TestModules.getSampleModule;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.Module;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.exceptions.ModuleException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class CreateModuleInteractivePromptTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private CreateModuleInteractivePrompt prompt \u003d new CreateModuleInteractivePrompt();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        StorageManager storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LogicManager logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Module m : getSampleModule()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            logicStub.getStudyBuddy().getModuleList().add(m);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please key in the name of the module that you want to create\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(CreateModuleInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"Software engineering\").contains(\"Software engineering\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactThirdInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"CS1101S\").contains(\"CS1101S\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactFourthInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"CS1101S\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(CreateModuleInteractivePrompt.SUCCESS_COMMAND_MSG, prompt.interact(\"\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactNoModuleNameReturnCorrectReply() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"\").contains(new ModuleException(\"emptyInputError\").getErrorMessage()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void interactInvalidModuleCodeReturnErrorMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "        prompt.interact(\"a\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"Csdsdsa\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new ModuleException(\"wrongModuleCodeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"C111\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new ModuleException(\"wrongModuleCodeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"C1110\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new ModuleException(\"wrongModuleCodeFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void endInteract_test() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.endInteract(\"a\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "aegis-bot": 20,
      "wyt-sonia": 49,
      "gx-huang": 32
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/delete/ClearTasksInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class ClearTasksInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ClearTasksInteractivePrompt prompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(ClearTasksInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ClearTasksInteractivePrompt prompt \u003d new ClearTasksInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Are you sure you want to clear all your tasks?\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                        + \"Please enter yes to continue and no to go back.\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 25
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/delete/DeleteTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class DeleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String fieldsString \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(DeleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to delete.\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DeleteTaskInteractivePrompt prompt \u003d new DeleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String reply \u003d \"The task \" + model.getStudyBuddy().getTaskList().get(0).getTaskName()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" will be deleted. \\n \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \" Please click enter again to make the desired deletion.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(reply, reply);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5,
      "wyt-sonia": 3,
      "gx-huang": 33
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/ArchiveTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class ArchiveTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e(Arrays.asList(getSampleTasks()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task.updateCurrentTaskList(temp);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(ArchiveTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to archive.\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"The task \" + Task.getCurrentTasks().get(0).getTaskName() + \" will be archived. \\n\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \"Please press enter again to make the desired changes.\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactThirdInputReturnPrompt() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArchiveTaskInteractivePrompt prompt \u003d new ArchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 22,
      "gx-huang": 35
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/CompleteTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class CompleteTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CompleteTaskInteractivePrompt prompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(CompleteTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        CompleteTaskInteractivePrompt prompt \u003d new CompleteTaskInteractivePrompt();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"Please enter the index number of task you wish to mark as Finished.\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 21,
      "aegis-bot": 2,
      "wyt-sonia": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/EditTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.TimeParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.module.EmptyModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskField;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.model.task.TaskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " * This is the test class for clear tasks interactive prompt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "class EditTaskInteractivePromptTestTest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private StorageManager storageStub;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private LogicManager logicStub;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private EditTaskInteractivePrompt prompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        EditTaskInteractivePrompt prompt \u003d new EditTaskInteractivePrompt();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(EditTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(\"Please enter the index of the task that you wish to edit.\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            prompt.interact(\"\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexLowerBoundaryReturnMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e tasksStub \u003d modelStub.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String lowerBoundary \u003d \"1\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String expectedLowerResponse \u003d \"Please choose the field that you wish to edit for task: \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + tasksStub.get(0).getTaskName() + \".\\n\\n\" + TaskField.getFieldString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String actualLowerResponse \u003d prompt.interact(lowerBoundary);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(expectedLowerResponse, actualLowerResponse);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexHigherBoundaryReturnMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e tasksStub \u003d modelStub.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int taskListSize \u003d tasksStub.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String higherBoundary \u003d \"\" + taskListSize;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String expectedHigherResponse \u003d \"Please choose the field that you wish to edit for task: \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + tasksStub.get(taskListSize - 1).getTaskName() + \".\\n\\n\" + TaskField.getFieldString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String actualHigherResponse \u003d prompt.interact(higherBoundary);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(expectedHigherResponse, actualHigherResponse);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexOutOfRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String zero \u003d \"0\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prompt.interact(zero));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexOutOfRangeSizePlusOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cTask\u003e tasksStub \u003d modelStub.getStudyBuddy().getTaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int taskListSizePlusOne \u003d tasksStub.size() + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prompt.interact(taskListSizePlusOne + \"\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage(),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prompt.interact(\"wrongIndexFormat\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskFieldIndexWrongFormatReturnErrorMessage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"wrongIndexFormat\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"wrongIndexFormat\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongIndexFormatError\").getErrorMessage()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskFieldIndexOutOfRangeZeroReturnErrorMessage() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"0\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskFieldIndexOutOfRangeSizePlusOneReturnErrorMessage() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int size \u003d TaskField.values().length;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(size + 1 + \"\")"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"invalidIndexRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskEmptyNameErrorReturnErrorMessage() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String expectedResponse \u003d new AddOrEditTaskCommandException(\"emptyInputError\").getErrorMessage() + \"\\n\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Please enter the task name.\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(expectedResponse, prompt.interact(\"\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskWeightErrorReturnErrorMessage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"6\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"101\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestTaskWeightErrorNegativeReturnErrorMessage() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"6\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"-1\")"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"wrongWeightRangeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskTypeFromOtherToAssignmentReturnErrorMessage() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"3\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"1\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"changeOtherTaskTypeToAssignmentError\").getErrorMessage()));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskTypeFromAssignmentToOtherReturnErrorMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"3\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"3\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertTrue(prompt.interact(\"4\")"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            .contains(new AddOrEditTaskCommandException(\"changeAssignmentToOtherTaskTypeError\").getErrorMessage()));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskNameReturnMessage() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String newName \u003d \"new task name\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(newName);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(newName, modelStub.getStudyBuddy().getTaskList().get(1).getTaskName());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditModuleReturnMessage() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(new EmptyModule(), modelStub.getStudyBuddy().getTaskList().get(1).getModule());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskWeightReturnMessage() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"6\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"0.0\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(0.0, modelStub.getStudyBuddy().getTaskList().get(1).getWeight());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskDescriptionReturnMessage() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String taskDescription \u003d \"taskDescription\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"5\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(taskDescription);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(taskDescription, modelStub.getStudyBuddy().getTaskList().get(1).getTaskDescription());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskTimeCostReturnMessage() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        double timeCost \u003d 10.0;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"2\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"7\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(timeCost + \"\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(timeCost, modelStub.getStudyBuddy().getTaskList().get(1).getEstimatedTimeCost());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void editTaskPromptTestEditTaskDateReturnMessage() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task t : modelStub.getStudyBuddy().getTaskList()) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (t.getTaskType().equals(TaskType.Assignment)) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                index \u003d modelStub.getStudyBuddy().getTaskList().indexOf(t);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String dateTime \u003d TimeParser.getDateTimeString(LocalDateTime.now().plusDays(10));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(index + 1 + \"\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(\"4\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        prompt.interact(dateTime);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(dateTime,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TimeParser.getDateTimeString(modelStub.getStudyBuddy().getTaskList().get(index).getDateTimes()[0]));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 19,
      "wyt-sonia": 229,
      "gx-huang": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/SetGoalInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getTypicalTaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.logic.LogicManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import draganddrop.studybuddy.logic.parser.interactivecommandparser.exceptions.AddOrEditTaskCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.CompletionStats;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.GeneralStats;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.OverdueStats;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.ScoreStats;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.model.statistics.Statistics;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonStudyBuddyStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import draganddrop.studybuddy.storage.StorageManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class SetGoalInteractivePromptTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private StorageManager storageStub;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private LogicManager logicStub;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private SetGoalInteractivePrompt prompt \u003d new SetGoalInteractivePrompt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Model modelStub \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Statistics statistics \u003d new Statistics(new GeneralStats(), new CompletionStats(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        new OverdueStats(), new ScoreStats());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        JsonStudyBuddyStorage studyBuddyStorage \u003d new JsonStudyBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        storageStub \u003d new StorageManager(studyBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        logicStub \u003d new LogicManager(modelStub, storageStub);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.setLogic(logicStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        SetGoalInteractivePrompt.setStatistics(statistics);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void handleSetGoal() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.parseGoalValue(\"14\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(14, statistics.getGoal());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void interact() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"goal\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getEndOfCommandMsg(), prompt.interact(\"15\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void interactValidInputCorrectStatistics() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"goal\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"16\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(statistics.getGoal(), 16);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    void interactInvalidInputGetException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"goal\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"102\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String errorMessage \u003d (new AddOrEditTaskCommandException(\"invalidIndexRangeError\")).getErrorMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(errorMessage, prompt.interact(\"102\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 76,
      "wyt-sonia": 2
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/edit/UnarchiveTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static draganddrop.studybuddy.testutil.TypicalTasks.getSampleArchivedTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import draganddrop.studybuddy.model.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "class UnarchiveTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e(Arrays.asList(getSampleArchivedTasks()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task.updateArchivedTaskList(temp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactQuitCommandReturnMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(UnarchiveTaskInteractivePrompt.QUIT_COMMAND_MSG, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactFirstInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"Please enter the index number of the archived task.\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactSecondInputReturnKeywordPrompt() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"The task \" + Task.getArchivedTasks().get(0).getTaskName() + \" will be retrieved. \\n\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        + \"Please press enter again to make the desired changes.\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                prompt.interact(\"1\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void interactThirdInputReturnPrompt() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UnarchiveTaskInteractivePrompt prompt \u003d new UnarchiveTaskInteractivePrompt();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        prompt.interact(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertThrows(NullPointerException.class, ()-\u003eprompt.interact(\"\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 52
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/FindTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class FindTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getKeywordPrompt(), prompt.interact(\"find\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        prompt.interact(\"find\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getConfirmationPrompt(\"randomKeyword\"), prompt.interact(\"randomKeyword\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact_quitCommand_returnQuitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        FindTaskInteractivePrompt prompt \u003d new FindTaskInteractivePrompt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(prompt.getQuitMessage(), prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 26,
      "aegis-bot": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/HelpInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aegis-bot"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "class HelpInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private HelpInteractivePrompt hip \u003d new HelpInteractivePrompt();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void interact() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assertEquals(hip.interact(\"help\"), HelpInteractivePrompt.getHelpMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13,
      "aegis-bot": 1
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/ListTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/interactiveprompt/view/RefreshTaskInteractivePromptTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "package draganddrop.studybuddy.ui.interactiveprompt.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "class RefreshTaskInteractivePromptTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_firstInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        RefreshTaskInteractivePrompt prompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String reply \u003d \"The tasks list will be refreshed.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "                + \" Please press enter again to make the desired changes.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(reply, prompt.interact(\"refresh\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_secondInput_returnKeywordPrompt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        RefreshTaskInteractivePrompt prompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        prompt.interact(\"refresh\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String reply \u003d \"Tasks\u0027 status and Due Soon list is refreshed!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            assertEquals(reply, prompt.interact(\"/n\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    public void interact_quitCommand_returnQuitMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        RefreshTaskInteractivePrompt prompt \u003d new RefreshTaskInteractivePrompt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        String reply \u003d \"Successfully quited from refresh command.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "        assertEquals(reply, prompt.interact(\"quit\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "souwmyaa": 33,
      "wyt-sonia": 3
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/panel/DueSoonListPanelTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DueSoonListPanelTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/panel/ModuleListPanelTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ModuleListPanelTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/panel/TaskListPanelTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskListPanelTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4
    }
  },
  {
    "path": "src/test/java/draganddrop/studybuddy/ui/panel/TaskSummaryPanelTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package draganddrop.studybuddy.ui.panel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskSummaryPanelTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 10
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFile.fxml",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import draganddrop.studybuddy.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "-": 3
    }
  },
  {
    "path": "src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "\u003c?import draganddrop.studybuddy.ui.TestFxmlObject?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "souwmyaa"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"TestFxmlObject\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctext\u003eHello World!\u003c/text\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teikjun": 1,
      "souwmyaa": 1,
      "wyt-sonia": 1,
      "-": 4
    }
  }
]
